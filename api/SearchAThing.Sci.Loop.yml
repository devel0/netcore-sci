### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Loop
  commentId: T:SearchAThing.Sci.Loop
  id: Loop
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Loop.#ctor(System.Double,SearchAThing.Sci.Plane3D,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},System.Boolean,System.Boolean)
  - SearchAThing.Sci.Loop.#ctor(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},SearchAThing.Sci.Plane3D,System.Boolean)
  - SearchAThing.Sci.Loop.#ctor(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},System.Boolean,System.Boolean)
  - SearchAThing.Sci.Loop.#ctor(System.Double,netDxf.Entities.Polyline2D)
  - SearchAThing.Sci.Loop.A0ProgeCadScript
  - SearchAThing.Sci.Loop.A0QCadScript
  - SearchAThing.Sci.Loop.Area
  - SearchAThing.Sci.Loop.BBox
  - SearchAThing.Sci.Loop.CSBox
  - SearchAThing.Sci.Loop.Contains(System.Double,SearchAThing.Sci.Edge,SearchAThing.Sci.LoopContainsEdgeMode)
  - SearchAThing.Sci.Loop.Contains(System.Double,SearchAThing.Sci.Loop,SearchAThing.Sci.LoopContainsEdgeMode)
  - SearchAThing.Sci.Loop.ContainsPoint(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.LoopContainsPointMode)
  - SearchAThing.Sci.Loop.DebugDump(System.Int32)
  - SearchAThing.Sci.Loop.DxfEntity(System.Double)
  - SearchAThing.Sci.Loop.Edges
  - SearchAThing.Sci.Loop.Equals(System.Double,SearchAThing.Sci.Loop)
  - SearchAThing.Sci.Loop.InvertSense(System.Double)
  - SearchAThing.Sci.Loop.Length
  - SearchAThing.Sci.Loop.MidPoint
  - SearchAThing.Sci.Loop.Move(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Loop.Plane
  - SearchAThing.Sci.Loop.ProgeCadScript(System.Boolean)
  - SearchAThing.Sci.Loop.QCadScript(System.Boolean)
  - SearchAThing.Sci.Loop.ToHatch(System.Double,netDxf.Entities.HatchPattern,System.Boolean)
  - SearchAThing.Sci.Loop.ToLwPolyline(System.Double)
  - SearchAThing.Sci.Loop.ToString
  - SearchAThing.Sci.Loop.Tol
  - SearchAThing.Sci.Loop.Vertexes(System.Double)
  langs:
  - csharp
  - vb
  name: Loop
  nameWithType: Loop
  fullName: SearchAThing.Sci.Loop
  type: Class
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Loop
    path: src/sci/Loop.cs
    startLine: 46
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: planar edges loop containing line and arcs
  example: []
  syntax:
    content: public class Loop
    content.vb: Public Class [Loop]
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - SearchAThing.Sci.Loop.SearchAThing.Sci.Ext.ToFace
- uid: SearchAThing.Sci.Loop.Plane
  commentId: P:SearchAThing.Sci.Loop.Plane
  id: Plane
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Plane
  nameWithType: Loop.Plane
  fullName: SearchAThing.Sci.Loop.Plane
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Plane
    path: src/sci/Loop.cs
    startLine: 52
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: plane where loop edges resides
  example: []
  syntax:
    content: public Plane3D Plane { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Plane3D
    content.vb: Public Property Plane As Plane3D
  overload: SearchAThing.Sci.Loop.Plane*
- uid: SearchAThing.Sci.Loop.Edges
  commentId: P:SearchAThing.Sci.Loop.Edges
  id: Edges
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Edges
  nameWithType: Loop.Edges
  fullName: SearchAThing.Sci.Loop.Edges
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Edges
    path: src/sci/Loop.cs
    startLine: 57
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: loop edges ( line, arc )
  example: []
  syntax:
    content: public IReadOnlyList<Edge> Edges { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Edge}
    content.vb: Public Property Edges As IReadOnlyList(Of Edge)
  overload: SearchAThing.Sci.Loop.Edges*
- uid: SearchAThing.Sci.Loop.Equals(System.Double,SearchAThing.Sci.Loop)
  commentId: M:SearchAThing.Sci.Loop.Equals(System.Double,SearchAThing.Sci.Loop)
  id: Equals(System.Double,SearchAThing.Sci.Loop)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Equals(double, Loop)
  nameWithType: Loop.Equals(double, Loop)
  fullName: SearchAThing.Sci.Loop.Equals(double, SearchAThing.Sci.Loop)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Equals
    path: src/sci/Loop.cs
    startLine: 62
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: check if two loops equals
  example: []
  syntax:
    content: public bool Equals(double tol, Loop other)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Loop
    return:
      type: System.Boolean
    content.vb: Public Function Equals(tol As Double, other As [Loop]) As Boolean
  overload: SearchAThing.Sci.Loop.Equals*
  nameWithType.vb: Loop.Equals(Double, Loop)
  fullName.vb: SearchAThing.Sci.Loop.Equals(Double, SearchAThing.Sci.Loop)
  name.vb: Equals(Double, Loop)
- uid: SearchAThing.Sci.Loop.Vertexes(System.Double)
  commentId: M:SearchAThing.Sci.Loop.Vertexes(System.Double)
  id: Vertexes(System.Double)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Vertexes(double)
  nameWithType: Loop.Vertexes(double)
  fullName: SearchAThing.Sci.Loop.Vertexes(double)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Vertexes
    path: src/sci/Loop.cs
    startLine: 79
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: loop edge distinct filtered vertexes ( not optimized )
  example: []
  syntax:
    content: public IEnumerable<Vector3D> Vertexes(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Function Vertexes(tol As Double) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Loop.Vertexes*
  nameWithType.vb: Loop.Vertexes(Double)
  fullName.vb: SearchAThing.Sci.Loop.Vertexes(Double)
  name.vb: Vertexes(Double)
- uid: SearchAThing.Sci.Loop.Tol
  commentId: P:SearchAThing.Sci.Loop.Tol
  id: Tol
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Tol
  nameWithType: Loop.Tol
  fullName: SearchAThing.Sci.Loop.Tol
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Tol
    path: src/sci/Loop.cs
    startLine: 82
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public double Tol { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Tol As Double
  overload: SearchAThing.Sci.Loop.Tol*
- uid: SearchAThing.Sci.Loop.#ctor(System.Double,SearchAThing.Sci.Plane3D,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.Loop.#ctor(System.Double,SearchAThing.Sci.Plane3D,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},System.Boolean,System.Boolean)
  id: '#ctor(System.Double,SearchAThing.Sci.Plane3D,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},System.Boolean,System.Boolean)'
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Loop(double, Plane3D, IEnumerable<Edge>, bool, bool)
  nameWithType: Loop.Loop(double, Plane3D, IEnumerable<Edge>, bool, bool)
  fullName: SearchAThing.Sci.Loop.Loop(double, SearchAThing.Sci.Plane3D, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Edge>, bool, bool)
  type: Constructor
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Loop.cs
    startLine: 95
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: 'precondition: edges must lie on given plane'
  example: []
  syntax:
    content: public Loop(double tol, Plane3D plane, IEnumerable<Edge> _edges, bool checkSense, bool checkSort = false)
    parameters:
    - id: tol
      type: System.Double
    - id: plane
      type: SearchAThing.Sci.Plane3D
    - id: _edges
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge}
    - id: checkSense
      type: System.Boolean
    - id: checkSort
      type: System.Boolean
    content.vb: Public Sub New(tol As Double, plane As Plane3D, _edges As IEnumerable(Of Edge), checkSense As Boolean, checkSort As Boolean = False)
  overload: SearchAThing.Sci.Loop.#ctor*
  nameWithType.vb: Loop.New(Double, Plane3D, IEnumerable(Of Edge), Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.Loop.New(Double, SearchAThing.Sci.Plane3D, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Edge), Boolean, Boolean)
  name.vb: New(Double, Plane3D, IEnumerable(Of Edge), Boolean, Boolean)
- uid: SearchAThing.Sci.Loop.#ctor(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.Loop.#ctor(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},System.Boolean,System.Boolean)
  id: '#ctor(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},System.Boolean,System.Boolean)'
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Loop(double, IEnumerable<Edge>, bool, bool)
  nameWithType: Loop.Loop(double, IEnumerable<Edge>, bool, bool)
  fullName: SearchAThing.Sci.Loop.Loop(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Edge>, bool, bool)
  type: Constructor
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Loop.cs
    startLine: 110
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create loop from given edge template ; plane is detected from edges distribution
  example: []
  syntax:
    content: public Loop(double tol, IEnumerable<Edge> edges, bool checkSense = true, bool checkSort = false)
    parameters:
    - id: tol
      type: System.Double
    - id: edges
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge}
    - id: checkSense
      type: System.Boolean
    - id: checkSort
      type: System.Boolean
    content.vb: Public Sub New(tol As Double, edges As IEnumerable(Of Edge), checkSense As Boolean = True, checkSort As Boolean = False)
  overload: SearchAThing.Sci.Loop.#ctor*
  nameWithType.vb: Loop.New(Double, IEnumerable(Of Edge), Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.Loop.New(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Edge), Boolean, Boolean)
  name.vb: New(Double, IEnumerable(Of Edge), Boolean, Boolean)
- uid: SearchAThing.Sci.Loop.#ctor(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},SearchAThing.Sci.Plane3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Loop.#ctor(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},SearchAThing.Sci.Plane3D,System.Boolean)
  id: '#ctor(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge},SearchAThing.Sci.Plane3D,System.Boolean)'
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Loop(double, IEnumerable<Edge>, Plane3D, bool)
  nameWithType: Loop.Loop(double, IEnumerable<Edge>, Plane3D, bool)
  fullName: SearchAThing.Sci.Loop.Loop(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Edge>, SearchAThing.Sci.Plane3D, bool)
  type: Constructor
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Loop.cs
    startLine: 128
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create loop from given edges, plane template
  example: []
  syntax:
    content: public Loop(double tol, IEnumerable<Edge> edges, Plane3D plane, bool checkSense = true)
    parameters:
    - id: tol
      type: System.Double
    - id: edges
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge}
    - id: plane
      type: SearchAThing.Sci.Plane3D
    - id: checkSense
      type: System.Boolean
    content.vb: Public Sub New(tol As Double, edges As IEnumerable(Of Edge), plane As Plane3D, checkSense As Boolean = True)
  overload: SearchAThing.Sci.Loop.#ctor*
  nameWithType.vb: Loop.New(Double, IEnumerable(Of Edge), Plane3D, Boolean)
  fullName.vb: SearchAThing.Sci.Loop.New(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Edge), SearchAThing.Sci.Plane3D, Boolean)
  name.vb: New(Double, IEnumerable(Of Edge), Plane3D, Boolean)
- uid: SearchAThing.Sci.Loop.#ctor(System.Double,netDxf.Entities.Polyline2D)
  commentId: M:SearchAThing.Sci.Loop.#ctor(System.Double,netDxf.Entities.Polyline2D)
  id: '#ctor(System.Double,netDxf.Entities.Polyline2D)'
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Loop(double, Polyline2D)
  nameWithType: Loop.Loop(double, Polyline2D)
  fullName: SearchAThing.Sci.Loop.Loop(double, netDxf.Entities.Polyline2D)
  type: Constructor
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Loop.cs
    startLine: 138
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create a loop from given lwpolyline template
  example: []
  syntax:
    content: public Loop(double tol, Polyline2D lwPolyline)
    parameters:
    - id: tol
      type: System.Double
    - id: lwPolyline
      type: netDxf.Entities.Polyline2D
    content.vb: Public Sub New(tol As Double, lwPolyline As Polyline2D)
  overload: SearchAThing.Sci.Loop.#ctor*
  nameWithType.vb: Loop.New(Double, Polyline2D)
  fullName.vb: SearchAThing.Sci.Loop.New(Double, netDxf.Entities.Polyline2D)
  name.vb: New(Double, Polyline2D)
- uid: SearchAThing.Sci.Loop.InvertSense(System.Double)
  commentId: M:SearchAThing.Sci.Loop.InvertSense(System.Double)
  id: InvertSense(System.Double)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: InvertSense(double)
  nameWithType: Loop.InvertSense(double)
  fullName: SearchAThing.Sci.Loop.InvertSense(double)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: InvertSense
    path: src/sci/Loop.cs
    startLine: 148
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve another loop with reversed edges with sense toggled
  example: []
  syntax:
    content: public Loop InvertSense(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: SearchAThing.Sci.Loop
    content.vb: Public Function InvertSense(tol As Double) As [Loop]
  overload: SearchAThing.Sci.Loop.InvertSense*
  nameWithType.vb: Loop.InvertSense(Double)
  fullName.vb: SearchAThing.Sci.Loop.InvertSense(Double)
  name.vb: InvertSense(Double)
- uid: SearchAThing.Sci.Loop.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Loop.Move(SearchAThing.Sci.Vector3D)
  id: Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Move(Vector3D)
  nameWithType: Loop.Move(Vector3D)
  fullName: SearchAThing.Sci.Loop.Move(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Move
    path: src/sci/Loop.cs
    startLine: 154
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: move loop (plane and edges) of given delta
  example: []
  syntax:
    content: public Loop Move(Vector3D delta)
    parameters:
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Loop
    content.vb: Public Function Move(delta As Vector3D) As [Loop]
  overload: SearchAThing.Sci.Loop.Move*
- uid: SearchAThing.Sci.Loop.Area
  commentId: P:SearchAThing.Sci.Loop.Area
  id: Area
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: Loop.Area
  fullName: SearchAThing.Sci.Loop.Area
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Area
    path: src/sci/Loop.cs
    startLine: 162
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: (cached) area of the loop ( segment and arc are evaluated )
  example: []
  syntax:
    content: public double Area { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Area As Double
  overload: SearchAThing.Sci.Loop.Area*
- uid: SearchAThing.Sci.Loop.Length
  commentId: P:SearchAThing.Sci.Loop.Length
  id: Length
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Loop.Length
  fullName: SearchAThing.Sci.Loop.Length
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Length
    path: src/sci/Loop.cs
    startLine: 177
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: (cached) loop perimeter length
  example: []
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: SearchAThing.Sci.Loop.Length*
- uid: SearchAThing.Sci.Loop.Contains(System.Double,SearchAThing.Sci.Edge,SearchAThing.Sci.LoopContainsEdgeMode)
  commentId: M:SearchAThing.Sci.Loop.Contains(System.Double,SearchAThing.Sci.Edge,SearchAThing.Sci.LoopContainsEdgeMode)
  id: Contains(System.Double,SearchAThing.Sci.Edge,SearchAThing.Sci.LoopContainsEdgeMode)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Contains(double, Edge, LoopContainsEdgeMode)
  nameWithType: Loop.Contains(double, Edge, LoopContainsEdgeMode)
  fullName: SearchAThing.Sci.Loop.Contains(double, SearchAThing.Sci.Edge, SearchAThing.Sci.LoopContainsEdgeMode)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains
    path: src/sci/Loop.cs
    startLine: 213
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: test if given edge contained in this loop
  example: []
  syntax:
    content: public bool Contains(double tol, Edge edge, LoopContainsEdgeMode mode = LoopContainsEdgeMode.InsideOrPerimeter)
    parameters:
    - id: tol
      type: System.Double
    - id: edge
      type: SearchAThing.Sci.Edge
    - id: mode
      type: SearchAThing.Sci.LoopContainsEdgeMode
    return:
      type: System.Boolean
    content.vb: Public Function Contains(tol As Double, edge As Edge, mode As LoopContainsEdgeMode = LoopContainsEdgeMode.InsideOrPerimeter) As Boolean
  overload: SearchAThing.Sci.Loop.Contains*
  nameWithType.vb: Loop.Contains(Double, Edge, LoopContainsEdgeMode)
  fullName.vb: SearchAThing.Sci.Loop.Contains(Double, SearchAThing.Sci.Edge, SearchAThing.Sci.LoopContainsEdgeMode)
  name.vb: Contains(Double, Edge, LoopContainsEdgeMode)
- uid: SearchAThing.Sci.Loop.MidPoint
  commentId: P:SearchAThing.Sci.Loop.MidPoint
  id: MidPoint
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: MidPoint
  nameWithType: Loop.MidPoint
  fullName: SearchAThing.Sci.Loop.MidPoint
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: MidPoint
    path: src/sci/Loop.cs
    startLine: 264
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: (cached) geometric midpoint of all edges midpoint of this loop ( used in Contains for ray construction )
  example: []
  syntax:
    content: public Vector3D MidPoint { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property MidPoint As Vector3D
  overload: SearchAThing.Sci.Loop.MidPoint*
- uid: SearchAThing.Sci.Loop.ContainsPoint(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.LoopContainsPointMode)
  commentId: M:SearchAThing.Sci.Loop.ContainsPoint(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.LoopContainsPointMode)
  id: ContainsPoint(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.LoopContainsPointMode)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: ContainsPoint(double, Vector3D, LoopContainsPointMode)
  nameWithType: Loop.ContainsPoint(double, Vector3D, LoopContainsPointMode)
  fullName: SearchAThing.Sci.Loop.ContainsPoint(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.LoopContainsPointMode)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ContainsPoint
    path: src/sci/Loop.cs
    startLine: 276
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if given point is included into this loop
  example: []
  syntax:
    content: public bool ContainsPoint(double tol, Vector3D pt, LoopContainsPointMode mode)
    parameters:
    - id: tol
      type: System.Double
    - id: pt
      type: SearchAThing.Sci.Vector3D
    - id: mode
      type: SearchAThing.Sci.LoopContainsPointMode
    return:
      type: System.Boolean
    content.vb: Public Function ContainsPoint(tol As Double, pt As Vector3D, mode As LoopContainsPointMode) As Boolean
  overload: SearchAThing.Sci.Loop.ContainsPoint*
  nameWithType.vb: Loop.ContainsPoint(Double, Vector3D, LoopContainsPointMode)
  fullName.vb: SearchAThing.Sci.Loop.ContainsPoint(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.LoopContainsPointMode)
  name.vb: ContainsPoint(Double, Vector3D, LoopContainsPointMode)
- uid: SearchAThing.Sci.Loop.BBox
  commentId: P:SearchAThing.Sci.Loop.BBox
  id: BBox
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: BBox
  nameWithType: Loop.BBox
  fullName: SearchAThing.Sci.Loop.BBox
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BBox
    path: src/sci/Loop.cs
    startLine: 338
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: (cached) bbox of this loop WCS coords
  example: []
  syntax:
    content: public BBox3D BBox { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.BBox3D
    content.vb: Public ReadOnly Property BBox As BBox3D
  overload: SearchAThing.Sci.Loop.BBox*
- uid: SearchAThing.Sci.Loop.CSBox
  commentId: P:SearchAThing.Sci.Loop.CSBox
  id: CSBox
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: CSBox
  nameWithType: Loop.CSBox
  fullName: SearchAThing.Sci.Loop.CSBox
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CSBox
    path: src/sci/Loop.cs
    startLine: 354
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: (cached) bbox of this loop CS coords
  example: []
  syntax:
    content: public BBox3D CSBox { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.BBox3D
    content.vb: Public ReadOnly Property CSBox As BBox3D
  overload: SearchAThing.Sci.Loop.CSBox*
- uid: SearchAThing.Sci.Loop.Contains(System.Double,SearchAThing.Sci.Loop,SearchAThing.Sci.LoopContainsEdgeMode)
  commentId: M:SearchAThing.Sci.Loop.Contains(System.Double,SearchAThing.Sci.Loop,SearchAThing.Sci.LoopContainsEdgeMode)
  id: Contains(System.Double,SearchAThing.Sci.Loop,SearchAThing.Sci.LoopContainsEdgeMode)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: Contains(double, Loop, LoopContainsEdgeMode)
  nameWithType: Loop.Contains(double, Loop, LoopContainsEdgeMode)
  fullName: SearchAThing.Sci.Loop.Contains(double, SearchAThing.Sci.Loop, SearchAThing.Sci.LoopContainsEdgeMode)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains
    path: src/sci/Loop.cs
    startLine: 367
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this loop contains given other loop
  example: []
  syntax:
    content: public bool Contains(double tol, Loop other, LoopContainsEdgeMode mode = LoopContainsEdgeMode.InsideOrPerimeter)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Loop
    - id: mode
      type: SearchAThing.Sci.LoopContainsEdgeMode
    return:
      type: System.Boolean
    content.vb: Public Function Contains(tol As Double, other As [Loop], mode As LoopContainsEdgeMode = LoopContainsEdgeMode.InsideOrPerimeter) As Boolean
  overload: SearchAThing.Sci.Loop.Contains*
  nameWithType.vb: Loop.Contains(Double, Loop, LoopContainsEdgeMode)
  fullName.vb: SearchAThing.Sci.Loop.Contains(Double, SearchAThing.Sci.Loop, SearchAThing.Sci.LoopContainsEdgeMode)
  name.vb: Contains(Double, Loop, LoopContainsEdgeMode)
- uid: SearchAThing.Sci.Loop.ToHatch(System.Double,netDxf.Entities.HatchPattern,System.Boolean)
  commentId: M:SearchAThing.Sci.Loop.ToHatch(System.Double,netDxf.Entities.HatchPattern,System.Boolean)
  id: ToHatch(System.Double,netDxf.Entities.HatchPattern,System.Boolean)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: ToHatch(double, HatchPattern, bool)
  nameWithType: Loop.ToHatch(double, HatchPattern, bool)
  fullName: SearchAThing.Sci.Loop.ToHatch(double, netDxf.Entities.HatchPattern, bool)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToHatch
    path: src/sci/Loop.cs
    startLine: 379
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create an hatch from given loop, pattern
  example: []
  syntax:
    content: public Hatch ToHatch(double tol, HatchPattern pattern, bool associative = true)
    parameters:
    - id: tol
      type: System.Double
    - id: pattern
      type: netDxf.Entities.HatchPattern
    - id: associative
      type: System.Boolean
    return:
      type: netDxf.Entities.Hatch
    content.vb: Public Function ToHatch(tol As Double, pattern As HatchPattern, associative As Boolean = True) As Hatch
  overload: SearchAThing.Sci.Loop.ToHatch*
  nameWithType.vb: Loop.ToHatch(Double, HatchPattern, Boolean)
  fullName.vb: SearchAThing.Sci.Loop.ToHatch(Double, netDxf.Entities.HatchPattern, Boolean)
  name.vb: ToHatch(Double, HatchPattern, Boolean)
- uid: SearchAThing.Sci.Loop.ToLwPolyline(System.Double)
  commentId: M:SearchAThing.Sci.Loop.ToLwPolyline(System.Double)
  id: ToLwPolyline(System.Double)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: ToLwPolyline(double)
  nameWithType: Loop.ToLwPolyline(double)
  fullName: SearchAThing.Sci.Loop.ToLwPolyline(double)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToLwPolyline
    path: src/sci/Loop.cs
    startLine: 385
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create dxf lwpolyline from this loop
  example: []
  syntax:
    content: public Polyline2D ToLwPolyline(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: netDxf.Entities.Polyline2D
    content.vb: Public Function ToLwPolyline(tol As Double) As Polyline2D
  overload: SearchAThing.Sci.Loop.ToLwPolyline*
  nameWithType.vb: Loop.ToLwPolyline(Double)
  fullName.vb: SearchAThing.Sci.Loop.ToLwPolyline(Double)
  name.vb: ToLwPolyline(Double)
- uid: SearchAThing.Sci.Loop.DxfEntity(System.Double)
  commentId: M:SearchAThing.Sci.Loop.DxfEntity(System.Double)
  id: DxfEntity(System.Double)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: DxfEntity(double)
  nameWithType: Loop.DxfEntity(double)
  fullName: SearchAThing.Sci.Loop.DxfEntity(double)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DxfEntity
    path: src/sci/Loop.cs
    startLine: 390
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create dxf lwpolyline from this loop
  example: []
  syntax:
    content: public Polyline2D DxfEntity(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: netDxf.Entities.Polyline2D
    content.vb: Public Function DxfEntity(tol As Double) As Polyline2D
  overload: SearchAThing.Sci.Loop.DxfEntity*
  nameWithType.vb: Loop.DxfEntity(Double)
  fullName.vb: SearchAThing.Sci.Loop.DxfEntity(Double)
  name.vb: DxfEntity(Double)
- uid: SearchAThing.Sci.Loop.ToString
  commentId: M:SearchAThing.Sci.Loop.ToString
  id: ToString
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Loop.ToString()
  fullName: SearchAThing.Sci.Loop.ToString()
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Loop.cs
    startLine: 392
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SearchAThing.Sci.Loop.ToString*
- uid: SearchAThing.Sci.Loop.DebugDump(System.Int32)
  commentId: M:SearchAThing.Sci.Loop.DebugDump(System.Int32)
  id: DebugDump(System.Int32)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: DebugDump(int)
  nameWithType: Loop.DebugDump(int)
  fullName: SearchAThing.Sci.Loop.DebugDump(int)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DebugDump
    path: src/sci/Loop.cs
    startLine: 394
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string DebugDump(int digits = 3)
    parameters:
    - id: digits
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function DebugDump(digits As Integer = 3) As String
  overload: SearchAThing.Sci.Loop.DebugDump*
  nameWithType.vb: Loop.DebugDump(Integer)
  fullName.vb: SearchAThing.Sci.Loop.DebugDump(Integer)
  name.vb: DebugDump(Integer)
- uid: SearchAThing.Sci.Loop.QCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Loop.QCadScript(System.Boolean)
  id: QCadScript(System.Boolean)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: QCadScript(bool)
  nameWithType: Loop.QCadScript(bool)
  fullName: SearchAThing.Sci.Loop.QCadScript(bool)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: QCadScript
    path: src/sci/Loop.cs
    startLine: 409
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: qcad 2d script
  example: []
  syntax:
    content: public string QCadScript(bool final = true)
    parameters:
    - id: final
      type: System.Boolean
      description: adds QQ command
    return:
      type: System.String
    content.vb: Public Function QCadScript(final As Boolean = True) As String
  overload: SearchAThing.Sci.Loop.QCadScript*
  nameWithType.vb: Loop.QCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Loop.QCadScript(Boolean)
  name.vb: QCadScript(Boolean)
- uid: SearchAThing.Sci.Loop.A0QCadScript
  commentId: P:SearchAThing.Sci.Loop.A0QCadScript
  id: A0QCadScript
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: A0QCadScript
  nameWithType: Loop.A0QCadScript
  fullName: SearchAThing.Sci.Loop.A0QCadScript
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: A0QCadScript
    path: src/sci/Loop.cs
    startLine: 423
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string A0QCadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property A0QCadScript As String
  overload: SearchAThing.Sci.Loop.A0QCadScript*
- uid: SearchAThing.Sci.Loop.ProgeCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Loop.ProgeCadScript(System.Boolean)
  id: ProgeCadScript(System.Boolean)
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: ProgeCadScript(bool)
  nameWithType: Loop.ProgeCadScript(bool)
  fullName: SearchAThing.Sci.Loop.ProgeCadScript(bool)
  type: Method
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ProgeCadScript
    path: src/sci/Loop.cs
    startLine: 425
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string ProgeCadScript(bool final = true)
    parameters:
    - id: final
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Function ProgeCadScript(final As Boolean = True) As String
  overload: SearchAThing.Sci.Loop.ProgeCadScript*
  nameWithType.vb: Loop.ProgeCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Loop.ProgeCadScript(Boolean)
  name.vb: ProgeCadScript(Boolean)
- uid: SearchAThing.Sci.Loop.A0ProgeCadScript
  commentId: P:SearchAThing.Sci.Loop.A0ProgeCadScript
  id: A0ProgeCadScript
  parent: SearchAThing.Sci.Loop
  langs:
  - csharp
  - vb
  name: A0ProgeCadScript
  nameWithType: Loop.A0ProgeCadScript
  fullName: SearchAThing.Sci.Loop.A0ProgeCadScript
  type: Property
  source:
    remote:
      path: src/sci/Loop.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: A0ProgeCadScript
    path: src/sci/Loop.cs
    startLine: 440
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string A0ProgeCadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property A0ProgeCadScript As String
  overload: SearchAThing.Sci.Loop.A0ProgeCadScript*
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SearchAThing.Sci.Loop.SearchAThing.Sci.Ext.ToFace
  commentId: M:SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
  parent: SearchAThing.Sci.Ext
  definition: SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
  href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToFace_SearchAThing_Sci_Loop_
  name: ToFace(Loop)
  nameWithType: Ext.ToFace(Loop)
  fullName: SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
  spec.csharp:
  - uid: SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
    name: ToFace
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToFace_SearchAThing_Sci_Loop_
  - name: (
  - uid: SearchAThing.Sci.Loop
    name: Loop
    href: SearchAThing.Sci.Loop.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
    name: ToFace
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToFace_SearchAThing_Sci_Loop_
  - name: (
  - uid: SearchAThing.Sci.Loop
    name: Loop
    href: SearchAThing.Sci.Loop.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
  commentId: M:SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
  href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToFace_SearchAThing_Sci_Loop_
  name: ToFace(Loop)
  nameWithType: Ext.ToFace(Loop)
  fullName: SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
  spec.csharp:
  - uid: SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
    name: ToFace
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToFace_SearchAThing_Sci_Loop_
  - name: (
  - uid: SearchAThing.Sci.Loop
    name: Loop
    href: SearchAThing.Sci.Loop.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Ext.ToFace(SearchAThing.Sci.Loop)
    name: ToFace
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToFace_SearchAThing_Sci_Loop_
  - name: (
  - uid: SearchAThing.Sci.Loop
    name: Loop
    href: SearchAThing.Sci.Loop.html
  - name: )
- uid: SearchAThing.Sci.Ext
  commentId: T:SearchAThing.Sci.Ext
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Ext.html
  name: Ext
  nameWithType: Ext
  fullName: SearchAThing.Sci.Ext
- uid: SearchAThing.Sci.Loop.Plane*
  commentId: Overload:SearchAThing.Sci.Loop.Plane
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Plane
  name: Plane
  nameWithType: Loop.Plane
  fullName: SearchAThing.Sci.Loop.Plane
- uid: SearchAThing.Sci.Plane3D
  commentId: T:SearchAThing.Sci.Plane3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Plane3D.html
  name: Plane3D
  nameWithType: Plane3D
  fullName: SearchAThing.Sci.Plane3D
- uid: SearchAThing.Sci.Loop.Edges*
  commentId: Overload:SearchAThing.Sci.Loop.Edges
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Edges
  name: Edges
  nameWithType: Loop.Edges
  fullName: SearchAThing.Sci.Loop.Edges
- uid: System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Edge}
  commentId: T:System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Edge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Edge>
  nameWithType: IReadOnlyList<Edge>
  fullName: System.Collections.Generic.IReadOnlyList<SearchAThing.Sci.Edge>
  nameWithType.vb: IReadOnlyList(Of Edge)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of SearchAThing.Sci.Edge)
  name.vb: IReadOnlyList(Of Edge)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.Loop.Equals*
  commentId: Overload:SearchAThing.Sci.Loop.Equals
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Equals_System_Double_SearchAThing_Sci_Loop_
  name: Equals
  nameWithType: Loop.Equals
  fullName: SearchAThing.Sci.Loop.Equals
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.Loop
  commentId: T:SearchAThing.Sci.Loop
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Loop.html
  name: Loop
  nameWithType: Loop
  fullName: SearchAThing.Sci.Loop
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.Loop.Vertexes*
  commentId: Overload:SearchAThing.Sci.Loop.Vertexes
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Vertexes_System_Double_
  name: Vertexes
  nameWithType: Loop.Vertexes
  fullName: SearchAThing.Sci.Loop.Vertexes
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3D>
  nameWithType: IEnumerable<Vector3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>
  nameWithType.vb: IEnumerable(Of Vector3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D)
  name.vb: IEnumerable(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.Sci.Loop.Tol*
  commentId: Overload:SearchAThing.Sci.Loop.Tol
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Tol
  name: Tol
  nameWithType: Loop.Tol
  fullName: SearchAThing.Sci.Loop.Tol
- uid: SearchAThing.Sci.Loop.#ctor*
  commentId: Overload:SearchAThing.Sci.Loop.#ctor
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop__ctor_System_Double_SearchAThing_Sci_Plane3D_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Edge__System_Boolean_System_Boolean_
  name: Loop
  nameWithType: Loop.Loop
  fullName: SearchAThing.Sci.Loop.Loop
  nameWithType.vb: Loop.New
  fullName.vb: SearchAThing.Sci.Loop.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Edge>
  nameWithType: IEnumerable<Edge>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Edge>
  nameWithType.vb: IEnumerable(Of Edge)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Edge)
  name.vb: IEnumerable(Of Edge)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
- uid: netDxf.Entities.Polyline2D
  commentId: T:netDxf.Entities.Polyline2D
  parent: netDxf.Entities
  isExternal: true
  name: Polyline2D
  nameWithType: Polyline2D
  fullName: netDxf.Entities.Polyline2D
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  isExternal: true
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
- uid: SearchAThing.Sci.Loop.InvertSense*
  commentId: Overload:SearchAThing.Sci.Loop.InvertSense
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_InvertSense_System_Double_
  name: InvertSense
  nameWithType: Loop.InvertSense
  fullName: SearchAThing.Sci.Loop.InvertSense
- uid: SearchAThing.Sci.Loop.Move*
  commentId: Overload:SearchAThing.Sci.Loop.Move
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Move_SearchAThing_Sci_Vector3D_
  name: Move
  nameWithType: Loop.Move
  fullName: SearchAThing.Sci.Loop.Move
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.Loop.Area*
  commentId: Overload:SearchAThing.Sci.Loop.Area
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Area
  name: Area
  nameWithType: Loop.Area
  fullName: SearchAThing.Sci.Loop.Area
- uid: SearchAThing.Sci.Loop.Length*
  commentId: Overload:SearchAThing.Sci.Loop.Length
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Length
  name: Length
  nameWithType: Loop.Length
  fullName: SearchAThing.Sci.Loop.Length
- uid: SearchAThing.Sci.Loop.Contains*
  commentId: Overload:SearchAThing.Sci.Loop.Contains
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_Contains_System_Double_SearchAThing_Sci_Edge_SearchAThing_Sci_LoopContainsEdgeMode_
  name: Contains
  nameWithType: Loop.Contains
  fullName: SearchAThing.Sci.Loop.Contains
- uid: SearchAThing.Sci.Edge
  commentId: T:SearchAThing.Sci.Edge
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Edge.html
  name: Edge
  nameWithType: Edge
  fullName: SearchAThing.Sci.Edge
- uid: SearchAThing.Sci.LoopContainsEdgeMode
  commentId: T:SearchAThing.Sci.LoopContainsEdgeMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.LoopContainsEdgeMode.html
  name: LoopContainsEdgeMode
  nameWithType: LoopContainsEdgeMode
  fullName: SearchAThing.Sci.LoopContainsEdgeMode
- uid: SearchAThing.Sci.Loop.MidPoint*
  commentId: Overload:SearchAThing.Sci.Loop.MidPoint
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_MidPoint
  name: MidPoint
  nameWithType: Loop.MidPoint
  fullName: SearchAThing.Sci.Loop.MidPoint
- uid: SearchAThing.Sci.Loop.ContainsPoint*
  commentId: Overload:SearchAThing.Sci.Loop.ContainsPoint
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_ContainsPoint_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_LoopContainsPointMode_
  name: ContainsPoint
  nameWithType: Loop.ContainsPoint
  fullName: SearchAThing.Sci.Loop.ContainsPoint
- uid: SearchAThing.Sci.LoopContainsPointMode
  commentId: T:SearchAThing.Sci.LoopContainsPointMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.LoopContainsPointMode.html
  name: LoopContainsPointMode
  nameWithType: LoopContainsPointMode
  fullName: SearchAThing.Sci.LoopContainsPointMode
- uid: SearchAThing.Sci.Loop.BBox*
  commentId: Overload:SearchAThing.Sci.Loop.BBox
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_BBox
  name: BBox
  nameWithType: Loop.BBox
  fullName: SearchAThing.Sci.Loop.BBox
- uid: SearchAThing.Sci.BBox3D
  commentId: T:SearchAThing.Sci.BBox3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.BBox3D.html
  name: BBox3D
  nameWithType: BBox3D
  fullName: SearchAThing.Sci.BBox3D
- uid: SearchAThing.Sci.Loop.CSBox*
  commentId: Overload:SearchAThing.Sci.Loop.CSBox
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_CSBox
  name: CSBox
  nameWithType: Loop.CSBox
  fullName: SearchAThing.Sci.Loop.CSBox
- uid: SearchAThing.Sci.Loop.ToHatch*
  commentId: Overload:SearchAThing.Sci.Loop.ToHatch
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_ToHatch_System_Double_netDxf_Entities_HatchPattern_System_Boolean_
  name: ToHatch
  nameWithType: Loop.ToHatch
  fullName: SearchAThing.Sci.Loop.ToHatch
- uid: netDxf.Entities.HatchPattern
  commentId: T:netDxf.Entities.HatchPattern
  parent: netDxf.Entities
  isExternal: true
  name: HatchPattern
  nameWithType: HatchPattern
  fullName: netDxf.Entities.HatchPattern
- uid: netDxf.Entities.Hatch
  commentId: T:netDxf.Entities.Hatch
  parent: netDxf.Entities
  isExternal: true
  name: Hatch
  nameWithType: Hatch
  fullName: netDxf.Entities.Hatch
- uid: SearchAThing.Sci.Loop.ToLwPolyline*
  commentId: Overload:SearchAThing.Sci.Loop.ToLwPolyline
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_ToLwPolyline_System_Double_
  name: ToLwPolyline
  nameWithType: Loop.ToLwPolyline
  fullName: SearchAThing.Sci.Loop.ToLwPolyline
- uid: SearchAThing.Sci.Loop.DxfEntity*
  commentId: Overload:SearchAThing.Sci.Loop.DxfEntity
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_DxfEntity_System_Double_
  name: DxfEntity
  nameWithType: Loop.DxfEntity
  fullName: SearchAThing.Sci.Loop.DxfEntity
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SearchAThing.Sci.Loop.ToString*
  commentId: Overload:SearchAThing.Sci.Loop.ToString
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_ToString
  name: ToString
  nameWithType: Loop.ToString
  fullName: SearchAThing.Sci.Loop.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SearchAThing.Sci.Loop.DebugDump*
  commentId: Overload:SearchAThing.Sci.Loop.DebugDump
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_DebugDump_System_Int32_
  name: DebugDump
  nameWithType: Loop.DebugDump
  fullName: SearchAThing.Sci.Loop.DebugDump
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SearchAThing.Sci.Loop.QCadScript*
  commentId: Overload:SearchAThing.Sci.Loop.QCadScript
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_QCadScript_System_Boolean_
  name: QCadScript
  nameWithType: Loop.QCadScript
  fullName: SearchAThing.Sci.Loop.QCadScript
- uid: SearchAThing.Sci.Loop.A0QCadScript*
  commentId: Overload:SearchAThing.Sci.Loop.A0QCadScript
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_A0QCadScript
  name: A0QCadScript
  nameWithType: Loop.A0QCadScript
  fullName: SearchAThing.Sci.Loop.A0QCadScript
- uid: SearchAThing.Sci.Loop.ProgeCadScript*
  commentId: Overload:SearchAThing.Sci.Loop.ProgeCadScript
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_ProgeCadScript_System_Boolean_
  name: ProgeCadScript
  nameWithType: Loop.ProgeCadScript
  fullName: SearchAThing.Sci.Loop.ProgeCadScript
- uid: SearchAThing.Sci.Loop.A0ProgeCadScript*
  commentId: Overload:SearchAThing.Sci.Loop.A0ProgeCadScript
  href: SearchAThing.Sci.Loop.html#SearchAThing_Sci_Loop_A0ProgeCadScript
  name: A0ProgeCadScript
  nameWithType: Loop.A0ProgeCadScript
  fullName: SearchAThing.Sci.Loop.A0ProgeCadScript
