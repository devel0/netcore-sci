### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Geometry
  commentId: T:SearchAThing.Sci.Geometry
  id: Geometry
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Geometry.#ctor(SearchAThing.Sci.GeometryType)
  - SearchAThing.Sci.Geometry.BBox(System.Double)
  - SearchAThing.Sci.Geometry.Copy
  - SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  - SearchAThing.Sci.Geometry.DxfEntity
  - SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  - SearchAThing.Sci.Geometry.GeomFrom
  - SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  - SearchAThing.Sci.Geometry.GeomTo
  - SearchAThing.Sci.Geometry.GeomType
  - SearchAThing.Sci.Geometry.Length
  - SearchAThing.Sci.Geometry.MidPoint
  - SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  - SearchAThing.Sci.Geometry.Vertexes
  - SearchAThing.Sci.Geometry.op_Implicit(SearchAThing.Sci.Geometry)~netDxf.Entities.EntityObject
  langs:
  - csharp
  - vb
  name: Geometry
  nameWithType: Geometry
  fullName: SearchAThing.Sci.Geometry
  type: Class
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Geometry
    path: src/sci/Geometry.cs
    startLine: 36
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: base abstract type for geometries such as Vector3D, Line3D, Arc3D and Circle3D
  example: []
  syntax:
    content: public abstract class Geometry
    content.vb: Public MustInherit Class Geometry
  inheritance:
  - System.Object
  derivedClasses:
  - SearchAThing.Sci.Edge
  - SearchAThing.Sci.Vector3D
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SearchAThing.Sci.Geometry.Copy
  commentId: M:SearchAThing.Sci.Geometry.Copy
  id: Copy
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: Geometry.Copy()
  fullName: SearchAThing.Sci.Geometry.Copy()
  type: Method
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Copy
    path: src/sci/Geometry.cs
    startLine: 45
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create copy of this geometry.
  remarks: it's required to call base.CopyFrom(other) to ensure geometry properties to be copied.
  example: []
  syntax:
    content: public abstract Geometry Copy()
    return:
      type: SearchAThing.Sci.Geometry
    content.vb: Public MustOverride Function Copy() As Geometry
  overload: SearchAThing.Sci.Geometry.Copy*
- uid: SearchAThing.Sci.Geometry.#ctor(SearchAThing.Sci.GeometryType)
  commentId: M:SearchAThing.Sci.Geometry.#ctor(SearchAThing.Sci.GeometryType)
  id: '#ctor(SearchAThing.Sci.GeometryType)'
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: Geometry(GeometryType)
  nameWithType: Geometry.Geometry(GeometryType)
  fullName: SearchAThing.Sci.Geometry.Geometry(SearchAThing.Sci.GeometryType)
  type: Constructor
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Geometry.cs
    startLine: 47
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: protected Geometry(GeometryType type)
    parameters:
    - id: type
      type: SearchAThing.Sci.GeometryType
    content.vb: Protected Sub New(type As GeometryType)
  overload: SearchAThing.Sci.Geometry.#ctor*
  nameWithType.vb: Geometry.New(GeometryType)
  fullName.vb: SearchAThing.Sci.Geometry.New(SearchAThing.Sci.GeometryType)
  name.vb: New(GeometryType)
- uid: SearchAThing.Sci.Geometry.GeomType
  commentId: P:SearchAThing.Sci.Geometry.GeomType
  id: GeomType
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: GeomType
  nameWithType: Geometry.GeomType
  fullName: SearchAThing.Sci.Geometry.GeomType
  type: Property
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomType
    path: src/sci/Geometry.cs
    startLine: 52
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: type of geometry
  example: []
  syntax:
    content: public GeometryType GeomType { get; protected set; }
    parameters: []
    return:
      type: SearchAThing.Sci.GeometryType
    content.vb: Public Property GeomType As GeometryType
  overload: SearchAThing.Sci.Geometry.GeomType*
- uid: SearchAThing.Sci.Geometry.Vertexes
  commentId: P:SearchAThing.Sci.Geometry.Vertexes
  id: Vertexes
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: Vertexes
  nameWithType: Geometry.Vertexes
  fullName: SearchAThing.Sci.Geometry.Vertexes
  type: Property
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Vertexes
    path: src/sci/Geometry.cs
    startLine: 57
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: vertexes of this geom ( can be 1 for points, 2 for line/arc/circles )
  example: []
  syntax:
    content: public abstract IEnumerable<Vector3D> Vertexes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public MustOverride ReadOnly Property Vertexes As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Geometry.Vertexes*
- uid: SearchAThing.Sci.Geometry.GeomFrom
  commentId: P:SearchAThing.Sci.Geometry.GeomFrom
  id: GeomFrom
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: GeomFrom
  nameWithType: Geometry.GeomFrom
  fullName: SearchAThing.Sci.Geometry.GeomFrom
  type: Property
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomFrom
    path: src/sci/Geometry.cs
    startLine: 62
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: start point
  example: []
  syntax:
    content: public abstract Vector3D GeomFrom { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public MustOverride ReadOnly Property GeomFrom As Vector3D
  overload: SearchAThing.Sci.Geometry.GeomFrom*
- uid: SearchAThing.Sci.Geometry.GeomTo
  commentId: P:SearchAThing.Sci.Geometry.GeomTo
  id: GeomTo
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: GeomTo
  nameWithType: Geometry.GeomTo
  fullName: SearchAThing.Sci.Geometry.GeomTo
  type: Property
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomTo
    path: src/sci/Geometry.cs
    startLine: 67
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: end point
  example: []
  syntax:
    content: public abstract Vector3D GeomTo { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public MustOverride ReadOnly Property GeomTo As Vector3D
  overload: SearchAThing.Sci.Geometry.GeomTo*
- uid: SearchAThing.Sci.Geometry.Length
  commentId: P:SearchAThing.Sci.Geometry.Length
  id: Length
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Geometry.Length
  fullName: SearchAThing.Sci.Geometry.Length
  type: Property
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Length
    path: src/sci/Geometry.cs
    startLine: 72
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: geometry length ( 0 for point, line length for lines, perimeter for arc/circles )
  example: []
  syntax:
    content: public abstract double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public MustOverride ReadOnly Property Length As Double
  overload: SearchAThing.Sci.Geometry.Length*
- uid: SearchAThing.Sci.Geometry.MidPoint
  commentId: P:SearchAThing.Sci.Geometry.MidPoint
  id: MidPoint
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: MidPoint
  nameWithType: Geometry.MidPoint
  fullName: SearchAThing.Sci.Geometry.MidPoint
  type: Property
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: MidPoint
    path: src/sci/Geometry.cs
    startLine: 74
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public abstract Vector3D MidPoint { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public MustOverride ReadOnly Property MidPoint As Vector3D
  overload: SearchAThing.Sci.Geometry.MidPoint*
- uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  commentId: M:SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  id: Divide(System.Int32,System.Boolean)
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: Divide(int, bool)
  nameWithType: Geometry.Divide(int, bool)
  fullName: SearchAThing.Sci.Geometry.Divide(int, bool)
  type: Method
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Divide
    path: src/sci/Geometry.cs
    startLine: 81
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: find split points for this geometry splitter int cnt parts
  example: []
  syntax:
    content: public abstract IEnumerable<Vector3D> Divide(int cnt, bool include_endpoints = false)
    parameters:
    - id: cnt
      type: System.Int32
      description: ''
    - id: include_endpoints
      type: System.Boolean
      description: if true GeomFrom and GeomTo will added
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public MustOverride Function Divide(cnt As Integer, include_endpoints As Boolean = False) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Geometry.Divide*
  nameWithType.vb: Geometry.Divide(Integer, Boolean)
  fullName.vb: SearchAThing.Sci.Geometry.Divide(Integer, Boolean)
  name.vb: Divide(Integer, Boolean)
- uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  id: Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: Split(double, IEnumerable<Vector3D>)
  nameWithType: Geometry.Split(double, IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.Geometry.Split(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  type: Method
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Split
    path: src/sci/Geometry.cs
    startLine: 87
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    split geometry in given break points.

    precondition: breaks must lie on the geometry perimeter
  example: []
  syntax:
    content: public abstract IEnumerable<Geometry> Split(double tol, IEnumerable<Vector3D> breaks)
    parameters:
    - id: tol
      type: System.Double
    - id: breaks
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
    content.vb: Public MustOverride Function Split(tol As Double, breaks As IEnumerable(Of Vector3D)) As IEnumerable(Of Geometry)
  overload: SearchAThing.Sci.Geometry.Split*
  nameWithType.vb: Geometry.Split(Double, IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.Geometry.Split(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: Split(Double, IEnumerable(Of Vector3D))
- uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  id: Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: Move(Vector3D)
  nameWithType: Geometry.Move(Vector3D)
  fullName: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Move
    path: src/sci/Geometry.cs
    startLine: 89
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public abstract Geometry Move(Vector3D delta)
    parameters:
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Geometry
    content.vb: Public MustOverride Function Move(delta As Vector3D) As Geometry
  overload: SearchAThing.Sci.Geometry.Move*
- uid: SearchAThing.Sci.Geometry.BBox(System.Double)
  commentId: M:SearchAThing.Sci.Geometry.BBox(System.Double)
  id: BBox(System.Double)
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: BBox(double)
  nameWithType: Geometry.BBox(double)
  fullName: SearchAThing.Sci.Geometry.BBox(double)
  type: Method
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BBox
    path: src/sci/Geometry.cs
    startLine: 94
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: bbox of this geom
  example: []
  syntax:
    content: public abstract BBox3D BBox(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: SearchAThing.Sci.BBox3D
    content.vb: Public MustOverride Function BBox(tol As Double) As BBox3D
  overload: SearchAThing.Sci.Geometry.BBox*
  nameWithType.vb: Geometry.BBox(Double)
  fullName.vb: SearchAThing.Sci.Geometry.BBox(Double)
  name.vb: BBox(Double)
- uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  commentId: M:SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  id: GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  nameWithType: Geometry.GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName: SearchAThing.Sci.Geometry.GeomIntersect(double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  type: Method
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomIntersect
    path: src/sci/Geometry.cs
    startLine: 104
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: find intersections between this and another geometry resulting in zero or more geometries.
  example: []
  syntax:
    content: public abstract IEnumerable<Geometry> GeomIntersect(double tol, Geometry other, GeomSegmentMode thisSegmentMode = GeomSegmentMode.FromTo, GeomSegmentMode otherSegmentMode = GeomSegmentMode.FromTo)
    parameters:
    - id: tol
      type: System.Double
      description: ''
    - id: other
      type: SearchAThing.Sci.Geometry
      description: ''
    - id: thisSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
      description: if this is Line3D specifies how to consider
    - id: otherSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
      description: if other is Line3D specifies how to consider
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
      description: ''
    content.vb: Public MustOverride Function GeomIntersect(tol As Double, other As Geometry, thisSegmentMode As GeomSegmentMode = GeomSegmentMode.FromTo, otherSegmentMode As GeomSegmentMode = GeomSegmentMode.FromTo) As IEnumerable(Of Geometry)
  overload: SearchAThing.Sci.Geometry.GeomIntersect*
  nameWithType.vb: Geometry.GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName.vb: SearchAThing.Sci.Geometry.GeomIntersect(Double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  name.vb: GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
- uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  commentId: M:SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  id: GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: GeomEquals(double, Geometry, bool)
  nameWithType: Geometry.GeomEquals(double, Geometry, bool)
  fullName: SearchAThing.Sci.Geometry.GeomEquals(double, SearchAThing.Sci.Geometry, bool)
  type: Method
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomEquals
    path: src/sci/Geometry.cs
    startLine: 114
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this geom equals to given other
  example: []
  syntax:
    content: public abstract bool GeomEquals(double tol, Geometry other, bool checkSense = false)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: other
      type: SearchAThing.Sci.Geometry
      description: other geom
    - id: checkSense
      type: System.Boolean
      description: if false two geometry with different sense but same space coverage are considered equals
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function GeomEquals(tol As Double, other As Geometry, checkSense As Boolean = False) As Boolean
  overload: SearchAThing.Sci.Geometry.GeomEquals*
  nameWithType.vb: Geometry.GeomEquals(Double, Geometry, Boolean)
  fullName.vb: SearchAThing.Sci.Geometry.GeomEquals(Double, SearchAThing.Sci.Geometry, Boolean)
  name.vb: GeomEquals(Double, Geometry, Boolean)
- uid: SearchAThing.Sci.Geometry.DxfEntity
  commentId: P:SearchAThing.Sci.Geometry.DxfEntity
  id: DxfEntity
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: DxfEntity
  nameWithType: Geometry.DxfEntity
  fullName: SearchAThing.Sci.Geometry.DxfEntity
  type: Property
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DxfEntity
    path: src/sci/Geometry.cs
    startLine: 119
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: dxf entity representing this geom
  example: []
  syntax:
    content: public abstract EntityObject DxfEntity { get; }
    parameters: []
    return:
      type: netDxf.Entities.EntityObject
    content.vb: Public MustOverride ReadOnly Property DxfEntity As EntityObject
  overload: SearchAThing.Sci.Geometry.DxfEntity*
- uid: SearchAThing.Sci.Geometry.op_Implicit(SearchAThing.Sci.Geometry)~netDxf.Entities.EntityObject
  commentId: M:SearchAThing.Sci.Geometry.op_Implicit(SearchAThing.Sci.Geometry)~netDxf.Entities.EntityObject
  id: op_Implicit(SearchAThing.Sci.Geometry)~netDxf.Entities.EntityObject
  parent: SearchAThing.Sci.Geometry
  langs:
  - csharp
  - vb
  name: implicit operator EntityObject(Geometry)
  nameWithType: Geometry.implicit operator EntityObject(Geometry)
  fullName: SearchAThing.Sci.Geometry.implicit operator netDxf.Entities.EntityObject(SearchAThing.Sci.Geometry)
  type: Operator
  source:
    remote:
      path: src/sci/Geometry.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Implicit
    path: src/sci/Geometry.cs
    startLine: 125
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert to dxf entity
  example: []
  syntax:
    content: public static implicit operator EntityObject(Geometry geom)
    parameters:
    - id: geom
      type: SearchAThing.Sci.Geometry
      description: ''
    return:
      type: netDxf.Entities.EntityObject
    content.vb: Public Shared Widening Operator CType(geom As Geometry) As EntityObject
  overload: SearchAThing.Sci.Geometry.op_Implicit*
  nameWithType.vb: Geometry.CType(Geometry)
  fullName.vb: SearchAThing.Sci.Geometry.CType(SearchAThing.Sci.Geometry)
  name.vb: CType(Geometry)
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.Geometry.Copy*
  commentId: Overload:SearchAThing.Sci.Geometry.Copy
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  name: Copy
  nameWithType: Geometry.Copy
  fullName: SearchAThing.Sci.Geometry.Copy
- uid: SearchAThing.Sci.Geometry
  commentId: T:SearchAThing.Sci.Geometry
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Geometry.html
  name: Geometry
  nameWithType: Geometry
  fullName: SearchAThing.Sci.Geometry
- uid: SearchAThing.Sci.Geometry.#ctor*
  commentId: Overload:SearchAThing.Sci.Geometry.#ctor
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry__ctor_SearchAThing_Sci_GeometryType_
  name: Geometry
  nameWithType: Geometry.Geometry
  fullName: SearchAThing.Sci.Geometry.Geometry
  nameWithType.vb: Geometry.New
  fullName.vb: SearchAThing.Sci.Geometry.New
  name.vb: New
- uid: SearchAThing.Sci.GeometryType
  commentId: T:SearchAThing.Sci.GeometryType
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.GeometryType.html
  name: GeometryType
  nameWithType: GeometryType
  fullName: SearchAThing.Sci.GeometryType
- uid: SearchAThing.Sci.Geometry.GeomType*
  commentId: Overload:SearchAThing.Sci.Geometry.GeomType
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomType
  name: GeomType
  nameWithType: Geometry.GeomType
  fullName: SearchAThing.Sci.Geometry.GeomType
- uid: SearchAThing.Sci.Geometry.Vertexes*
  commentId: Overload:SearchAThing.Sci.Geometry.Vertexes
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Vertexes
  name: Vertexes
  nameWithType: Geometry.Vertexes
  fullName: SearchAThing.Sci.Geometry.Vertexes
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3D>
  nameWithType: IEnumerable<Vector3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>
  nameWithType.vb: IEnumerable(Of Vector3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D)
  name.vb: IEnumerable(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.Geometry.GeomFrom*
  commentId: Overload:SearchAThing.Sci.Geometry.GeomFrom
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomFrom
  name: GeomFrom
  nameWithType: Geometry.GeomFrom
  fullName: SearchAThing.Sci.Geometry.GeomFrom
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.Geometry.GeomTo*
  commentId: Overload:SearchAThing.Sci.Geometry.GeomTo
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomTo
  name: GeomTo
  nameWithType: Geometry.GeomTo
  fullName: SearchAThing.Sci.Geometry.GeomTo
- uid: SearchAThing.Sci.Geometry.Length*
  commentId: Overload:SearchAThing.Sci.Geometry.Length
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Length
  name: Length
  nameWithType: Geometry.Length
  fullName: SearchAThing.Sci.Geometry.Length
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.Geometry.MidPoint*
  commentId: Overload:SearchAThing.Sci.Geometry.MidPoint
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_MidPoint
  name: MidPoint
  nameWithType: Geometry.MidPoint
  fullName: SearchAThing.Sci.Geometry.MidPoint
- uid: SearchAThing.Sci.Geometry.Divide*
  commentId: Overload:SearchAThing.Sci.Geometry.Divide
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  name: Divide
  nameWithType: Geometry.Divide
  fullName: SearchAThing.Sci.Geometry.Divide
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.Geometry.Split*
  commentId: Overload:SearchAThing.Sci.Geometry.Split
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  name: Split
  nameWithType: Geometry.Split
  fullName: SearchAThing.Sci.Geometry.Split
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Geometry>
  nameWithType: IEnumerable<Geometry>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Geometry>
  nameWithType.vb: IEnumerable(Of Geometry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Geometry)
  name.vb: IEnumerable(Of Geometry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: )
- uid: SearchAThing.Sci.Geometry.Move*
  commentId: Overload:SearchAThing.Sci.Geometry.Move
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  name: Move
  nameWithType: Geometry.Move
  fullName: SearchAThing.Sci.Geometry.Move
- uid: SearchAThing.Sci.Geometry.BBox*
  commentId: Overload:SearchAThing.Sci.Geometry.BBox
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  name: BBox
  nameWithType: Geometry.BBox
  fullName: SearchAThing.Sci.Geometry.BBox
- uid: SearchAThing.Sci.BBox3D
  commentId: T:SearchAThing.Sci.BBox3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.BBox3D.html
  name: BBox3D
  nameWithType: BBox3D
  fullName: SearchAThing.Sci.BBox3D
- uid: SearchAThing.Sci.Geometry.GeomIntersect*
  commentId: Overload:SearchAThing.Sci.Geometry.GeomIntersect
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  name: GeomIntersect
  nameWithType: Geometry.GeomIntersect
  fullName: SearchAThing.Sci.Geometry.GeomIntersect
- uid: SearchAThing.Sci.GeomSegmentMode
  commentId: T:SearchAThing.Sci.GeomSegmentMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.GeomSegmentMode.html
  name: GeomSegmentMode
  nameWithType: GeomSegmentMode
  fullName: SearchAThing.Sci.GeomSegmentMode
- uid: SearchAThing.Sci.Geometry.GeomEquals*
  commentId: Overload:SearchAThing.Sci.Geometry.GeomEquals
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  name: GeomEquals
  nameWithType: Geometry.GeomEquals
  fullName: SearchAThing.Sci.Geometry.GeomEquals
- uid: SearchAThing.Sci.Geometry.DxfEntity*
  commentId: Overload:SearchAThing.Sci.Geometry.DxfEntity
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_DxfEntity
  name: DxfEntity
  nameWithType: Geometry.DxfEntity
  fullName: SearchAThing.Sci.Geometry.DxfEntity
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  isExternal: true
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
- uid: SearchAThing.Sci.Geometry.op_Implicit*
  commentId: Overload:SearchAThing.Sci.Geometry.op_Implicit
  name: implicit operator
  nameWithType: Geometry.implicit operator
  fullName: SearchAThing.Sci.Geometry.implicit operator
  nameWithType.vb: Geometry.CType
  fullName.vb: SearchAThing.Sci.Geometry.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
