### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  id: Vector3D
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Vector3D.#ctor
  - SearchAThing.Sci.Vector3D.#ctor(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.#ctor(System.Double,System.Double)
  - SearchAThing.Sci.Vector3D.#ctor(System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Vector3D.#ctor(System.Double[])
  - SearchAThing.Sci.Vector3D.#ctor(System.String)
  - SearchAThing.Sci.Vector3D.A0QCadScript
  - SearchAThing.Sci.Vector3D.Abs
  - SearchAThing.Sci.Vector3D.AngleRad(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.AngleToward(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Axis(System.Int32)
  - SearchAThing.Sci.Vector3D.BBox(System.Double)
  - SearchAThing.Sci.Vector3D.CadScript
  - SearchAThing.Sci.Vector3D.CadScriptLine
  - SearchAThing.Sci.Vector3D.CadScriptLineFrom
  - SearchAThing.Sci.Vector3D.Clamp(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Colinear(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.ColinearScalarOffset(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Concordant(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.ConcordantColinear(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Coordinates
  - SearchAThing.Sci.Vector3D.Copy
  - SearchAThing.Sci.Vector3D.CrossProduct(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Debug(System.String)
  - SearchAThing.Sci.Vector3D.DisambiguatedPoints(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Distance(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Distance(System.Double,SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.Vector3D.Divide(System.Int32,System.Boolean)
  - SearchAThing.Sci.Vector3D.DotProduct(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.DxfEntity
  - SearchAThing.Sci.Vector3D.EqualsAutoTol(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.EqualsTol(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.EqualsTol(System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Vector3D.EqualsTol(System.Double,System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Vector3D.From2DCoords(System.Double[])
  - SearchAThing.Sci.Vector3D.From3DCoords(System.Double[])
  - SearchAThing.Sci.Vector3D.FromString(System.String)
  - SearchAThing.Sci.Vector3D.FromStringArray(System.String)
  - SearchAThing.Sci.Vector3D.FromTxtPointsList(System.String,System.Globalization.CultureInfo)
  - SearchAThing.Sci.Vector3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  - SearchAThing.Sci.Vector3D.GeomFrom
  - SearchAThing.Sci.Vector3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  - SearchAThing.Sci.Vector3D.GeomTo
  - SearchAThing.Sci.Vector3D.GetOrd(SearchAThing.Sci.OrdIdx)
  - SearchAThing.Sci.Vector3D.GetOrd(System.Int32)
  - SearchAThing.Sci.Vector3D.IsParallelTo(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.IsPerpendicular(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.IsZeroLength
  - SearchAThing.Sci.Vector3D.Item(System.Int32)
  - SearchAThing.Sci.Vector3D.Length
  - SearchAThing.Sci.Vector3D.LineDir(SearchAThing.Sci.Vector3D,System.Double,System.Boolean)
  - SearchAThing.Sci.Vector3D.LineTo(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.LineV(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Max
  - SearchAThing.Sci.Vector3D.MidPoint
  - SearchAThing.Sci.Vector3D.Min
  - SearchAThing.Sci.Vector3D.Mirror(SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.Vector3D.Move(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Normalized
  - SearchAThing.Sci.Vector3D.One
  - SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  - SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.QCadScript(System.Boolean)
  - SearchAThing.Sci.Vector3D.Random(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Random)
  - SearchAThing.Sci.Vector3D.Random(System.Int32,System.Double,System.Int32)
  - SearchAThing.Sci.Vector3D.Rel(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Line3D,System.Double)
  - SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Vector3D.RotateAboutXAxis(System.Double)
  - SearchAThing.Sci.Vector3D.RotateAboutYAxis(System.Double)
  - SearchAThing.Sci.Vector3D.RotateAboutZAxis(System.Double)
  - SearchAThing.Sci.Vector3D.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,System.Double,System.Double)
  - SearchAThing.Sci.Vector3D.Scalar(System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Vector3D.Set(SearchAThing.Sci.OrdIdx,System.Double)
  - SearchAThing.Sci.Vector3D.Set(System.Int32,System.Double)
  - SearchAThing.Sci.Vector3D.SetX(System.Double)
  - SearchAThing.Sci.Vector3D.SetY(System.Double)
  - SearchAThing.Sci.Vector3D.SetZ(System.Double)
  - SearchAThing.Sci.Vector3D.Sign
  - SearchAThing.Sci.Vector3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  - SearchAThing.Sci.Vector3D.SquaredDistance(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.StringRepresentation
  - SearchAThing.Sci.Vector3D.ToDeg
  - SearchAThing.Sci.Vector3D.ToDxfPoint
  - SearchAThing.Sci.Vector3D.ToDxfVector2
  - SearchAThing.Sci.Vector3D.ToDxfVector3
  - SearchAThing.Sci.Vector3D.ToNVector2
  - SearchAThing.Sci.Vector3D.ToNVector3
  - SearchAThing.Sci.Vector3D.ToPoint
  - SearchAThing.Sci.Vector3D.ToRad
  - SearchAThing.Sci.Vector3D.ToString
  - SearchAThing.Sci.Vector3D.ToString(System.Double)
  - SearchAThing.Sci.Vector3D.ToString(System.Int32)
  - SearchAThing.Sci.Vector3D.ToUCS(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  - SearchAThing.Sci.Vector3D.ToWCS(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  - SearchAThing.Sci.Vector3D.Transform(System.Numerics.Matrix4x4)
  - SearchAThing.Sci.Vector3D.Vertexes
  - SearchAThing.Sci.Vector3D.X
  - SearchAThing.Sci.Vector3D.XAxis
  - SearchAThing.Sci.Vector3D.XYDistance(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.Y
  - SearchAThing.Sci.Vector3D.YAxis
  - SearchAThing.Sci.Vector3D.Z
  - SearchAThing.Sci.Vector3D.ZAxis
  - SearchAThing.Sci.Vector3D.Zero
  - SearchAThing.Sci.Vector3D.op_Addition(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.op_Division(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Vector3D.op_Division(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.op_Implicit(LibTessDotNet.Vec3)~SearchAThing.Sci.Vector3D
  - SearchAThing.Sci.Vector3D.op_Implicit(SearchAThing.Sci.Vector3D)~System.Numerics.Vector3
  - SearchAThing.Sci.Vector3D.op_Implicit(SearchAThing.Sci.Vector3D)~netDxf.Vector3
  - SearchAThing.Sci.Vector3D.op_Implicit(System.Numerics.Vector2)~SearchAThing.Sci.Vector3D
  - SearchAThing.Sci.Vector3D.op_Implicit(System.Numerics.Vector3)~SearchAThing.Sci.Vector3D
  - SearchAThing.Sci.Vector3D.op_Implicit(netDxf.Vector2)~SearchAThing.Sci.Vector3D
  - SearchAThing.Sci.Vector3D.op_Implicit(netDxf.Vector3)~SearchAThing.Sci.Vector3D
  - SearchAThing.Sci.Vector3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.op_Multiply(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Vector3D.op_Multiply(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.op_Subtraction(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Vector3D.op_UnaryNegation(SearchAThing.Sci.Vector3D)
  langs:
  - csharp
  - vb
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
  type: Class
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Vector3D
    path: src/sci/Vector3D.cs
    startLine: 5
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: can be used to describe a wcs point or a vector x,y,z components from some reference origin
  example: []
  syntax:
    content: 'public class Vector3D : Geometry'
    content.vb: Public Class Vector3D Inherits Geometry
  inheritance:
  - System.Object
  - SearchAThing.Sci.Geometry
  inheritedMembers:
  - SearchAThing.Sci.Geometry.GeomType
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - SearchAThing.Sci.Vector3D.SearchAThing.Sci.Ext.Sqrt
- uid: SearchAThing.Sci.Vector3D.Copy
  commentId: M:SearchAThing.Sci.Vector3D.Copy
  id: Copy
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: Vector3D.Copy()
  fullName: SearchAThing.Sci.Vector3D.Copy()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Copy
    path: src/sci/Vector3D.cs
    startLine: 11
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create copy of this geometry.
  remarks: it's required to call base.CopyFrom(other) to ensure geometry properties to be copied.
  example: []
  syntax:
    content: public override Geometry Copy()
    return:
      type: SearchAThing.Sci.Geometry
    content.vb: Public Overrides Function Copy() As Geometry
  overridden: SearchAThing.Sci.Geometry.Copy
  overload: SearchAThing.Sci.Vector3D.Copy*
- uid: SearchAThing.Sci.Vector3D.Vertexes
  commentId: P:SearchAThing.Sci.Vector3D.Vertexes
  id: Vertexes
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Vertexes
  nameWithType: Vector3D.Vertexes
  fullName: SearchAThing.Sci.Vector3D.Vertexes
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Vertexes
    path: src/sci/Vector3D.cs
    startLine: 23
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Enumerable with only this vector.

    ( Geometry Vertexes implementation )
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0002.cs)'
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public override IEnumerable<Vector3D> Vertexes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: >-
      <JsonIgnore>

      Public Overrides ReadOnly Property Vertexes As IEnumerable(Of Vector3D)
  overridden: SearchAThing.Sci.Geometry.Vertexes
  overload: SearchAThing.Sci.Vector3D.Vertexes*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: SearchAThing.Sci.Vector3D.GeomFrom
  commentId: P:SearchAThing.Sci.Vector3D.GeomFrom
  id: GeomFrom
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: GeomFrom
  nameWithType: Vector3D.GeomFrom
  fullName: SearchAThing.Sci.Vector3D.GeomFrom
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomFrom
    path: src/sci/Vector3D.cs
    startLine: 39
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    This vector.

    ( Geometry GeomFrom implementation )
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0002.cs)'
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public override Vector3D GeomFrom { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: >-
      <JsonIgnore>

      Public Overrides ReadOnly Property GeomFrom As Vector3D
  overridden: SearchAThing.Sci.Geometry.GeomFrom
  overload: SearchAThing.Sci.Vector3D.GeomFrom*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: SearchAThing.Sci.Vector3D.GeomTo
  commentId: P:SearchAThing.Sci.Vector3D.GeomTo
  id: GeomTo
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: GeomTo
  nameWithType: Vector3D.GeomTo
  fullName: SearchAThing.Sci.Vector3D.GeomTo
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomTo
    path: src/sci/Vector3D.cs
    startLine: 49
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    This vector.

    ( Geometry GeomTo implementation)
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0002.cs)'
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public override Vector3D GeomTo { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: >-
      <JsonIgnore>

      Public Overrides ReadOnly Property GeomTo As Vector3D
  overridden: SearchAThing.Sci.Geometry.GeomTo
  overload: SearchAThing.Sci.Vector3D.GeomTo*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: SearchAThing.Sci.Vector3D.Length
  commentId: P:SearchAThing.Sci.Vector3D.Length
  id: Length
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector3D.Length
  fullName: SearchAThing.Sci.Vector3D.Length
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Length
    path: src/sci/Vector3D.cs
    startLine: 60
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Length of this vector.

    ( Geometry Length implementation )
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0002.cs)'
  example: []
  syntax:
    content: public override double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overrides ReadOnly Property Length As Double
  overridden: SearchAThing.Sci.Geometry.Length
  overload: SearchAThing.Sci.Vector3D.Length*
- uid: SearchAThing.Sci.Vector3D.SquaredDistance(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.SquaredDistance(SearchAThing.Sci.Vector3D)
  id: SquaredDistance(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: SquaredDistance(Vector3D)
  nameWithType: Vector3D.SquaredDistance(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.SquaredDistance(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SquaredDistance
    path: src/sci/Vector3D.cs
    startLine: 74
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: (other.X - this.X)^2 + (other.Y - this.Y)^2 + (other.Z - this.Z)^2
  example: []
  syntax:
    content: public double SquaredDistance(Vector3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Double
    content.vb: Public Function SquaredDistance(other As Vector3D) As Double
  overload: SearchAThing.Sci.Vector3D.SquaredDistance*
- uid: SearchAThing.Sci.Vector3D.MidPoint
  commentId: P:SearchAThing.Sci.Vector3D.MidPoint
  id: MidPoint
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: MidPoint
  nameWithType: Vector3D.MidPoint
  fullName: SearchAThing.Sci.Vector3D.MidPoint
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: MidPoint
    path: src/sci/Vector3D.cs
    startLine: 79
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override Vector3D MidPoint { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Overrides ReadOnly Property MidPoint As Vector3D
  overridden: SearchAThing.Sci.Geometry.MidPoint
  overload: SearchAThing.Sci.Vector3D.MidPoint*
- uid: SearchAThing.Sci.Vector3D.Divide(System.Int32,System.Boolean)
  commentId: M:SearchAThing.Sci.Vector3D.Divide(System.Int32,System.Boolean)
  id: Divide(System.Int32,System.Boolean)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Divide(int, bool)
  nameWithType: Vector3D.Divide(int, bool)
  fullName: SearchAThing.Sci.Vector3D.Divide(int, bool)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Divide
    path: src/sci/Vector3D.cs
    startLine: 88
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Divide this point returning itself.

    ( Geometry Divide implementation )
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0002.cs)'
  example: []
  syntax:
    content: public override IEnumerable<Vector3D> Divide(int cnt, bool include_endpoints = false)
    parameters:
    - id: cnt
      type: System.Int32
    - id: include_endpoints
      type: System.Boolean
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Overrides Function Divide(cnt As Integer, include_endpoints As Boolean = False) As IEnumerable(Of Vector3D)
  overridden: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  overload: SearchAThing.Sci.Vector3D.Divide*
  nameWithType.vb: Vector3D.Divide(Integer, Boolean)
  fullName.vb: SearchAThing.Sci.Vector3D.Divide(Integer, Boolean)
  name.vb: Divide(Integer, Boolean)
- uid: SearchAThing.Sci.Vector3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.Vector3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  id: Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Split(double, IEnumerable<Vector3D>)
  nameWithType: Vector3D.Split(double, IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.Vector3D.Split(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Split
    path: src/sci/Vector3D.cs
    startLine: 90
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    split geometry in given break points.

    precondition: breaks must lie on the geometry perimeter
  example: []
  syntax:
    content: public override IEnumerable<Geometry> Split(double tol, IEnumerable<Vector3D> breaks)
    parameters:
    - id: tol
      type: System.Double
    - id: breaks
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
    content.vb: Public Overrides Function Split(tol As Double, breaks As IEnumerable(Of Vector3D)) As IEnumerable(Of Geometry)
  overridden: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  overload: SearchAThing.Sci.Vector3D.Split*
  nameWithType.vb: Vector3D.Split(Double, IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.Vector3D.Split(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: Split(Double, IEnumerable(Of Vector3D))
- uid: SearchAThing.Sci.Vector3D.BBox(System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.BBox(System.Double)
  id: BBox(System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: BBox(double)
  nameWithType: Vector3D.BBox(double)
  fullName: SearchAThing.Sci.Vector3D.BBox(double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BBox
    path: src/sci/Vector3D.cs
    startLine: 103
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Compute bbox of this point.

    ( Geometry BBox implementation ).
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0002.cs)'
  example: []
  syntax:
    content: public override BBox3D BBox(double tol)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    return:
      type: SearchAThing.Sci.BBox3D
    content.vb: Public Overrides Function BBox(tol As Double) As BBox3D
  overridden: SearchAThing.Sci.Geometry.BBox(System.Double)
  overload: SearchAThing.Sci.Vector3D.BBox*
  nameWithType.vb: Vector3D.BBox(Double)
  fullName.vb: SearchAThing.Sci.Vector3D.BBox(Double)
  name.vb: BBox(Double)
- uid: SearchAThing.Sci.Vector3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  commentId: M:SearchAThing.Sci.Vector3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  id: GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  nameWithType: Vector3D.GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName: SearchAThing.Sci.Vector3D.GeomIntersect(double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomIntersect
    path: src/sci/Vector3D.cs
    startLine: 105
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: find intersections between this and another geometry resulting in zero or more geometries.
  example: []
  syntax:
    content: public override IEnumerable<Geometry> GeomIntersect(double tol, Geometry other, GeomSegmentMode thisSegmentMode, GeomSegmentMode otherSegmentMode)
    parameters:
    - id: tol
      type: System.Double
      description: ''
    - id: other
      type: SearchAThing.Sci.Geometry
      description: ''
    - id: thisSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
      description: if this is Line3D specifies how to consider
    - id: otherSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
      description: if other is Line3D specifies how to consider
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
      description: ''
    content.vb: Public Overrides Function GeomIntersect(tol As Double, other As Geometry, thisSegmentMode As GeomSegmentMode, otherSegmentMode As GeomSegmentMode) As IEnumerable(Of Geometry)
  overridden: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  overload: SearchAThing.Sci.Vector3D.GeomIntersect*
  nameWithType.vb: Vector3D.GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName.vb: SearchAThing.Sci.Vector3D.GeomIntersect(Double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  name.vb: GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
- uid: SearchAThing.Sci.Vector3D.DxfEntity
  commentId: P:SearchAThing.Sci.Vector3D.DxfEntity
  id: DxfEntity
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: DxfEntity
  nameWithType: Vector3D.DxfEntity
  fullName: SearchAThing.Sci.Vector3D.DxfEntity
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DxfEntity
    path: src/sci/Vector3D.cs
    startLine: 118
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Create dxf point entity suitable for netDxf addEntity.

    ( Geometry DxfEntity implementation )
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0002.cs)'
  example: []
  syntax:
    content: public override EntityObject DxfEntity { get; }
    parameters: []
    return:
      type: netDxf.Entities.EntityObject
    content.vb: Public Overrides ReadOnly Property DxfEntity As EntityObject
  overridden: SearchAThing.Sci.Geometry.DxfEntity
  overload: SearchAThing.Sci.Vector3D.DxfEntity*
- uid: SearchAThing.Sci.Vector3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  commentId: M:SearchAThing.Sci.Vector3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  id: GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: GeomEquals(double, Geometry, bool)
  nameWithType: Vector3D.GeomEquals(double, Geometry, bool)
  fullName: SearchAThing.Sci.Vector3D.GeomEquals(double, SearchAThing.Sci.Geometry, bool)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomEquals
    path: src/sci/Vector3D.cs
    startLine: 120
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this geom equals to given other
  example: []
  syntax:
    content: public override bool GeomEquals(double tol, Geometry other, bool checkSense = false)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: other
      type: SearchAThing.Sci.Geometry
      description: other geom
    - id: checkSense
      type: System.Boolean
      description: if false two geometry with different sense but same space coverage are considered equals
    return:
      type: System.Boolean
    content.vb: Public Overrides Function GeomEquals(tol As Double, other As Geometry, checkSense As Boolean = False) As Boolean
  overridden: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  overload: SearchAThing.Sci.Vector3D.GeomEquals*
  nameWithType.vb: Vector3D.GeomEquals(Double, Geometry, Boolean)
  fullName.vb: SearchAThing.Sci.Vector3D.GeomEquals(Double, SearchAThing.Sci.Geometry, Boolean)
  name.vb: GeomEquals(Double, Geometry, Boolean)
- uid: SearchAThing.Sci.Vector3D.Zero
  commentId: F:SearchAThing.Sci.Vector3D.Zero
  id: Zero
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector3D.Zero
  fullName: SearchAThing.Sci.Vector3D.Zero
  type: Field
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Zero
    path: src/sci/Vector3D.cs
    startLine: 136
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: zero vector (0,0,0)
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0001.cs)'
  example: []
  syntax:
    content: public static readonly Vector3D Zero
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared ReadOnly Zero As Vector3D
- uid: SearchAThing.Sci.Vector3D.XAxis
  commentId: F:SearchAThing.Sci.Vector3D.XAxis
  id: XAxis
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: XAxis
  nameWithType: Vector3D.XAxis
  fullName: SearchAThing.Sci.Vector3D.XAxis
  type: Field
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: XAxis
    path: src/sci/Vector3D.cs
    startLine: 144
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: xaxis vector (1,0,0)
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0004.cs)'
  example: []
  syntax:
    content: public static readonly Vector3D XAxis
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared ReadOnly XAxis As Vector3D
- uid: SearchAThing.Sci.Vector3D.YAxis
  commentId: F:SearchAThing.Sci.Vector3D.YAxis
  id: YAxis
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: YAxis
  nameWithType: Vector3D.YAxis
  fullName: SearchAThing.Sci.Vector3D.YAxis
  type: Field
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: YAxis
    path: src/sci/Vector3D.cs
    startLine: 152
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: yaxis vector (0,1,0)
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0004.cs)'
  example: []
  syntax:
    content: public static readonly Vector3D YAxis
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared ReadOnly YAxis As Vector3D
- uid: SearchAThing.Sci.Vector3D.ZAxis
  commentId: F:SearchAThing.Sci.Vector3D.ZAxis
  id: ZAxis
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ZAxis
  nameWithType: Vector3D.ZAxis
  fullName: SearchAThing.Sci.Vector3D.ZAxis
  type: Field
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ZAxis
    path: src/sci/Vector3D.cs
    startLine: 160
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: zaxis vector (0,0,1)
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0004.cs)'
  example: []
  syntax:
    content: public static readonly Vector3D ZAxis
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared ReadOnly ZAxis As Vector3D
- uid: SearchAThing.Sci.Vector3D.One
  commentId: F:SearchAThing.Sci.Vector3D.One
  id: One
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector3D.One
  fullName: SearchAThing.Sci.Vector3D.One
  type: Field
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: One
    path: src/sci/Vector3D.cs
    startLine: 165
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: one vector (1,1,1)
  example: []
  syntax:
    content: public static readonly Vector3D One
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared ReadOnly One As Vector3D
- uid: SearchAThing.Sci.Vector3D.Axis(System.Int32)
  commentId: M:SearchAThing.Sci.Vector3D.Axis(System.Int32)
  id: Axis(System.Int32)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Axis(int)
  nameWithType: Vector3D.Axis(int)
  fullName: SearchAThing.Sci.Vector3D.Axis(int)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Axis
    path: src/sci/Vector3D.cs
    startLine: 174
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve wcs axis by given index
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0004.cs)'
  example: []
  syntax:
    content: public static Vector3D Axis(int ord)
    parameters:
    - id: ord
      type: System.Int32
      description: 0:(1,0,0) 1:(0,1,0) 2:(0,0,1)
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Function Axis(ord As Integer) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Axis*
  nameWithType.vb: Vector3D.Axis(Integer)
  fullName.vb: SearchAThing.Sci.Vector3D.Axis(Integer)
  name.vb: Axis(Integer)
- uid: SearchAThing.Sci.Vector3D.GetOrd(System.Int32)
  commentId: M:SearchAThing.Sci.Vector3D.GetOrd(System.Int32)
  id: GetOrd(System.Int32)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: GetOrd(int)
  nameWithType: Vector3D.GetOrd(int)
  fullName: SearchAThing.Sci.Vector3D.GetOrd(int)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GetOrd
    path: src/sci/Vector3D.cs
    startLine: 191
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve the component (0:X, 1:Y, 2:Z)
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0003.cs)'
  example: []
  syntax:
    content: public double GetOrd(int ord)
    parameters:
    - id: ord
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function GetOrd(ord As Integer) As Double
  overload: SearchAThing.Sci.Vector3D.GetOrd*
  nameWithType.vb: Vector3D.GetOrd(Integer)
  fullName.vb: SearchAThing.Sci.Vector3D.GetOrd(Integer)
  name.vb: GetOrd(Integer)
- uid: SearchAThing.Sci.Vector3D.GetOrd(SearchAThing.Sci.OrdIdx)
  commentId: M:SearchAThing.Sci.Vector3D.GetOrd(SearchAThing.Sci.OrdIdx)
  id: GetOrd(SearchAThing.Sci.OrdIdx)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: GetOrd(OrdIdx)
  nameWithType: Vector3D.GetOrd(OrdIdx)
  fullName: SearchAThing.Sci.Vector3D.GetOrd(SearchAThing.Sci.OrdIdx)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GetOrd
    path: src/sci/Vector3D.cs
    startLine: 208
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve the component (0:X, 1:Y, 2:Z)
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0003.cs)'
  example: []
  syntax:
    content: public double GetOrd(OrdIdx ord)
    parameters:
    - id: ord
      type: SearchAThing.Sci.OrdIdx
    return:
      type: System.Double
    content.vb: Public Function GetOrd(ord As OrdIdx) As Double
  overload: SearchAThing.Sci.Vector3D.GetOrd*
- uid: SearchAThing.Sci.Vector3D.X
  commentId: P:SearchAThing.Sci.Vector3D.X
  id: X
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector3D.X
  fullName: SearchAThing.Sci.Vector3D.X
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: X
    path: src/sci/Vector3D.cs
    startLine: 225
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: X vector component
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0005.cs)'
  example: []
  syntax:
    content: public double X { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property X As Double
  overload: SearchAThing.Sci.Vector3D.X*
- uid: SearchAThing.Sci.Vector3D.Y
  commentId: P:SearchAThing.Sci.Vector3D.Y
  id: Y
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector3D.Y
  fullName: SearchAThing.Sci.Vector3D.Y
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Y
    path: src/sci/Vector3D.cs
    startLine: 233
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Y vector component
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0005.cs)'
  example: []
  syntax:
    content: public double Y { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Y As Double
  overload: SearchAThing.Sci.Vector3D.Y*
- uid: SearchAThing.Sci.Vector3D.Z
  commentId: P:SearchAThing.Sci.Vector3D.Z
  id: Z
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector3D.Z
  fullName: SearchAThing.Sci.Vector3D.Z
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Z
    path: src/sci/Vector3D.cs
    startLine: 241
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Z vector component
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0005.cs)'
  example: []
  syntax:
    content: public double Z { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Z As Double
  overload: SearchAThing.Sci.Vector3D.Z*
- uid: SearchAThing.Sci.Vector3D.#ctor
  commentId: M:SearchAThing.Sci.Vector3D.#ctor
  id: '#ctor'
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Vector3D()
  nameWithType: Vector3D.Vector3D()
  fullName: SearchAThing.Sci.Vector3D.Vector3D()
  type: Constructor
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Vector3D.cs
    startLine: 249
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: zero vector
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0006.cs)'
  example: []
  syntax:
    content: >-
      [JsonConstructor]

      public Vector3D()
    content.vb: >-
      <JsonConstructor>

      Public Sub New()
  overload: SearchAThing.Sci.Vector3D.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3D.New()
  fullName.vb: SearchAThing.Sci.Vector3D.New()
  name.vb: New()
- uid: SearchAThing.Sci.Vector3D.#ctor(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.#ctor(SearchAThing.Sci.Vector3D)
  id: '#ctor(SearchAThing.Sci.Vector3D)'
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Vector3D(Vector3D)
  nameWithType: Vector3D.Vector3D(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.Vector3D(SearchAThing.Sci.Vector3D)
  type: Constructor
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Vector3D.cs
    startLine: 257
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a copy of given vector
  example: []
  syntax:
    content: public Vector3D(Vector3D v)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Sub New(v As Vector3D)
  overload: SearchAThing.Sci.Vector3D.#ctor*
  nameWithType.vb: Vector3D.New(Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.New(SearchAThing.Sci.Vector3D)
  name.vb: New(Vector3D)
- uid: SearchAThing.Sci.Vector3D.#ctor(System.Double[])
  commentId: M:SearchAThing.Sci.Vector3D.#ctor(System.Double[])
  id: '#ctor(System.Double[])'
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Vector3D(double[])
  nameWithType: Vector3D.Vector3D(double[])
  fullName: SearchAThing.Sci.Vector3D.Vector3D(double[])
  type: Constructor
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Vector3D.cs
    startLine: 270
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a vector (x,y,0) or (x,y,z) from given 2 or 3 doubles
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0007.cs)'
  example: []
  syntax:
    content: public Vector3D(double[] arr)
    parameters:
    - id: arr
      type: System.Double[]
    content.vb: Public Sub New(arr As Double())
  overload: SearchAThing.Sci.Vector3D.#ctor*
  nameWithType.vb: Vector3D.New(Double())
  fullName.vb: SearchAThing.Sci.Vector3D.New(Double())
  name.vb: New(Double())
- uid: SearchAThing.Sci.Vector3D.#ctor(System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Vector3D(double, double, double)
  nameWithType: Vector3D.Vector3D(double, double, double)
  fullName: SearchAThing.Sci.Vector3D.Vector3D(double, double, double)
  type: Constructor
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Vector3D.cs
    startLine: 284
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a vector by given components
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0008.cs)'
  example: []
  syntax:
    content: public Vector3D(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double, z As Double)
  overload: SearchAThing.Sci.Vector3D.#ctor*
  nameWithType.vb: Vector3D.New(Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.New(Double, Double, Double)
  name.vb: New(Double, Double, Double)
- uid: SearchAThing.Sci.Vector3D.#ctor(System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Vector3D(double, double)
  nameWithType: Vector3D.Vector3D(double, double)
  fullName: SearchAThing.Sci.Vector3D.Vector3D(double, double)
  type: Constructor
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Vector3D.cs
    startLine: 295
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a vector (x,y,0) by given components
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0008.cs)'
  example: []
  syntax:
    content: public Vector3D(double x, double y)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double)
  overload: SearchAThing.Sci.Vector3D.#ctor*
  nameWithType.vb: Vector3D.New(Double, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.New(Double, Double)
  name.vb: New(Double, Double)
- uid: SearchAThing.Sci.Vector3D.#ctor(System.String)
  commentId: M:SearchAThing.Sci.Vector3D.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Vector3D(string)
  nameWithType: Vector3D.Vector3D(string)
  fullName: SearchAThing.Sci.Vector3D.Vector3D(string)
  type: Constructor
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Vector3D.cs
    startLine: 323
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    parse cad id string (eg. "X = 4.11641325 Y = 266.06066703 Z = 11.60392802")

    constructing a point
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0009.cs)'
  example: []
  syntax:
    content: public Vector3D(string cad_id_string)
    parameters:
    - id: cad_id_string
      type: System.String
      description: cad id string
    content.vb: Public Sub New(cad_id_string As String)
  overload: SearchAThing.Sci.Vector3D.#ctor*
  nameWithType.vb: Vector3D.New(String)
  fullName.vb: SearchAThing.Sci.Vector3D.New(String)
  name.vb: New(String)
- uid: SearchAThing.Sci.Vector3D.Coordinates
  commentId: P:SearchAThing.Sci.Vector3D.Coordinates
  id: Coordinates
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Coordinates
  nameWithType: Vector3D.Coordinates
  fullName: SearchAThing.Sci.Vector3D.Coordinates
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Coordinates
    path: src/sci/Vector3D.cs
    startLine: 342
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: enumerate coordinates
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0010.cs)'
  example: []
  syntax:
    content: public IEnumerable<double> Coordinates { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Double}
    content.vb: Public ReadOnly Property Coordinates As IEnumerable(Of Double)
  overload: SearchAThing.Sci.Vector3D.Coordinates*
- uid: SearchAThing.Sci.Vector3D.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.Move(SearchAThing.Sci.Vector3D)
  id: Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Move(Vector3D)
  nameWithType: Vector3D.Move(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.Move(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Move
    path: src/sci/Vector3D.cs
    startLine: 352
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override Geometry Move(Vector3D delta)
    parameters:
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Geometry
    content.vb: Public Overrides Function Move(delta As Vector3D) As Geometry
  overridden: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  overload: SearchAThing.Sci.Vector3D.Move*
- uid: SearchAThing.Sci.Vector3D.IsZeroLength
  commentId: P:SearchAThing.Sci.Vector3D.IsZeroLength
  id: IsZeroLength
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: IsZeroLength
  nameWithType: Vector3D.IsZeroLength
  fullName: SearchAThing.Sci.Vector3D.IsZeroLength
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: IsZeroLength
    path: src/sci/Vector3D.cs
    startLine: 360
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this is a zero vector
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0011.cs)'
  example: []
  syntax:
    content: public bool IsZeroLength { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsZeroLength As Boolean
  overload: SearchAThing.Sci.Vector3D.IsZeroLength*
- uid: SearchAThing.Sci.Vector3D.EqualsTol(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.EqualsTol(System.Double,SearchAThing.Sci.Vector3D)
  id: EqualsTol(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: EqualsTol(double, Vector3D?)
  nameWithType: Vector3D.EqualsTol(double, Vector3D?)
  fullName: SearchAThing.Sci.Vector3D.EqualsTol(double, SearchAThing.Sci.Vector3D?)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EqualsTol
    path: src/sci/Vector3D.cs
    startLine: 370
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: checks vector component equality vs other given
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0012.cs)'
  example: []
  syntax:
    content: public bool EqualsTol(double tol, Vector3D? other)
    parameters:
    - id: tol
      type: System.Double
      description: 'geometric tolerance ( note: use Constants.NormalizedLengthTolerance )'
    - id: other
      type: SearchAThing.Sci.Vector3D
      description: vector to compare to this
    return:
      type: System.Boolean
    content.vb: Public Function EqualsTol(tol As Double, other As Vector3D) As Boolean
  overload: SearchAThing.Sci.Vector3D.EqualsTol*
  nameWithType.vb: Vector3D.EqualsTol(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.EqualsTol(Double, SearchAThing.Sci.Vector3D)
  name.vb: EqualsTol(Double, Vector3D)
- uid: SearchAThing.Sci.Vector3D.EqualsAutoTol(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.EqualsAutoTol(SearchAThing.Sci.Vector3D)
  id: EqualsAutoTol(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: EqualsAutoTol(Vector3D)
  nameWithType: Vector3D.EqualsAutoTol(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.EqualsAutoTol(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EqualsAutoTol
    path: src/sci/Vector3D.cs
    startLine: 386
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: check if this vector equals the given one component by component using EqualsAutoTol
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0012.cs)'
  example: []
  syntax:
    content: public bool EqualsAutoTol(Vector3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Boolean
    content.vb: Public Function EqualsAutoTol(other As Vector3D) As Boolean
  overload: SearchAThing.Sci.Vector3D.EqualsAutoTol*
- uid: SearchAThing.Sci.Vector3D.EqualsTol(System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.EqualsTol(System.Double,System.Double,System.Double)
  id: EqualsTol(System.Double,System.Double,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: EqualsTol(double, double, double)
  nameWithType: Vector3D.EqualsTol(double, double, double)
  fullName: SearchAThing.Sci.Vector3D.EqualsTol(double, double, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EqualsTol
    path: src/sci/Vector3D.cs
    startLine: 403
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: checks only x,y
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0012.cs)'
  example: []
  syntax:
    content: public bool EqualsTol(double tol, double x, double y)
    parameters:
    - id: tol
      type: System.Double
      description: 'geometric tolerance ( note: use Constants.NormalizedLengthTolerance )'
    - id: x
      type: System.Double
      description: x coord
    - id: y
      type: System.Double
      description: y coord
    return:
      type: System.Boolean
    content.vb: Public Function EqualsTol(tol As Double, x As Double, y As Double) As Boolean
  overload: SearchAThing.Sci.Vector3D.EqualsTol*
  nameWithType.vb: Vector3D.EqualsTol(Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.EqualsTol(Double, Double, Double)
  name.vb: EqualsTol(Double, Double, Double)
- uid: SearchAThing.Sci.Vector3D.EqualsTol(System.Double,System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.EqualsTol(System.Double,System.Double,System.Double,System.Double)
  id: EqualsTol(System.Double,System.Double,System.Double,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: EqualsTol(double, double, double, double)
  nameWithType: Vector3D.EqualsTol(double, double, double, double)
  fullName: SearchAThing.Sci.Vector3D.EqualsTol(double, double, double, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EqualsTol
    path: src/sci/Vector3D.cs
    startLine: 416
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: checks vector component equality vs other given
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0012.cs)'
  example: []
  syntax:
    content: public bool EqualsTol(double tol, double x, double y, double z)
    parameters:
    - id: tol
      type: System.Double
      description: 'geometric tolerance ( note: use Constants.NormalizedLengthTolerance )'
    - id: x
      type: System.Double
      description: x coord
    - id: y
      type: System.Double
      description: y coord
    - id: z
      type: System.Double
      description: z coord
    return:
      type: System.Boolean
    content.vb: Public Function EqualsTol(tol As Double, x As Double, y As Double, z As Double) As Boolean
  overload: SearchAThing.Sci.Vector3D.EqualsTol*
  nameWithType.vb: Vector3D.EqualsTol(Double, Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.EqualsTol(Double, Double, Double, Double)
  name.vb: EqualsTol(Double, Double, Double, Double)
- uid: SearchAThing.Sci.Vector3D.Normalized
  commentId: M:SearchAThing.Sci.Vector3D.Normalized
  id: Normalized
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Normalized()
  nameWithType: Vector3D.Normalized()
  fullName: SearchAThing.Sci.Vector3D.Normalized()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Normalized
    path: src/sci/Vector3D.cs
    startLine: 425
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create a normalized version of this vector
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0013.cs)'
  example: []
  syntax:
    content: public Vector3D Normalized()
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Normalized() As Vector3D
  overload: SearchAThing.Sci.Vector3D.Normalized*
- uid: SearchAThing.Sci.Vector3D.Distance(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.Distance(SearchAThing.Sci.Vector3D)
  id: Distance(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Distance(Vector3D)
  nameWithType: Vector3D.Distance(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.Distance(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Distance
    path: src/sci/Vector3D.cs
    startLine: 437
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: compute distance between this point and the other given
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0014.cs)'
  example: []
  syntax:
    content: public double Distance(Vector3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Double
    content.vb: Public Function Distance(other As Vector3D) As Double
  overload: SearchAThing.Sci.Vector3D.Distance*
- uid: SearchAThing.Sci.Vector3D.ColinearScalarOffset(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.ColinearScalarOffset(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: ColinearScalarOffset(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ColinearScalarOffset(double, Vector3D, Vector3D)
  nameWithType: Vector3D.ColinearScalarOffset(double, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.ColinearScalarOffset(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ColinearScalarOffset
    path: src/sci/Vector3D.cs
    startLine: 443
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    retrieve signed offset of this point respect given origin point in the given normalized direction v.

    precondition: vector v must colinear to (this-origin) and must already normalized
  example: []
  syntax:
    content: public double ColinearScalarOffset(double tol, Vector3D origin, Vector3D v)
    parameters:
    - id: tol
      type: System.Double
    - id: origin
      type: SearchAThing.Sci.Vector3D
    - id: v
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Double
    content.vb: Public Function ColinearScalarOffset(tol As Double, origin As Vector3D, v As Vector3D) As Double
  overload: SearchAThing.Sci.Vector3D.ColinearScalarOffset*
  nameWithType.vb: Vector3D.ColinearScalarOffset(Double, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.ColinearScalarOffset(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: ColinearScalarOffset(Double, Vector3D, Vector3D)
- uid: SearchAThing.Sci.Vector3D.Distance(System.Double,SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Vector3D.Distance(System.Double,SearchAThing.Sci.Line3D)
  id: Distance(System.Double,SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Distance(double, Line3D)
  nameWithType: Vector3D.Distance(double, Line3D)
  fullName: SearchAThing.Sci.Vector3D.Distance(double, SearchAThing.Sci.Line3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Distance
    path: src/sci/Vector3D.cs
    startLine: 462
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: compute perpendicular(min) distance of this point from given line
  remarks: >-
    [unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0015.cs)

    ![image](../src/test/Vector3D/Vector3DTest_0015.png)
  example: []
  syntax:
    content: public double Distance(double tol, Line3D other)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance ( used to check if point contained in line )
    - id: other
      type: SearchAThing.Sci.Line3D
      description: line
    return:
      type: System.Double
    content.vb: Public Function Distance(tol As Double, other As Line3D) As Double
  overload: SearchAThing.Sci.Vector3D.Distance*
  nameWithType.vb: Vector3D.Distance(Double, Line3D)
  fullName.vb: SearchAThing.Sci.Vector3D.Distance(Double, SearchAThing.Sci.Line3D)
  name.vb: Distance(Double, Line3D)
- uid: SearchAThing.Sci.Vector3D.XYDistance(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.XYDistance(SearchAThing.Sci.Vector3D)
  id: XYDistance(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: XYDistance(Vector3D)
  nameWithType: Vector3D.XYDistance(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.XYDistance(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: XYDistance
    path: src/sci/Vector3D.cs
    startLine: 477
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: compute distance of this point from the given in 2d ( x,y ) without consider z component
  remarks: >-
    [unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0016.cs)

    ![image](../src/test/Vector3D/Vector3DTest_0016.png)
  example: []
  syntax:
    content: public double XYDistance(Vector3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.Vector3D
      description: other point
    return:
      type: System.Double
    content.vb: Public Function XYDistance(other As Vector3D) As Double
  overload: SearchAThing.Sci.Vector3D.XYDistance*
- uid: SearchAThing.Sci.Vector3D.DotProduct(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.DotProduct(SearchAThing.Sci.Vector3D)
  id: DotProduct(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: DotProduct(Vector3D)
  nameWithType: Vector3D.DotProduct(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.DotProduct(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DotProduct
    path: src/sci/Vector3D.cs
    startLine: 488
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    compute dot product of this vector for the given one            

    a b = |a| |b| cos(alfa)
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0017.cs)'
  example: []
  syntax:
    content: public double DotProduct(Vector3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.Vector3D
      description: second vector
    return:
      type: System.Double
    content.vb: Public Function DotProduct(other As Vector3D) As Double
  overload: SearchAThing.Sci.Vector3D.DotProduct*
- uid: SearchAThing.Sci.Vector3D.IsPerpendicular(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.IsPerpendicular(SearchAThing.Sci.Vector3D)
  id: IsPerpendicular(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: IsPerpendicular(Vector3D)
  nameWithType: Vector3D.IsPerpendicular(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.IsPerpendicular(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: IsPerpendicular
    path: src/sci/Vector3D.cs
    startLine: 497
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states is this vector is perpendicular to the given one
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0018.cs)'
  example: []
  syntax:
    content: public bool IsPerpendicular(Vector3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.Vector3D
      description: other vector
    return:
      type: System.Boolean
    content.vb: Public Function IsPerpendicular(other As Vector3D) As Boolean
  overload: SearchAThing.Sci.Vector3D.IsPerpendicular*
- uid: SearchAThing.Sci.Vector3D.CrossProduct(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.CrossProduct(SearchAThing.Sci.Vector3D)
  id: CrossProduct(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: CrossProduct(Vector3D)
  nameWithType: Vector3D.CrossProduct(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.CrossProduct(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CrossProduct
    path: src/sci/Vector3D.cs
    startLine: 513
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Cross product ( not normalized ) ;            

    a x b = |a| |b| sin(alfa) N ;        

    a x b = |  x  y  z |
            | ax ay az |
            | bx by bz |            
    [reference](https://en.wikipedia.org/wiki/Cross_product) ;
  remarks: >-
    [unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0019.cs)

    ![image](../src/test/Vector3D/Vector3DTest_0019.png)
  example: []
  syntax:
    content: public Vector3D CrossProduct(Vector3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.Vector3D
      description: other vector
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function CrossProduct(other As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.CrossProduct*
- uid: SearchAThing.Sci.Vector3D.AngleRad(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.AngleRad(System.Double,SearchAThing.Sci.Vector3D)
  id: AngleRad(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: AngleRad(double, Vector3D)
  nameWithType: Vector3D.AngleRad(double, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.AngleRad(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: AngleRad
    path: src/sci/Vector3D.cs
    startLine: 526
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: angle between this and given vector
  remarks: >-
    [unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0020.cs)

    ![image](../src/test/Vector3D/Vector3DTest_0020.png)
  example: []
  syntax:
    content: public double AngleRad(double tol, Vector3D to)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance to test vector equalities ( use Constants.NormalizedLengthTolerance when comparing normalized vectors )
    - id: to
      type: SearchAThing.Sci.Vector3D
      description: other vector
    return:
      type: System.Double
      description: angle between two vectors (rad)
    content.vb: Public Function AngleRad(tol As Double, [to] As Vector3D) As Double
  overload: SearchAThing.Sci.Vector3D.AngleRad*
  nameWithType.vb: Vector3D.AngleRad(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.AngleRad(Double, SearchAThing.Sci.Vector3D)
  name.vb: AngleRad(Double, Vector3D)
- uid: SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.Vector3D)
  id: Project(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Project(Vector3D)
  nameWithType: Vector3D.Project(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Project
    path: src/sci/Vector3D.cs
    startLine: 559
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: project this vector to the given one
  remarks: >-
    [unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0021.cs)

    ![image](../src/test/Vector3D/Vector3DTest_0021.png)
  example: []
  syntax:
    content: public Vector3D Project(Vector3D to)
    parameters:
    - id: to
      type: SearchAThing.Sci.Vector3D
      description: other vector
    return:
      type: SearchAThing.Sci.Vector3D
      description: projected vector ( will be colinear to the given one )
    content.vb: Public Function Project([to] As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Project*
- uid: SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.Line3D)
  id: Project(SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Project(Line3D)
  nameWithType: Vector3D.Project(Line3D)
  fullName: SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.Line3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Project
    path: src/sci/Vector3D.cs
    startLine: 574
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: project this point to the given line considered as infinite line
  example: []
  syntax:
    content: public Vector3D Project(Line3D line)
    parameters:
    - id: line
      type: SearchAThing.Sci.Line3D
      description: line to project the point onto
    return:
      type: SearchAThing.Sci.Vector3D
      description: projected point onto the line ( perpendicularly )
    content.vb: Public Function Project(line As Line3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Project*
- uid: SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  id: Project(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Project(CoordinateSystem3D, bool)
  nameWithType: Vector3D.Project(CoordinateSystem3D, bool)
  fullName: SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.CoordinateSystem3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Project
    path: src/sci/Vector3D.cs
    startLine: 581
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: wcs coord of projected coord to the given cs
  example: []
  syntax:
    content: public Vector3D Project(CoordinateSystem3D cs, bool evalCSOrigin = true)
    parameters:
    - id: cs
      type: SearchAThing.Sci.CoordinateSystem3D
      description: cs to project
    - id: evalCSOrigin
      type: System.Boolean
      description: if true cs origin will subtracted before transform, then readded to obtain wcs point
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Project(cs As CoordinateSystem3D, evalCSOrigin As Boolean = True) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Project*
  nameWithType.vb: Vector3D.Project(CoordinateSystem3D, Boolean)
  fullName.vb: SearchAThing.Sci.Vector3D.Project(SearchAThing.Sci.CoordinateSystem3D, Boolean)
  name.vb: Project(CoordinateSystem3D, Boolean)
- uid: SearchAThing.Sci.Vector3D.Set(SearchAThing.Sci.OrdIdx,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.Set(SearchAThing.Sci.OrdIdx,System.Double)
  id: Set(SearchAThing.Sci.OrdIdx,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Set(OrdIdx, double)
  nameWithType: Vector3D.Set(OrdIdx, double)
  fullName: SearchAThing.Sci.Vector3D.Set(SearchAThing.Sci.OrdIdx, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Set
    path: src/sci/Vector3D.cs
    startLine: 590
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create a point copy of this one with component changed
  example: []
  syntax:
    content: public Vector3D Set(OrdIdx ordIdx, double value)
    parameters:
    - id: ordIdx
      type: SearchAThing.Sci.OrdIdx
      description: component to change ( 0:x 1:y 2:z )
    - id: value
      type: System.Double
      description: value to assign to the component
    return:
      type: SearchAThing.Sci.Vector3D
      description: new vector with component changed
    content.vb: Public Function [Set](ordIdx As OrdIdx, value As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Set*
  nameWithType.vb: Vector3D.Set(OrdIdx, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.Set(SearchAThing.Sci.OrdIdx, Double)
  name.vb: Set(OrdIdx, Double)
- uid: SearchAThing.Sci.Vector3D.Set(System.Int32,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.Set(System.Int32,System.Double)
  id: Set(System.Int32,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Set(int, double)
  nameWithType: Vector3D.Set(int, double)
  fullName: SearchAThing.Sci.Vector3D.Set(int, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Set
    path: src/sci/Vector3D.cs
    startLine: 613
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create a point copy of this one with component changed
  example: []
  syntax:
    content: public Vector3D Set(int ordIdx, double value)
    parameters:
    - id: ordIdx
      type: System.Int32
      description: component to change ( 0:x 1:y 2:z )
    - id: value
      type: System.Double
      description: value to assign to the component
    return:
      type: SearchAThing.Sci.Vector3D
      description: new vector with component changed
    content.vb: Public Function [Set](ordIdx As Integer, value As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Set*
  nameWithType.vb: Vector3D.Set(Integer, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.Set(Integer, Double)
  name.vb: Set(Integer, Double)
- uid: SearchAThing.Sci.Vector3D.SetX(System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.SetX(System.Double)
  id: SetX(System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: SetX(double)
  nameWithType: Vector3D.SetX(double)
  fullName: SearchAThing.Sci.Vector3D.SetX(double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SetX
    path: src/sci/Vector3D.cs
    startLine: 635
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create new vector with X changed
  example: []
  syntax:
    content: public Vector3D SetX(double value)
    parameters:
    - id: value
      type: System.Double
      description: input vector
    return:
      type: SearchAThing.Sci.Vector3D
      description: output vector with X changed
    content.vb: Public Function SetX(value As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.SetX*
  nameWithType.vb: Vector3D.SetX(Double)
  fullName.vb: SearchAThing.Sci.Vector3D.SetX(Double)
  name.vb: SetX(Double)
- uid: SearchAThing.Sci.Vector3D.SetY(System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.SetY(System.Double)
  id: SetY(System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: SetY(double)
  nameWithType: Vector3D.SetY(double)
  fullName: SearchAThing.Sci.Vector3D.SetY(double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SetY
    path: src/sci/Vector3D.cs
    startLine: 643
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create new vector with Y changed
  example: []
  syntax:
    content: public Vector3D SetY(double value)
    parameters:
    - id: value
      type: System.Double
      description: input vector
    return:
      type: SearchAThing.Sci.Vector3D
      description: output vector with Y changed
    content.vb: Public Function SetY(value As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.SetY*
  nameWithType.vb: Vector3D.SetY(Double)
  fullName.vb: SearchAThing.Sci.Vector3D.SetY(Double)
  name.vb: SetY(Double)
- uid: SearchAThing.Sci.Vector3D.SetZ(System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.SetZ(System.Double)
  id: SetZ(System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: SetZ(double)
  nameWithType: Vector3D.SetZ(double)
  fullName: SearchAThing.Sci.Vector3D.SetZ(double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SetZ
    path: src/sci/Vector3D.cs
    startLine: 651
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create new vector with Z changed
  example: []
  syntax:
    content: public Vector3D SetZ(double value)
    parameters:
    - id: value
      type: System.Double
      description: input vector
    return:
      type: SearchAThing.Sci.Vector3D
      description: output vector with Z changed
    content.vb: Public Function SetZ(value As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.SetZ*
  nameWithType.vb: Vector3D.SetZ(Double)
  fullName.vb: SearchAThing.Sci.Vector3D.SetZ(Double)
  name.vb: SetZ(Double)
- uid: SearchAThing.Sci.Vector3D.Rel(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.Rel(SearchAThing.Sci.Vector3D)
  id: Rel(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Rel(Vector3D)
  nameWithType: Vector3D.Rel(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.Rel(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Rel
    path: src/sci/Vector3D.cs
    startLine: 659
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create a vector relative to given origin from this point and given origin
  example: []
  syntax:
    content: public Vector3D Rel(Vector3D origin)
    parameters:
    - id: origin
      type: SearchAThing.Sci.Vector3D
      description: origin to make this point relative to
    return:
      type: SearchAThing.Sci.Vector3D
      description: vector
    content.vb: Public Function Rel(origin As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Rel*
- uid: SearchAThing.Sci.Vector3D.IsParallelTo(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.IsParallelTo(System.Double,SearchAThing.Sci.Vector3D)
  id: IsParallelTo(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: IsParallelTo(double, Vector3D)
  nameWithType: Vector3D.IsParallelTo(double, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.IsParallelTo(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: IsParallelTo
    path: src/sci/Vector3D.cs
    startLine: 665
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Note: tol must be Constants.NormalizedLengthTolerance

    if comparing normalized vectors
  example: []
  syntax:
    content: public bool IsParallelTo(double tol, Vector3D other)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Boolean
    content.vb: Public Function IsParallelTo(tol As Double, other As Vector3D) As Boolean
  overload: SearchAThing.Sci.Vector3D.IsParallelTo*
  nameWithType.vb: Vector3D.IsParallelTo(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.IsParallelTo(Double, SearchAThing.Sci.Vector3D)
  name.vb: IsParallelTo(Double, Vector3D)
- uid: SearchAThing.Sci.Vector3D.Colinear(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.Colinear(System.Double,SearchAThing.Sci.Vector3D)
  id: Colinear(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Colinear(double, Vector3D)
  nameWithType: Vector3D.Colinear(double, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.Colinear(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Colinear
    path: src/sci/Vector3D.cs
    startLine: 704
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this vector is colinear to the given one
  example: []
  syntax:
    content: public bool Colinear(double tol, Vector3D other)
    parameters:
    - id: tol
      type: System.Double
      description: geometric tolerance
    - id: other
      type: SearchAThing.Sci.Vector3D
      description: other vector
    return:
      type: System.Boolean
    content.vb: Public Function Colinear(tol As Double, other As Vector3D) As Boolean
  overload: SearchAThing.Sci.Vector3D.Colinear*
  nameWithType.vb: Vector3D.Colinear(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.Colinear(Double, SearchAThing.Sci.Vector3D)
  name.vb: Colinear(Double, Vector3D)
- uid: SearchAThing.Sci.Vector3D.Concordant(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.Concordant(System.Double,SearchAThing.Sci.Vector3D)
  id: Concordant(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Concordant(double, Vector3D)
  nameWithType: Vector3D.Concordant(double, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.Concordant(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Concordant
    path: src/sci/Vector3D.cs
    startLine: 714
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    states if this vector concord to the given one


    **NOTE**: it does not test two vectors are parallels ( precondition must meet )
  example: []
  syntax:
    content: public bool Concordant(double tol, Vector3D other)
    parameters:
    - id: tol
      type: System.Double
      description: geometric tolerance ( Constants.NormalizedLengthTolerance if comparing normalized vectors )
    - id: other
      type: SearchAThing.Sci.Vector3D
      description: other vector
    return:
      type: System.Boolean
    content.vb: Public Function Concordant(tol As Double, other As Vector3D) As Boolean
  overload: SearchAThing.Sci.Vector3D.Concordant*
  nameWithType.vb: Vector3D.Concordant(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.Concordant(Double, SearchAThing.Sci.Vector3D)
  name.vb: Concordant(Double, Vector3D)
- uid: SearchAThing.Sci.Vector3D.ConcordantColinear(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.ConcordantColinear(System.Double,SearchAThing.Sci.Vector3D)
  id: ConcordantColinear(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ConcordantColinear(double, Vector3D)
  nameWithType: Vector3D.ConcordantColinear(double, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.ConcordantColinear(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ConcordantColinear
    path: src/sci/Vector3D.cs
    startLine: 721
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: statis if this vector is concordant and colinear to the given one
  example: []
  syntax:
    content: public bool ConcordantColinear(double tol, Vector3D other)
    parameters:
    - id: tol
      type: System.Double
      description: geometric tolerance ( Constants.NormalizedLengthTolerance if comparing normalized vectors )
    - id: other
      type: SearchAThing.Sci.Vector3D
      description: other vector
    return:
      type: System.Boolean
    content.vb: Public Function ConcordantColinear(tol As Double, other As Vector3D) As Boolean
  overload: SearchAThing.Sci.Vector3D.ConcordantColinear*
  nameWithType.vb: Vector3D.ConcordantColinear(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.ConcordantColinear(Double, SearchAThing.Sci.Vector3D)
  name.vb: ConcordantColinear(Double, Vector3D)
- uid: SearchAThing.Sci.Vector3D.AngleToward(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.AngleToward(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: AngleToward(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: AngleToward(double, Vector3D, Vector3D)
  nameWithType: Vector3D.AngleToward(double, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.AngleToward(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: AngleToward
    path: src/sci/Vector3D.cs
    startLine: 731
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    compute angle required to make this point go to the given one

    if rotate right-hand around given reference axis
  example: []
  syntax:
    content: public double AngleToward(double tol, Vector3D to, Vector3D refAxis)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance ( use Constants.NormalizedLengthTolerance if working with normalized vectors )
    - id: to
      type: SearchAThing.Sci.Vector3D
      description: point toward rotate this one
    - id: refAxis
      type: SearchAThing.Sci.Vector3D
      description: reference axis to make right-hand rotation of this point toward given one
    return:
      type: System.Double
      description: angle (rad)
    content.vb: Public Function AngleToward(tol As Double, [to] As Vector3D, refAxis As Vector3D) As Double
  overload: SearchAThing.Sci.Vector3D.AngleToward*
  nameWithType.vb: Vector3D.AngleToward(Double, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.AngleToward(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: AngleToward(Double, Vector3D, Vector3D)
- uid: SearchAThing.Sci.Vector3D.RotateAboutXAxis(System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.RotateAboutXAxis(System.Double)
  id: RotateAboutXAxis(System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: RotateAboutXAxis(double)
  nameWithType: Vector3D.RotateAboutXAxis(double)
  fullName: SearchAThing.Sci.Vector3D.RotateAboutXAxis(double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAboutXAxis
    path: src/sci/Vector3D.cs
    startLine: 746
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: rotate this point around x-axis using quaternion
  example: []
  syntax:
    content: public Vector3D RotateAboutXAxis(double angleRad)
    parameters:
    - id: angleRad
      type: System.Double
      description: angle (rad) of rotation
    return:
      type: SearchAThing.Sci.Vector3D
      description: rotated point
    content.vb: Public Function RotateAboutXAxis(angleRad As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.RotateAboutXAxis*
  nameWithType.vb: Vector3D.RotateAboutXAxis(Double)
  fullName.vb: SearchAThing.Sci.Vector3D.RotateAboutXAxis(Double)
  name.vb: RotateAboutXAxis(Double)
- uid: SearchAThing.Sci.Vector3D.RotateAboutYAxis(System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.RotateAboutYAxis(System.Double)
  id: RotateAboutYAxis(System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: RotateAboutYAxis(double)
  nameWithType: Vector3D.RotateAboutYAxis(double)
  fullName: SearchAThing.Sci.Vector3D.RotateAboutYAxis(double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAboutYAxis
    path: src/sci/Vector3D.cs
    startLine: 758
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: rotate this point around y-axis using quaternion
  example: []
  syntax:
    content: public Vector3D RotateAboutYAxis(double angleRad)
    parameters:
    - id: angleRad
      type: System.Double
      description: angle (rad) of rotation
    return:
      type: SearchAThing.Sci.Vector3D
      description: rotated point
    content.vb: Public Function RotateAboutYAxis(angleRad As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.RotateAboutYAxis*
  nameWithType.vb: Vector3D.RotateAboutYAxis(Double)
  fullName.vb: SearchAThing.Sci.Vector3D.RotateAboutYAxis(Double)
  name.vb: RotateAboutYAxis(Double)
- uid: SearchAThing.Sci.Vector3D.RotateAboutZAxis(System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.RotateAboutZAxis(System.Double)
  id: RotateAboutZAxis(System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: RotateAboutZAxis(double)
  nameWithType: Vector3D.RotateAboutZAxis(double)
  fullName: SearchAThing.Sci.Vector3D.RotateAboutZAxis(double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAboutZAxis
    path: src/sci/Vector3D.cs
    startLine: 770
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: rotate this point around z-axis using quaternion
  example: []
  syntax:
    content: public Vector3D RotateAboutZAxis(double angleRad)
    parameters:
    - id: angleRad
      type: System.Double
      description: angle (rad) of rotation
    return:
      type: SearchAThing.Sci.Vector3D
      description: rotated point
    content.vb: Public Function RotateAboutZAxis(angleRad As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.RotateAboutZAxis*
  nameWithType.vb: Vector3D.RotateAboutZAxis(Double)
  fullName.vb: SearchAThing.Sci.Vector3D.RotateAboutZAxis(Double)
  name.vb: RotateAboutZAxis(Double)
- uid: SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Vector3D,System.Double)
  id: RotateAboutAxis(SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: RotateAboutAxis(Vector3D, double)
  nameWithType: Vector3D.RotateAboutAxis(Vector3D, double)
  fullName: SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Vector3D, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAboutAxis
    path: src/sci/Vector3D.cs
    startLine: 783
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: rotate this point right-hand around given axis using quaternion
  example: []
  syntax:
    content: public Vector3D RotateAboutAxis(Vector3D axis, double angleRad)
    parameters:
    - id: axis
      type: SearchAThing.Sci.Vector3D
      description: rotation axis
    - id: angleRad
      type: System.Double
      description: angle (rad) of rotation
    return:
      type: SearchAThing.Sci.Vector3D
      description: rotated point
    content.vb: Public Function RotateAboutAxis(axis As Vector3D, angleRad As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.RotateAboutAxis*
  nameWithType.vb: Vector3D.RotateAboutAxis(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Vector3D, Double)
  name.vb: RotateAboutAxis(Vector3D, Double)
- uid: SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Line3D,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Line3D,System.Double)
  id: RotateAboutAxis(SearchAThing.Sci.Line3D,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: RotateAboutAxis(Line3D, double)
  nameWithType: Vector3D.RotateAboutAxis(Line3D, double)
  fullName: SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Line3D, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAboutAxis
    path: src/sci/Vector3D.cs
    startLine: 796
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: rotate this point right-hand around given segment using quaternion
  example: []
  syntax:
    content: public Vector3D RotateAboutAxis(Line3D axisSegment, double angleRad)
    parameters:
    - id: axisSegment
      type: SearchAThing.Sci.Line3D
      description: rotation axis segment
    - id: angleRad
      type: System.Double
      description: angle (rad) of rotation
    return:
      type: SearchAThing.Sci.Vector3D
      description: rotated point
    content.vb: Public Function RotateAboutAxis(axisSegment As Line3D, angleRad As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.RotateAboutAxis*
  nameWithType.vb: Vector3D.RotateAboutAxis(Line3D, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.RotateAboutAxis(SearchAThing.Sci.Line3D, Double)
  name.vb: RotateAboutAxis(Line3D, Double)
- uid: SearchAThing.Sci.Vector3D.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,System.Double,System.Double)
  id: RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,System.Double,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: RotateAs(double, Vector3D, Vector3D, double, double)
  nameWithType: Vector3D.RotateAs(double, Vector3D, Vector3D, double, double)
  fullName: SearchAThing.Sci.Vector3D.RotateAs(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, double, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAs
    path: src/sci/Vector3D.cs
    startLine: 818
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Note: tol must be Constants.NormalizedLengthTolerance

    if comparing normalized vectors

    rotation from-to will be multiplied for given angleFactor ( default 1.0 )
  example: []
  syntax:
    content: public Vector3D RotateAs(double tol, Vector3D from, Vector3D to, double angleFactor = 1, double angleAddictionalRad = 0)
    parameters:
    - id: tol
      type: System.Double
      description: geometric tolerance ( use Constants.NormalizedLengthTolerance if vectors are normalized )
    - id: from
      type: SearchAThing.Sci.Vector3D
      description: point from describing rotation path
    - id: to
      type: SearchAThing.Sci.Vector3D
      description: point to describing rotation path
    - id: angleFactor
      type: System.Double
      description: optional angle rotation scaler
    - id: angleAddictionalRad
      type: System.Double
      description: optional angle (rad) component (added after angleFactor scaler)
    return:
      type: SearchAThing.Sci.Vector3D
      description: ''
    content.vb: Public Function RotateAs(tol As Double, from As Vector3D, [to] As Vector3D, angleFactor As Double = 1, angleAddictionalRad As Double = 0) As Vector3D
  overload: SearchAThing.Sci.Vector3D.RotateAs*
  nameWithType.vb: Vector3D.RotateAs(Double, Vector3D, Vector3D, Double, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.RotateAs(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, Double, Double)
  name.vb: RotateAs(Double, Vector3D, Vector3D, Double, Double)
- uid: SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D,System.Double)
  id: ScaleAbout(SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ScaleAbout(Vector3D, double)
  nameWithType: Vector3D.ScaleAbout(Vector3D, double)
  fullName: SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ScaleAbout
    path: src/sci/Vector3D.cs
    startLine: 828
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Scale this point about the given origin with the given factor.
  example: []
  syntax:
    content: public Vector3D ScaleAbout(Vector3D origin, double factor)
    parameters:
    - id: origin
      type: SearchAThing.Sci.Vector3D
    - id: factor
      type: System.Double
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function ScaleAbout(origin As Vector3D, factor As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.ScaleAbout*
  nameWithType.vb: Vector3D.ScaleAbout(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D, Double)
  name.vb: ScaleAbout(Vector3D, Double)
- uid: SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: ScaleAbout(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ScaleAbout(Vector3D, Vector3D)
  nameWithType: Vector3D.ScaleAbout(Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.ScaleAbout(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ScaleAbout
    path: src/sci/Vector3D.cs
    startLine: 838
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Scale this point about the given origin with the given factor as (sx,sy,sz).
  example: []
  syntax:
    content: public Vector3D ScaleAbout(Vector3D origin, Vector3D factor)
    parameters:
    - id: origin
      type: SearchAThing.Sci.Vector3D
    - id: factor
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function ScaleAbout(origin As Vector3D, factor As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.ScaleAbout*
- uid: SearchAThing.Sci.Vector3D.Mirror(SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Vector3D.Mirror(SearchAThing.Sci.Line3D)
  id: Mirror(SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Mirror(Line3D)
  nameWithType: Vector3D.Mirror(Line3D)
  fullName: SearchAThing.Sci.Vector3D.Mirror(SearchAThing.Sci.Line3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Mirror
    path: src/sci/Vector3D.cs
    startLine: 848
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: mirror this point about given axis
  example: []
  syntax:
    content: public Vector3D Mirror(Line3D axis)
    parameters:
    - id: axis
      type: SearchAThing.Sci.Line3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Mirror(axis As Line3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Mirror*
- uid: SearchAThing.Sci.Vector3D.ToUCS(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Vector3D.ToUCS(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  id: ToUCS(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToUCS(CoordinateSystem3D, bool)
  nameWithType: Vector3D.ToUCS(CoordinateSystem3D, bool)
  fullName: SearchAThing.Sci.Vector3D.ToUCS(SearchAThing.Sci.CoordinateSystem3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToUCS
    path: src/sci/Vector3D.cs
    startLine: 855
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Convert this wcs point to given cs coord
  example: []
  syntax:
    content: public Vector3D ToUCS(CoordinateSystem3D cs, bool evalCSOrigin = true)
    parameters:
    - id: cs
      type: SearchAThing.Sci.CoordinateSystem3D
      description: dest CS
    - id: evalCSOrigin
      type: System.Boolean
      description: if true CS origin will subtracted before transform
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function ToUCS(cs As CoordinateSystem3D, evalCSOrigin As Boolean = True) As Vector3D
  overload: SearchAThing.Sci.Vector3D.ToUCS*
  nameWithType.vb: Vector3D.ToUCS(CoordinateSystem3D, Boolean)
  fullName.vb: SearchAThing.Sci.Vector3D.ToUCS(SearchAThing.Sci.CoordinateSystem3D, Boolean)
  name.vb: ToUCS(CoordinateSystem3D, Boolean)
- uid: SearchAThing.Sci.Vector3D.ToWCS(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Vector3D.ToWCS(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  id: ToWCS(SearchAThing.Sci.CoordinateSystem3D,System.Boolean)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToWCS(CoordinateSystem3D, bool)
  nameWithType: Vector3D.ToWCS(CoordinateSystem3D, bool)
  fullName: SearchAThing.Sci.Vector3D.ToWCS(SearchAThing.Sci.CoordinateSystem3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToWCS
    path: src/sci/Vector3D.cs
    startLine: 862
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Convert this ucs considered vector using given cs to the wcs
  example: []
  syntax:
    content: public Vector3D ToWCS(CoordinateSystem3D cs, bool evalCSOrigin = true)
    parameters:
    - id: cs
      type: SearchAThing.Sci.CoordinateSystem3D
      description: ucs point
    - id: evalCSOrigin
      type: System.Boolean
      description: if true CS origin will added after transform
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function ToWCS(cs As CoordinateSystem3D, evalCSOrigin As Boolean = True) As Vector3D
  overload: SearchAThing.Sci.Vector3D.ToWCS*
  nameWithType.vb: Vector3D.ToWCS(CoordinateSystem3D, Boolean)
  fullName.vb: SearchAThing.Sci.Vector3D.ToWCS(SearchAThing.Sci.CoordinateSystem3D, Boolean)
  name.vb: ToWCS(CoordinateSystem3D, Boolean)
- uid: SearchAThing.Sci.Vector3D.Scalar(System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.Scalar(System.Double,System.Double,System.Double)
  id: Scalar(System.Double,System.Double,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Scalar(double, double, double)
  nameWithType: Vector3D.Scalar(double, double, double)
  fullName: SearchAThing.Sci.Vector3D.Scalar(double, double, double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Scalar
    path: src/sci/Vector3D.cs
    startLine: 867
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Scalar multiply each components
  example: []
  syntax:
    content: public Vector3D Scalar(double xs, double ys, double zs)
    parameters:
    - id: xs
      type: System.Double
    - id: ys
      type: System.Double
    - id: zs
      type: System.Double
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Scalar(xs As Double, ys As Double, zs As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Scalar*
  nameWithType.vb: Vector3D.Scalar(Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.Scalar(Double, Double, Double)
  name.vb: Scalar(Double, Double, Double)
- uid: SearchAThing.Sci.Vector3D.Clamp(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.Clamp(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: Clamp(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Clamp(Vector3D, Vector3D)
  nameWithType: Vector3D.Clamp(Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.Clamp(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Clamp
    path: src/sci/Vector3D.cs
    startLine: 875
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return clamped Vector3D between [min,max] interval
  example: []
  syntax:
    content: public Vector3D Clamp(Vector3D min, Vector3D max)
    parameters:
    - id: min
      type: SearchAThing.Sci.Vector3D
      description: min value admissible
    - id: max
      type: SearchAThing.Sci.Vector3D
      description: max value admissible
    return:
      type: SearchAThing.Sci.Vector3D
      description: given vector with xyz components clamped to corresponding min,max components
    content.vb: Public Function Clamp(min As Vector3D, max As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Clamp*
- uid: SearchAThing.Sci.Vector3D.Item(System.Int32)
  commentId: P:SearchAThing.Sci.Vector3D.Item(System.Int32)
  id: Item(System.Int32)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector3D.this[int]
  fullName: SearchAThing.Sci.Vector3D.this[int]
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: this[]
    path: src/sci/Vector3D.cs
    startLine: 889
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: indexed vector component
  example: []
  syntax:
    content: public double this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public ReadOnly Default Property this[](index As Integer) As Double
  overload: SearchAThing.Sci.Vector3D.Item*
  nameWithType.vb: Vector3D.this[](Integer)
  fullName.vb: SearchAThing.Sci.Vector3D.this[](Integer)
  name.vb: this[](Integer)
- uid: SearchAThing.Sci.Vector3D.op_Addition(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.op_Addition(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: op_Addition(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: operator +(Vector3D, Vector3D)
  nameWithType: Vector3D.operator +(Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.operator +(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Addition
    path: src/sci/Vector3D.cs
    startLine: 903
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: sum
  example: []
  syntax:
    content: public static Vector3D operator +(Vector3D a, Vector3D b)
    parameters:
    - id: a
      type: SearchAThing.Sci.Vector3D
    - id: b
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator +(a As Vector3D, b As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Addition*
  nameWithType.vb: Vector3D.+(Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.+(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: +(Vector3D, Vector3D)
- uid: SearchAThing.Sci.Vector3D.op_UnaryNegation(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.op_UnaryNegation(SearchAThing.Sci.Vector3D)
  id: op_UnaryNegation(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: operator -(Vector3D)
  nameWithType: Vector3D.operator -(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.operator -(SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_UnaryNegation
    path: src/sci/Vector3D.cs
    startLine: 908
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: negate
  example: []
  syntax:
    content: public static Vector3D operator -(Vector3D a)
    parameters:
    - id: a
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator -(a As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_UnaryNegation*
  nameWithType.vb: Vector3D.-(Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.-(SearchAThing.Sci.Vector3D)
  name.vb: -(Vector3D)
- uid: SearchAThing.Sci.Vector3D.op_Subtraction(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.op_Subtraction(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: op_Subtraction(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: operator -(Vector3D, Vector3D)
  nameWithType: Vector3D.operator -(Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.operator -(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Subtraction
    path: src/sci/Vector3D.cs
    startLine: 913
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: sub
  example: []
  syntax:
    content: public static Vector3D operator -(Vector3D a, Vector3D b)
    parameters:
    - id: a
      type: SearchAThing.Sci.Vector3D
    - id: b
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator -(a As Vector3D, b As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Subtraction*
  nameWithType.vb: Vector3D.-(Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.-(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: -(Vector3D, Vector3D)
- uid: SearchAThing.Sci.Vector3D.op_Multiply(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.op_Multiply(System.Double,SearchAThing.Sci.Vector3D)
  id: op_Multiply(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: operator *(double, Vector3D)
  nameWithType: Vector3D.operator *(double, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.operator *(double, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Vector3D.cs
    startLine: 918
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scalar mul
  example: []
  syntax:
    content: public static Vector3D operator *(double s, Vector3D v)
    parameters:
    - id: s
      type: System.Double
    - id: v
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator *(s As Double, v As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Multiply*
  nameWithType.vb: Vector3D.*(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.*(Double, SearchAThing.Sci.Vector3D)
  name.vb: '*(Double, Vector3D)'
- uid: SearchAThing.Sci.Vector3D.op_Multiply(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.op_Multiply(SearchAThing.Sci.Vector3D,System.Double)
  id: op_Multiply(SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: operator *(Vector3D, double)
  nameWithType: Vector3D.operator *(Vector3D, double)
  fullName: SearchAThing.Sci.Vector3D.operator *(SearchAThing.Sci.Vector3D, double)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Vector3D.cs
    startLine: 923
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scalar mul
  example: []
  syntax:
    content: public static Vector3D operator *(Vector3D v, double s)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: s
      type: System.Double
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator *(v As Vector3D, s As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Multiply*
  nameWithType.vb: Vector3D.*(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Vector3D.*(SearchAThing.Sci.Vector3D, Double)
  name.vb: '*(Vector3D, Double)'
- uid: SearchAThing.Sci.Vector3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: operator *(Vector3D, Vector3D)
  nameWithType: Vector3D.operator *(Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.operator *(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Vector3D.cs
    startLine: 929
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    scalar multiply vector components V1 * V2 =

    (V1.x * V2.x, V1.y * V2.y, V1.z * V2.z)
  example: []
  syntax:
    content: public static Vector3D operator *(Vector3D v1, Vector3D v2)
    parameters:
    - id: v1
      type: SearchAThing.Sci.Vector3D
    - id: v2
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator *(v1 As Vector3D, v2 As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Multiply*
  nameWithType.vb: Vector3D.*(Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.*(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: '*(Vector3D, Vector3D)'
- uid: SearchAThing.Sci.Vector3D.op_Division(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.op_Division(System.Double,SearchAThing.Sci.Vector3D)
  id: op_Division(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: operator /(double, Vector3D)
  nameWithType: Vector3D.operator /(double, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.operator /(double, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Division
    path: src/sci/Vector3D.cs
    startLine: 934
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scalar div
  example: []
  syntax:
    content: public static Vector3D operator /(double s, Vector3D v)
    parameters:
    - id: s
      type: System.Double
    - id: v
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator /(s As Double, v As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Division*
  nameWithType.vb: Vector3D./(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D./(Double, SearchAThing.Sci.Vector3D)
  name.vb: /(Double, Vector3D)
- uid: SearchAThing.Sci.Vector3D.op_Division(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.op_Division(SearchAThing.Sci.Vector3D,System.Double)
  id: op_Division(SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: operator /(Vector3D, double)
  nameWithType: Vector3D.operator /(Vector3D, double)
  fullName: SearchAThing.Sci.Vector3D.operator /(SearchAThing.Sci.Vector3D, double)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Division
    path: src/sci/Vector3D.cs
    startLine: 939
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scalar div
  example: []
  syntax:
    content: public static Vector3D operator /(Vector3D v, double s)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: s
      type: System.Double
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator /(v As Vector3D, s As Double) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Division*
  nameWithType.vb: Vector3D./(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Vector3D./(SearchAThing.Sci.Vector3D, Double)
  name.vb: /(Vector3D, Double)
- uid: SearchAThing.Sci.Vector3D.From2DCoords(System.Double[])
  commentId: M:SearchAThing.Sci.Vector3D.From2DCoords(System.Double[])
  id: From2DCoords(System.Double[])
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: From2DCoords(params double[])
  nameWithType: Vector3D.From2DCoords(params double[])
  fullName: SearchAThing.Sci.Vector3D.From2DCoords(params double[])
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: From2DCoords
    path: src/sci/Vector3D.cs
    startLine: 947
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Create an array of Vector3D from given list of 2d coords ( eg. { 100, 200, 300, 400 }

    will create follow list of vector3d = { (100,200,0), (300,400,0) }
  example: []
  syntax:
    content: public static List<Vector3D> From2DCoords(params double[] coords)
    parameters:
    - id: coords
      type: System.Double[]
    return:
      type: System.Collections.Generic.List{SearchAThing.Sci.Vector3D}
    content.vb: Public Shared Function From2DCoords(ParamArray coords As Double()) As List(Of Vector3D)
  overload: SearchAThing.Sci.Vector3D.From2DCoords*
  nameWithType.vb: Vector3D.From2DCoords(ParamArray Double())
  fullName.vb: SearchAThing.Sci.Vector3D.From2DCoords(ParamArray Double())
  name.vb: From2DCoords(ParamArray Double())
- uid: SearchAThing.Sci.Vector3D.From3DCoords(System.Double[])
  commentId: M:SearchAThing.Sci.Vector3D.From3DCoords(System.Double[])
  id: From3DCoords(System.Double[])
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: From3DCoords(params double[])
  nameWithType: Vector3D.From3DCoords(params double[])
  fullName: SearchAThing.Sci.Vector3D.From3DCoords(params double[])
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: From3DCoords
    path: src/sci/Vector3D.cs
    startLine: 961
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Create an array of Vector3D from given list of 3d coords ( eg. { 100, 200, 10, 300, 400, 20 }

    will create follow list of vector3d = { (100,200,10), (300,400,20) }
  example: []
  syntax:
    content: public static List<Vector3D> From3DCoords(params double[] coords)
    parameters:
    - id: coords
      type: System.Double[]
    return:
      type: System.Collections.Generic.List{SearchAThing.Sci.Vector3D}
    content.vb: Public Shared Function From3DCoords(ParamArray coords As Double()) As List(Of Vector3D)
  overload: SearchAThing.Sci.Vector3D.From3DCoords*
  nameWithType.vb: Vector3D.From3DCoords(ParamArray Double())
  fullName.vb: SearchAThing.Sci.Vector3D.From3DCoords(ParamArray Double())
  name.vb: From3DCoords(ParamArray Double())
- uid: SearchAThing.Sci.Vector3D.FromTxtPointsList(System.String,System.Globalization.CultureInfo)
  commentId: M:SearchAThing.Sci.Vector3D.FromTxtPointsList(System.String,System.Globalization.CultureInfo)
  id: FromTxtPointsList(System.String,System.Globalization.CultureInfo)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: FromTxtPointsList(string, CultureInfo?)
  nameWithType: Vector3D.FromTxtPointsList(string, CultureInfo?)
  fullName: SearchAThing.Sci.Vector3D.FromTxtPointsList(string, System.Globalization.CultureInfo?)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: FromTxtPointsList
    path: src/sci/Vector3D.cs
    startLine: 985
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    retrieve list of Vector3D by reading from a txt file, for example:

    -53.54533794,-141.18745265

    18.20103872,-149.89903999

    85.77777676,-124.27056375


    notes:

    - supports also third coord (Z) ;

    - whitespace are removed ;

    - empty lines are removed
  example: []
  syntax:
    content: public static IEnumerable<Vector3D> FromTxtPointsList(string txt, CultureInfo? culture = null)
    parameters:
    - id: txt
      type: System.String
      description: txt data to read
    - id: culture
      type: System.Globalization.CultureInfo
      description: 'culture for number parsing (default: invariant)'
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: enumerable of Vector3D corresponding to data
    content.vb: Public Shared Function FromTxtPointsList(txt As String, culture As CultureInfo = Nothing) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Vector3D.FromTxtPointsList*
  nameWithType.vb: Vector3D.FromTxtPointsList(String, CultureInfo)
  fullName.vb: SearchAThing.Sci.Vector3D.FromTxtPointsList(String, System.Globalization.CultureInfo)
  name.vb: FromTxtPointsList(String, CultureInfo)
- uid: SearchAThing.Sci.Vector3D.Random(System.Int32,System.Double,System.Int32)
  commentId: M:SearchAThing.Sci.Vector3D.Random(System.Int32,System.Double,System.Int32)
  id: Random(System.Int32,System.Double,System.Int32)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Random(int, double, int)
  nameWithType: Vector3D.Random(int, double, int)
  fullName: SearchAThing.Sci.Vector3D.Random(int, double, int)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Random
    path: src/sci/Vector3D.cs
    startLine: 1001
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static IEnumerable<Vector3D> Random(int N, double L, int seed = 0)
    parameters:
    - id: N
      type: System.Int32
    - id: L
      type: System.Double
    - id: seed
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Shared Function Random(N As Integer, L As Double, seed As Integer = 0) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Vector3D.Random*
  nameWithType.vb: Vector3D.Random(Integer, Double, Integer)
  fullName.vb: SearchAThing.Sci.Vector3D.Random(Integer, Double, Integer)
  name.vb: Random(Integer, Double, Integer)
- uid: SearchAThing.Sci.Vector3D.Random(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Random)
  commentId: M:SearchAThing.Sci.Vector3D.Random(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Random)
  id: Random(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Random)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Random(int, double, double, double, double, double, double, int, Random?)
  nameWithType: Vector3D.Random(int, double, double, double, double, double, double, int, Random?)
  fullName: SearchAThing.Sci.Vector3D.Random(int, double, double, double, double, double, double, int, System.Random?)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Random
    path: src/sci/Vector3D.cs
    startLine: 1008
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Span a set of qty vector3d with random coord between given range.

    Optionally a seed can be specified for rand or Random obj directly ( in latter case seed aren't used )
  example: []
  syntax:
    content: public static IEnumerable<Vector3D> Random(int qty, double xmin, double xmax, double ymin, double ymax, double zmin, double zmax, int seed = 0, Random? random = null)
    parameters:
    - id: qty
      type: System.Int32
    - id: xmin
      type: System.Double
    - id: xmax
      type: System.Double
    - id: ymin
      type: System.Double
    - id: ymax
      type: System.Double
    - id: zmin
      type: System.Double
    - id: zmax
      type: System.Double
    - id: seed
      type: System.Int32
    - id: random
      type: System.Random
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Shared Function Random(qty As Integer, xmin As Double, xmax As Double, ymin As Double, ymax As Double, zmin As Double, zmax As Double, seed As Integer = 0, random As Random = Nothing) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Vector3D.Random*
  nameWithType.vb: Vector3D.Random(Integer, Double, Double, Double, Double, Double, Double, Integer, Random)
  fullName.vb: SearchAThing.Sci.Vector3D.Random(Integer, Double, Double, Double, Double, Double, Double, Integer, System.Random)
  name.vb: Random(Integer, Double, Double, Double, Double, Double, Double, Integer, Random)
- uid: SearchAThing.Sci.Vector3D.FromString(System.String)
  commentId: M:SearchAThing.Sci.Vector3D.FromString(System.String)
  id: FromString(System.String)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: FromString(string)
  nameWithType: Vector3D.FromString(string)
  fullName: SearchAThing.Sci.Vector3D.FromString(string)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: FromString
    path: src/sci/Vector3D.cs
    startLine: 1033
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: parse vector3d from string format "(x y z)" or "(x,y,z)" invariant type
  example: []
  syntax:
    content: public static Vector3D FromString(string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Function FromString(str As String) As Vector3D
  overload: SearchAThing.Sci.Vector3D.FromString*
  nameWithType.vb: Vector3D.FromString(String)
  fullName.vb: SearchAThing.Sci.Vector3D.FromString(String)
  name.vb: FromString(String)
- uid: SearchAThing.Sci.Vector3D.FromStringArray(System.String)
  commentId: M:SearchAThing.Sci.Vector3D.FromStringArray(System.String)
  id: FromStringArray(System.String)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: FromStringArray(string)
  nameWithType: Vector3D.FromStringArray(string)
  fullName: SearchAThing.Sci.Vector3D.FromStringArray(string)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: FromStringArray
    path: src/sci/Vector3D.cs
    startLine: 1048
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    parse vector3d from array "(x1,y1,z1);(x2,y2,z2)";

    an appropriate string can be generated with StringRepresentation extension.
  example: []
  syntax:
    content: public static IEnumerable<Vector3D> FromStringArray(string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Shared Function FromStringArray(str As String) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Vector3D.FromStringArray*
  nameWithType.vb: Vector3D.FromStringArray(String)
  fullName.vb: SearchAThing.Sci.Vector3D.FromStringArray(String)
  name.vb: FromStringArray(String)
- uid: SearchAThing.Sci.Vector3D.ToString
  commentId: M:SearchAThing.Sci.Vector3D.ToString
  id: ToString
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3D.ToString()
  fullName: SearchAThing.Sci.Vector3D.ToString()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Vector3D.cs
    startLine: 1055
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    string invariant representation "(x,y,z)"

    w/3 decimal places
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SearchAThing.Sci.Vector3D.ToString*
- uid: SearchAThing.Sci.Vector3D.ToString(System.Int32)
  commentId: M:SearchAThing.Sci.Vector3D.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToString(int)
  nameWithType: Vector3D.ToString(int)
  fullName: SearchAThing.Sci.Vector3D.ToString(int)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Vector3D.cs
    startLine: 1060
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: string invariant representation "(x,y,z)" w/given digits
  example: []
  syntax:
    content: public string ToString(int digits = 3)
    parameters:
    - id: digits
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function ToString(digits As Integer = 3) As String
  overload: SearchAThing.Sci.Vector3D.ToString*
  nameWithType.vb: Vector3D.ToString(Integer)
  fullName.vb: SearchAThing.Sci.Vector3D.ToString(Integer)
  name.vb: ToString(Integer)
- uid: SearchAThing.Sci.Vector3D.ToString(System.Double)
  commentId: M:SearchAThing.Sci.Vector3D.ToString(System.Double)
  id: ToString(System.Double)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToString(double)
  nameWithType: Vector3D.ToString(double)
  fullName: SearchAThing.Sci.Vector3D.ToString(double)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Vector3D.cs
    startLine: 1065
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: hash string with given tolerance
  example: []
  syntax:
    content: public string ToString(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: System.String
    content.vb: Public Function ToString(tol As Double) As String
  overload: SearchAThing.Sci.Vector3D.ToString*
  nameWithType.vb: Vector3D.ToString(Double)
  fullName.vb: SearchAThing.Sci.Vector3D.ToString(Double)
  name.vb: ToString(Double)
- uid: SearchAThing.Sci.Vector3D.StringRepresentation
  commentId: M:SearchAThing.Sci.Vector3D.StringRepresentation
  id: StringRepresentation
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: StringRepresentation()
  nameWithType: Vector3D.StringRepresentation()
  fullName: SearchAThing.Sci.Vector3D.StringRepresentation()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: StringRepresentation
    path: src/sci/Vector3D.cs
    startLine: 1074
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: string invariant representation "(x,y,z)"
  example: []
  syntax:
    content: public string StringRepresentation()
    return:
      type: System.String
    content.vb: Public Function StringRepresentation() As String
  overload: SearchAThing.Sci.Vector3D.StringRepresentation*
- uid: SearchAThing.Sci.Vector3D.QCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Vector3D.QCadScript(System.Boolean)
  id: QCadScript(System.Boolean)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: QCadScript(bool)
  nameWithType: Vector3D.QCadScript(bool)
  fullName: SearchAThing.Sci.Vector3D.QCadScript(bool)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: QCadScript
    path: src/sci/Vector3D.cs
    startLine: 1076
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string QCadScript(bool final = true)
    parameters:
    - id: final
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Function QCadScript(final As Boolean = True) As String
  overload: SearchAThing.Sci.Vector3D.QCadScript*
  nameWithType.vb: Vector3D.QCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Vector3D.QCadScript(Boolean)
  name.vb: QCadScript(Boolean)
- uid: SearchAThing.Sci.Vector3D.A0QCadScript
  commentId: P:SearchAThing.Sci.Vector3D.A0QCadScript
  id: A0QCadScript
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: A0QCadScript
  nameWithType: Vector3D.A0QCadScript
  fullName: SearchAThing.Sci.Vector3D.A0QCadScript
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: A0QCadScript
    path: src/sci/Vector3D.cs
    startLine: 1078
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string A0QCadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property A0QCadScript As String
  overload: SearchAThing.Sci.Vector3D.A0QCadScript*
- uid: SearchAThing.Sci.Vector3D.CadScript
  commentId: P:SearchAThing.Sci.Vector3D.CadScript
  id: CadScript
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: CadScript
  nameWithType: Vector3D.CadScript
  fullName: SearchAThing.Sci.Vector3D.CadScript
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CadScript
    path: src/sci/Vector3D.cs
    startLine: 1083
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: cad script for this vector as wcs point
  example: []
  syntax:
    content: public string CadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CadScript As String
  overload: SearchAThing.Sci.Vector3D.CadScript*
- uid: SearchAThing.Sci.Vector3D.CadScriptLine
  commentId: P:SearchAThing.Sci.Vector3D.CadScriptLine
  id: CadScriptLine
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: CadScriptLine
  nameWithType: Vector3D.CadScriptLine
  fullName: SearchAThing.Sci.Vector3D.CadScriptLine
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CadScriptLine
    path: src/sci/Vector3D.cs
    startLine: 1089
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: cad script for a line (0,0,0) to this vector
  example: []
  syntax:
    content: public string CadScriptLine { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CadScriptLine As String
  overload: SearchAThing.Sci.Vector3D.CadScriptLine*
- uid: SearchAThing.Sci.Vector3D.CadScriptLineFrom
  commentId: P:SearchAThing.Sci.Vector3D.CadScriptLineFrom
  id: CadScriptLineFrom
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: CadScriptLineFrom
  nameWithType: Vector3D.CadScriptLineFrom
  fullName: SearchAThing.Sci.Vector3D.CadScriptLineFrom
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CadScriptLineFrom
    path: src/sci/Vector3D.cs
    startLine: 1094
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: cad script for a line departing from this wcs point
  example: []
  syntax:
    content: public string CadScriptLineFrom { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CadScriptLineFrom As String
  overload: SearchAThing.Sci.Vector3D.CadScriptLineFrom*
- uid: SearchAThing.Sci.Vector3D.LineTo(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.LineTo(SearchAThing.Sci.Vector3D)
  id: LineTo(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: LineTo(Vector3D)
  nameWithType: Vector3D.LineTo(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.LineTo(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: LineTo
    path: src/sci/Vector3D.cs
    startLine: 1101
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build Line3D from this to given to
  example: []
  syntax:
    content: public Line3D LineTo(Vector3D to)
    parameters:
    - id: to
      type: SearchAThing.Sci.Vector3D
      description: line3d to point
    return:
      type: SearchAThing.Sci.Line3D
      description: build Line3D from this to given to
    content.vb: Public Function LineTo([to] As Vector3D) As Line3D
  overload: SearchAThing.Sci.Vector3D.LineTo*
- uid: SearchAThing.Sci.Vector3D.LineV(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.LineV(SearchAThing.Sci.Vector3D)
  id: LineV(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: LineV(Vector3D)
  nameWithType: Vector3D.LineV(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.LineV(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: LineV
    path: src/sci/Vector3D.cs
    startLine: 1109
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build Line3D from this to (this+vector)
  example: []
  syntax:
    content: public Line3D LineV(Vector3D vector)
    parameters:
    - id: vector
      type: SearchAThing.Sci.Vector3D
      description: vector to add this to obtain line to
    return:
      type: SearchAThing.Sci.Line3D
      description: Line3D from this to (this+given vector)
    content.vb: Public Function LineV(vector As Vector3D) As Line3D
  overload: SearchAThing.Sci.Vector3D.LineV*
- uid: SearchAThing.Sci.Vector3D.LineDir(SearchAThing.Sci.Vector3D,System.Double,System.Boolean)
  commentId: M:SearchAThing.Sci.Vector3D.LineDir(SearchAThing.Sci.Vector3D,System.Double,System.Boolean)
  id: LineDir(SearchAThing.Sci.Vector3D,System.Double,System.Boolean)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: LineDir(Vector3D, double, bool)
  nameWithType: Vector3D.LineDir(Vector3D, double, bool)
  fullName: SearchAThing.Sci.Vector3D.LineDir(SearchAThing.Sci.Vector3D, double, bool)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: LineDir
    path: src/sci/Vector3D.cs
    startLine: 1119
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build Line3D from this to (this+dir*len)
  example: []
  syntax:
    content: public Line3D LineDir(Vector3D dir, double len, bool applyDirNorm = false)
    parameters:
    - id: dir
      type: SearchAThing.Sci.Vector3D
      description: direction
    - id: len
      type: System.Double
      description: length of the line
    - id: applyDirNorm
      type: System.Boolean
      description: apply normalization to given direction ( default:false )
    return:
      type: SearchAThing.Sci.Line3D
      description: Line3D from this to (this+dir*len)
    content.vb: Public Function LineDir(dir As Vector3D, len As Double, applyDirNorm As Boolean = False) As Line3D
  overload: SearchAThing.Sci.Vector3D.LineDir*
  nameWithType.vb: Vector3D.LineDir(Vector3D, Double, Boolean)
  fullName.vb: SearchAThing.Sci.Vector3D.LineDir(SearchAThing.Sci.Vector3D, Double, Boolean)
  name.vb: LineDir(Vector3D, Double, Boolean)
- uid: SearchAThing.Sci.Vector3D.op_Implicit(netDxf.Vector2)~SearchAThing.Sci.Vector3D
  commentId: M:SearchAThing.Sci.Vector3D.op_Implicit(netDxf.Vector2)~SearchAThing.Sci.Vector3D
  id: op_Implicit(netDxf.Vector2)~SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: implicit operator Vector3D(Vector2)
  nameWithType: Vector3D.implicit operator Vector3D(Vector2)
  fullName: SearchAThing.Sci.Vector3D.implicit operator SearchAThing.Sci.Vector3D(netDxf.Vector2)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Implicit
    path: src/sci/Vector3D.cs
    startLine: 1126
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert given (netdxf) Vector2 to a Vector3D ( assume z=0 )
  example: []
  syntax:
    content: public static implicit operator Vector3D(Vector2 v)
    parameters:
    - id: v
      type: netDxf.Vector2
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Widening Operator CType(v As Vector2) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Implicit*
  nameWithType.vb: Vector3D.CType(Vector2)
  fullName.vb: SearchAThing.Sci.Vector3D.CType(netDxf.Vector2)
  name.vb: CType(Vector2)
- uid: SearchAThing.Sci.Vector3D.op_Implicit(System.Numerics.Vector2)~SearchAThing.Sci.Vector3D
  commentId: M:SearchAThing.Sci.Vector3D.op_Implicit(System.Numerics.Vector2)~SearchAThing.Sci.Vector3D
  id: op_Implicit(System.Numerics.Vector2)~SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: implicit operator Vector3D(Vector2)
  nameWithType: Vector3D.implicit operator Vector3D(Vector2)
  fullName: SearchAThing.Sci.Vector3D.implicit operator SearchAThing.Sci.Vector3D(System.Numerics.Vector2)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Implicit
    path: src/sci/Vector3D.cs
    startLine: 1131
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert given (System.Numerics) Vector2 to a Vector3D ( with z=0 )
  example: []
  syntax:
    content: public static implicit operator Vector3D(Vector2 v)
    parameters:
    - id: v
      type: System.Numerics.Vector2
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Widening Operator CType(v As Vector2) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Implicit*
  nameWithType.vb: Vector3D.CType(Vector2)
  fullName.vb: SearchAThing.Sci.Vector3D.CType(System.Numerics.Vector2)
  name.vb: CType(Vector2)
- uid: SearchAThing.Sci.Vector3D.op_Implicit(netDxf.Vector3)~SearchAThing.Sci.Vector3D
  commentId: M:SearchAThing.Sci.Vector3D.op_Implicit(netDxf.Vector3)~SearchAThing.Sci.Vector3D
  id: op_Implicit(netDxf.Vector3)~SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: implicit operator Vector3D(Vector3)
  nameWithType: Vector3D.implicit operator Vector3D(Vector3)
  fullName: SearchAThing.Sci.Vector3D.implicit operator SearchAThing.Sci.Vector3D(netDxf.Vector3)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Implicit
    path: src/sci/Vector3D.cs
    startLine: 1136
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Convert given (netdxf) Vector3 to Vector3D
  example: []
  syntax:
    content: public static implicit operator Vector3D(Vector3 v)
    parameters:
    - id: v
      type: netDxf.Vector3
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Widening Operator CType(v As Vector3) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Implicit*
  nameWithType.vb: Vector3D.CType(Vector3)
  fullName.vb: SearchAThing.Sci.Vector3D.CType(netDxf.Vector3)
  name.vb: CType(Vector3)
- uid: SearchAThing.Sci.Vector3D.op_Implicit(SearchAThing.Sci.Vector3D)~netDxf.Vector3
  commentId: M:SearchAThing.Sci.Vector3D.op_Implicit(SearchAThing.Sci.Vector3D)~netDxf.Vector3
  id: op_Implicit(SearchAThing.Sci.Vector3D)~netDxf.Vector3
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: implicit operator Vector3(Vector3D)
  nameWithType: Vector3D.implicit operator Vector3(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.implicit operator netDxf.Vector3(SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Implicit
    path: src/sci/Vector3D.cs
    startLine: 1141
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Convert given Vector3D to (netdxf) Vector3
  example: []
  syntax:
    content: public static implicit operator Vector3(Vector3D v)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    return:
      type: netDxf.Vector3
    content.vb: Public Shared Widening Operator CType(v As Vector3D) As Vector3
  overload: SearchAThing.Sci.Vector3D.op_Implicit*
  nameWithType.vb: Vector3D.CType(Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.CType(SearchAThing.Sci.Vector3D)
  name.vb: CType(Vector3D)
- uid: SearchAThing.Sci.Vector3D.op_Implicit(SearchAThing.Sci.Vector3D)~System.Numerics.Vector3
  commentId: M:SearchAThing.Sci.Vector3D.op_Implicit(SearchAThing.Sci.Vector3D)~System.Numerics.Vector3
  id: op_Implicit(SearchAThing.Sci.Vector3D)~System.Numerics.Vector3
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: implicit operator Vector3(Vector3D)
  nameWithType: Vector3D.implicit operator Vector3(Vector3D)
  fullName: SearchAThing.Sci.Vector3D.implicit operator System.Numerics.Vector3(SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Implicit
    path: src/sci/Vector3D.cs
    startLine: 1150
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Convert given Vector3D to System.Numerics.Vector3
  remarks: double to float conversion will be done
  example: []
  syntax:
    content: public static implicit operator Vector3(Vector3D v)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
      description: input vector
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Widening Operator CType(v As Vector3D) As Vector3
  overload: SearchAThing.Sci.Vector3D.op_Implicit*
  nameWithType.vb: Vector3D.CType(Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.CType(SearchAThing.Sci.Vector3D)
  name.vb: CType(Vector3D)
- uid: SearchAThing.Sci.Vector3D.op_Implicit(System.Numerics.Vector3)~SearchAThing.Sci.Vector3D
  commentId: M:SearchAThing.Sci.Vector3D.op_Implicit(System.Numerics.Vector3)~SearchAThing.Sci.Vector3D
  id: op_Implicit(System.Numerics.Vector3)~SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: implicit operator Vector3D(Vector3)
  nameWithType: Vector3D.implicit operator Vector3D(Vector3)
  fullName: SearchAThing.Sci.Vector3D.implicit operator SearchAThing.Sci.Vector3D(System.Numerics.Vector3)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Implicit
    path: src/sci/Vector3D.cs
    startLine: 1157
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Convert given System.Numerics.Vector3 to Vector3D
  example: []
  syntax:
    content: public static implicit operator Vector3D(Vector3 v)
    parameters:
    - id: v
      type: System.Numerics.Vector3
      description: input vector
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Widening Operator CType(v As Vector3) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Implicit*
  nameWithType.vb: Vector3D.CType(Vector3)
  fullName.vb: SearchAThing.Sci.Vector3D.CType(System.Numerics.Vector3)
  name.vb: CType(Vector3)
- uid: SearchAThing.Sci.Vector3D.op_Implicit(LibTessDotNet.Vec3)~SearchAThing.Sci.Vector3D
  commentId: M:SearchAThing.Sci.Vector3D.op_Implicit(LibTessDotNet.Vec3)~SearchAThing.Sci.Vector3D
  id: op_Implicit(LibTessDotNet.Vec3)~SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: implicit operator Vector3D(Vec3)
  nameWithType: Vector3D.implicit operator Vector3D(Vec3)
  fullName: SearchAThing.Sci.Vector3D.implicit operator SearchAThing.Sci.Vector3D(LibTessDotNet.Vec3)
  type: Operator
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Implicit
    path: src/sci/Vector3D.cs
    startLine: 1163
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Convert given LibTessDotNet.Vec3 to Vector3D
  example: []
  syntax:
    content: public static implicit operator Vector3D(Vec3 v)
    parameters:
    - id: v
      type: LibTessDotNet.Vec3
      description: input vector
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Widening Operator CType(v As Vec3) As Vector3D
  overload: SearchAThing.Sci.Vector3D.op_Implicit*
  nameWithType.vb: Vector3D.CType(Vec3)
  fullName.vb: SearchAThing.Sci.Vector3D.CType(LibTessDotNet.Vec3)
  name.vb: CType(Vec3)
- uid: SearchAThing.Sci.Vector3D.ToDxfVector2
  commentId: M:SearchAThing.Sci.Vector3D.ToDxfVector2
  id: ToDxfVector2
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToDxfVector2()
  nameWithType: Vector3D.ToDxfVector2()
  fullName: SearchAThing.Sci.Vector3D.ToDxfVector2()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToDxfVector2
    path: src/sci/Vector3D.cs
    startLine: 1168
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert to (netdxf) discarding z
  example: []
  syntax:
    content: public Vector2 ToDxfVector2()
    return:
      type: netDxf.Vector2
    content.vb: Public Function ToDxfVector2() As Vector2
  overload: SearchAThing.Sci.Vector3D.ToDxfVector2*
- uid: SearchAThing.Sci.Vector3D.ToDxfVector3
  commentId: M:SearchAThing.Sci.Vector3D.ToDxfVector3
  id: ToDxfVector3
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToDxfVector3()
  nameWithType: Vector3D.ToDxfVector3()
  fullName: SearchAThing.Sci.Vector3D.ToDxfVector3()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToDxfVector3
    path: src/sci/Vector3D.cs
    startLine: 1173
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert to (netdxf) discarding z
  example: []
  syntax:
    content: public Vector3 ToDxfVector3()
    return:
      type: netDxf.Vector3
    content.vb: Public Function ToDxfVector3() As Vector3
  overload: SearchAThing.Sci.Vector3D.ToDxfVector3*
- uid: SearchAThing.Sci.Vector3D.ToNVector2
  commentId: M:SearchAThing.Sci.Vector3D.ToNVector2
  id: ToNVector2
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToNVector2()
  nameWithType: Vector3D.ToNVector2()
  fullName: SearchAThing.Sci.Vector3D.ToNVector2()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToNVector2
    path: src/sci/Vector3D.cs
    startLine: 1178
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert to (system.numerics) Vector2 ( casting double to float, discarding z )
  example: []
  syntax:
    content: public Vector2 ToNVector2()
    return:
      type: System.Numerics.Vector2
    content.vb: Public Function ToNVector2() As Vector2
  overload: SearchAThing.Sci.Vector3D.ToNVector2*
- uid: SearchAThing.Sci.Vector3D.ToNVector3
  commentId: M:SearchAThing.Sci.Vector3D.ToNVector3
  id: ToNVector3
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToNVector3()
  nameWithType: Vector3D.ToNVector3()
  fullName: SearchAThing.Sci.Vector3D.ToNVector3()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToNVector3
    path: src/sci/Vector3D.cs
    startLine: 1183
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert to (system.numerics) Vector3 ( casting double to float )
  example: []
  syntax:
    content: public Vector3 ToNVector3()
    return:
      type: System.Numerics.Vector3
    content.vb: Public Function ToNVector3() As Vector3
  overload: SearchAThing.Sci.Vector3D.ToNVector3*
- uid: SearchAThing.Sci.Vector3D.ToPoint
  commentId: M:SearchAThing.Sci.Vector3D.ToPoint
  id: ToPoint
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToPoint()
  nameWithType: Vector3D.ToPoint()
  fullName: SearchAThing.Sci.Vector3D.ToPoint()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToPoint
    path: src/sci/Vector3D.cs
    startLine: 1188
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: To point (double x, double y)
  example: []
  syntax:
    content: public Point ToPoint()
    return:
      type: netDxf.Entities.Point
    content.vb: Public Function ToPoint() As Point
  overload: SearchAThing.Sci.Vector3D.ToPoint*
- uid: SearchAThing.Sci.Vector3D.ToDxfPoint
  commentId: M:SearchAThing.Sci.Vector3D.ToDxfPoint
  id: ToDxfPoint
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToDxfPoint()
  nameWithType: Vector3D.ToDxfPoint()
  fullName: SearchAThing.Sci.Vector3D.ToDxfPoint()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToDxfPoint
    path: src/sci/Vector3D.cs
    startLine: 1193
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create dxf point from given vector3d
  example: []
  syntax:
    content: public Point ToDxfPoint()
    return:
      type: netDxf.Entities.Point
    content.vb: Public Function ToDxfPoint() As Point
  overload: SearchAThing.Sci.Vector3D.ToDxfPoint*
- uid: SearchAThing.Sci.Vector3D.ToRad
  commentId: M:SearchAThing.Sci.Vector3D.ToRad
  id: ToRad
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToRad()
  nameWithType: Vector3D.ToRad()
  fullName: SearchAThing.Sci.Vector3D.ToRad()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToRad
    path: src/sci/Vector3D.cs
    startLine: 1199
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert xyz from deg to rad
  example: []
  syntax:
    content: public Vector3D ToRad()
    return:
      type: SearchAThing.Sci.Vector3D
      description: xyz rad angles
    content.vb: Public Function ToRad() As Vector3D
  overload: SearchAThing.Sci.Vector3D.ToRad*
- uid: SearchAThing.Sci.Vector3D.ToDeg
  commentId: M:SearchAThing.Sci.Vector3D.ToDeg
  id: ToDeg
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: ToDeg()
  nameWithType: Vector3D.ToDeg()
  fullName: SearchAThing.Sci.Vector3D.ToDeg()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToDeg
    path: src/sci/Vector3D.cs
    startLine: 1206
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert xyz from rad to deg
  example: []
  syntax:
    content: public Vector3D ToDeg()
    return:
      type: SearchAThing.Sci.Vector3D
      description: xyz deg angles
    content.vb: Public Function ToDeg() As Vector3D
  overload: SearchAThing.Sci.Vector3D.ToDeg*
- uid: SearchAThing.Sci.Vector3D.Debug(System.String)
  commentId: M:SearchAThing.Sci.Vector3D.Debug(System.String)
  id: Debug(System.String)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Debug(string)
  nameWithType: Vector3D.Debug(string)
  fullName: SearchAThing.Sci.Vector3D.Debug(string)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Debug
    path: src/sci/Vector3D.cs
    startLine: 1214
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: debug to console with optional prefix
  example: []
  syntax:
    content: public Vector3D Debug(string prefix = "")
    parameters:
    - id: prefix
      type: System.String
      description: optional prefix
    return:
      type: SearchAThing.Sci.Vector3D
      description: vector
    content.vb: Public Function Debug(prefix As String = "") As Vector3D
  overload: SearchAThing.Sci.Vector3D.Debug*
  nameWithType.vb: Vector3D.Debug(String)
  fullName.vb: SearchAThing.Sci.Vector3D.Debug(String)
  name.vb: Debug(String)
- uid: SearchAThing.Sci.Vector3D.Abs
  commentId: M:SearchAThing.Sci.Vector3D.Abs
  id: Abs
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Abs()
  nameWithType: Vector3D.Abs()
  fullName: SearchAThing.Sci.Vector3D.Abs()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Abs
    path: src/sci/Vector3D.cs
    startLine: 1223
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: compute (Abs(v.x), Abs(v.y), Abs(v.z))
  example: []
  syntax:
    content: public Vector3D Abs()
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Abs() As Vector3D
  overload: SearchAThing.Sci.Vector3D.Abs*
- uid: SearchAThing.Sci.Vector3D.Sign
  commentId: M:SearchAThing.Sci.Vector3D.Sign
  id: Sign
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Sign()
  nameWithType: Vector3D.Sign()
  fullName: SearchAThing.Sci.Vector3D.Sign()
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Sign
    path: src/sci/Vector3D.cs
    startLine: 1229
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: compute (Sign(v.x), Sign(v.y), Sign(v.z))
  example: []
  syntax:
    content: public Vector3D Sign()
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Sign() As Vector3D
  overload: SearchAThing.Sci.Vector3D.Sign*
- uid: SearchAThing.Sci.Vector3D.DisambiguatedPoints(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Vector3D.DisambiguatedPoints(System.Double,SearchAThing.Sci.Vector3D)
  id: DisambiguatedPoints(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: DisambiguatedPoints(double, Vector3D)
  nameWithType: Vector3D.DisambiguatedPoints(double, Vector3D)
  fullName: SearchAThing.Sci.Vector3D.DisambiguatedPoints(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DisambiguatedPoints
    path: src/sci/Vector3D.cs
    startLine: 1237
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    returns p1 and p2 if one of the p1 coords are less than corresponding p2 coords ;

    elsewhere returns p2 and p1.

    Useful to obtain the same sequence order independant from order of operands.
  example: []
  syntax:
    content: public IEnumerable<Vector3D> DisambiguatedPoints(double tol, Vector3D other)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Function DisambiguatedPoints(tol As Double, other As Vector3D) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Vector3D.DisambiguatedPoints*
  nameWithType.vb: Vector3D.DisambiguatedPoints(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Vector3D.DisambiguatedPoints(Double, SearchAThing.Sci.Vector3D)
  name.vb: DisambiguatedPoints(Double, Vector3D)
- uid: SearchAThing.Sci.Vector3D.Max
  commentId: P:SearchAThing.Sci.Vector3D.Max
  id: Max
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: Vector3D.Max
  fullName: SearchAThing.Sci.Vector3D.Max
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Max
    path: src/sci/Vector3D.cs
    startLine: 1254
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: max between X,Y,Z
  example: []
  syntax:
    content: public double Max { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Max As Double
  overload: SearchAThing.Sci.Vector3D.Max*
- uid: SearchAThing.Sci.Vector3D.Min
  commentId: P:SearchAThing.Sci.Vector3D.Min
  id: Min
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: Vector3D.Min
  fullName: SearchAThing.Sci.Vector3D.Min
  type: Property
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Min
    path: src/sci/Vector3D.cs
    startLine: 1259
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: min between X,Y,Z
  example: []
  syntax:
    content: public double Min { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Min As Double
  overload: SearchAThing.Sci.Vector3D.Min*
- uid: SearchAThing.Sci.Vector3D.Transform(System.Numerics.Matrix4x4)
  commentId: M:SearchAThing.Sci.Vector3D.Transform(System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Matrix4x4)
  parent: SearchAThing.Sci.Vector3D
  langs:
  - csharp
  - vb
  name: Transform(Matrix4x4)
  nameWithType: Vector3D.Transform(Matrix4x4)
  fullName: SearchAThing.Sci.Vector3D.Transform(System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/sci/Vector3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Transform
    path: src/sci/Vector3D.cs
    startLine: 1264
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return this vector transformed by given (float) transformation
  example: []
  syntax:
    content: public Vector3D Transform(Matrix4x4 transform)
    parameters:
    - id: transform
      type: System.Numerics.Matrix4x4
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Transform(transform As Matrix4x4) As Vector3D
  overload: SearchAThing.Sci.Vector3D.Transform*
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SearchAThing.Sci.Geometry
  commentId: T:SearchAThing.Sci.Geometry
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Geometry.html
  name: Geometry
  nameWithType: Geometry
  fullName: SearchAThing.Sci.Geometry
- uid: SearchAThing.Sci.Geometry.GeomType
  commentId: P:SearchAThing.Sci.Geometry.GeomType
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomType
  name: GeomType
  nameWithType: Geometry.GeomType
  fullName: SearchAThing.Sci.Geometry.GeomType
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SearchAThing.Sci.Vector3D.SearchAThing.Sci.Ext.Sqrt
  commentId: M:SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Ext
  definition: SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
  href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_Sqrt_SearchAThing_Sci_Vector3D_
  name: Sqrt(Vector3D)
  nameWithType: Ext.Sqrt(Vector3D)
  fullName: SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
    name: Sqrt
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_Sqrt_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
    name: Sqrt
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_Sqrt_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
  href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_Sqrt_SearchAThing_Sci_Vector3D_
  name: Sqrt(Vector3D)
  nameWithType: Ext.Sqrt(Vector3D)
  fullName: SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
    name: Sqrt
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_Sqrt_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Ext.Sqrt(SearchAThing.Sci.Vector3D)
    name: Sqrt
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_Sqrt_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Ext
  commentId: T:SearchAThing.Sci.Ext
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Ext.html
  name: Ext
  nameWithType: Ext
  fullName: SearchAThing.Sci.Ext
- uid: SearchAThing.Sci.Geometry.Copy
  commentId: M:SearchAThing.Sci.Geometry.Copy
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  name: Copy()
  nameWithType: Geometry.Copy()
  fullName: SearchAThing.Sci.Geometry.Copy()
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Copy
    name: Copy
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  - name: (
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Copy
    name: Copy
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  - name: (
  - name: )
- uid: SearchAThing.Sci.Vector3D.Copy*
  commentId: Overload:SearchAThing.Sci.Vector3D.Copy
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Copy
  name: Copy
  nameWithType: Vector3D.Copy
  fullName: SearchAThing.Sci.Vector3D.Copy
- uid: SearchAThing.Sci.Geometry.Vertexes
  commentId: P:SearchAThing.Sci.Geometry.Vertexes
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Vertexes
  name: Vertexes
  nameWithType: Geometry.Vertexes
  fullName: SearchAThing.Sci.Geometry.Vertexes
- uid: SearchAThing.Sci.Vector3D.Vertexes*
  commentId: Overload:SearchAThing.Sci.Vector3D.Vertexes
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Vertexes
  name: Vertexes
  nameWithType: Vector3D.Vertexes
  fullName: SearchAThing.Sci.Vector3D.Vertexes
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3D>
  nameWithType: IEnumerable<Vector3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>
  nameWithType.vb: IEnumerable(Of Vector3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D)
  name.vb: IEnumerable(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.Geometry.GeomFrom
  commentId: P:SearchAThing.Sci.Geometry.GeomFrom
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomFrom
  name: GeomFrom
  nameWithType: Geometry.GeomFrom
  fullName: SearchAThing.Sci.Geometry.GeomFrom
- uid: SearchAThing.Sci.Vector3D.GeomFrom*
  commentId: Overload:SearchAThing.Sci.Vector3D.GeomFrom
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_GeomFrom
  name: GeomFrom
  nameWithType: Vector3D.GeomFrom
  fullName: SearchAThing.Sci.Vector3D.GeomFrom
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.Geometry.GeomTo
  commentId: P:SearchAThing.Sci.Geometry.GeomTo
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomTo
  name: GeomTo
  nameWithType: Geometry.GeomTo
  fullName: SearchAThing.Sci.Geometry.GeomTo
- uid: SearchAThing.Sci.Vector3D.GeomTo*
  commentId: Overload:SearchAThing.Sci.Vector3D.GeomTo
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_GeomTo
  name: GeomTo
  nameWithType: Vector3D.GeomTo
  fullName: SearchAThing.Sci.Vector3D.GeomTo
- uid: SearchAThing.Sci.Geometry.Length
  commentId: P:SearchAThing.Sci.Geometry.Length
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Length
  name: Length
  nameWithType: Geometry.Length
  fullName: SearchAThing.Sci.Geometry.Length
- uid: SearchAThing.Sci.Vector3D.Length*
  commentId: Overload:SearchAThing.Sci.Vector3D.Length
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Length
  name: Length
  nameWithType: Vector3D.Length
  fullName: SearchAThing.Sci.Vector3D.Length
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.Vector3D.SquaredDistance*
  commentId: Overload:SearchAThing.Sci.Vector3D.SquaredDistance
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_SquaredDistance_SearchAThing_Sci_Vector3D_
  name: SquaredDistance
  nameWithType: Vector3D.SquaredDistance
  fullName: SearchAThing.Sci.Vector3D.SquaredDistance
- uid: SearchAThing.Sci.Geometry.MidPoint
  commentId: P:SearchAThing.Sci.Geometry.MidPoint
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_MidPoint
  name: MidPoint
  nameWithType: Geometry.MidPoint
  fullName: SearchAThing.Sci.Geometry.MidPoint
- uid: SearchAThing.Sci.Vector3D.MidPoint*
  commentId: Overload:SearchAThing.Sci.Vector3D.MidPoint
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_MidPoint
  name: MidPoint
  nameWithType: Vector3D.MidPoint
  fullName: SearchAThing.Sci.Vector3D.MidPoint
- uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  commentId: M:SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  name: Divide(int, bool)
  nameWithType: Geometry.Divide(int, bool)
  fullName: SearchAThing.Sci.Geometry.Divide(int, bool)
  nameWithType.vb: Geometry.Divide(Integer, Boolean)
  fullName.vb: SearchAThing.Sci.Geometry.Divide(Integer, Boolean)
  name.vb: Divide(Integer, Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
    name: Divide
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
    name: Divide
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Vector3D.Divide*
  commentId: Overload:SearchAThing.Sci.Vector3D.Divide
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Divide_System_Int32_System_Boolean_
  name: Divide
  nameWithType: Vector3D.Divide
  fullName: SearchAThing.Sci.Vector3D.Divide
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  name: Split(double, IEnumerable<Vector3D>)
  nameWithType: Geometry.Split(double, IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.Geometry.Split(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  nameWithType.vb: Geometry.Split(Double, IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.Geometry.Split(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: Split(Double, IEnumerable(Of Vector3D))
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
    name: Split
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
    name: Split
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  - name: )
- uid: SearchAThing.Sci.Vector3D.Split*
  commentId: Overload:SearchAThing.Sci.Vector3D.Split
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  name: Split
  nameWithType: Vector3D.Split
  fullName: SearchAThing.Sci.Vector3D.Split
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Geometry>
  nameWithType: IEnumerable<Geometry>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Geometry>
  nameWithType.vb: IEnumerable(Of Geometry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Geometry)
  name.vb: IEnumerable(Of Geometry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: )
- uid: SearchAThing.Sci.Geometry.BBox(System.Double)
  commentId: M:SearchAThing.Sci.Geometry.BBox(System.Double)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  name: BBox(double)
  nameWithType: Geometry.BBox(double)
  fullName: SearchAThing.Sci.Geometry.BBox(double)
  nameWithType.vb: Geometry.BBox(Double)
  fullName.vb: SearchAThing.Sci.Geometry.BBox(Double)
  name.vb: BBox(Double)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.BBox(System.Double)
    name: BBox
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.BBox(System.Double)
    name: BBox
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: SearchAThing.Sci.Vector3D.BBox*
  commentId: Overload:SearchAThing.Sci.Vector3D.BBox
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_BBox_System_Double_
  name: BBox
  nameWithType: Vector3D.BBox
  fullName: SearchAThing.Sci.Vector3D.BBox
- uid: SearchAThing.Sci.BBox3D
  commentId: T:SearchAThing.Sci.BBox3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.BBox3D.html
  name: BBox3D
  nameWithType: BBox3D
  fullName: SearchAThing.Sci.BBox3D
- uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  commentId: M:SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  name: GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  nameWithType: Geometry.GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName: SearchAThing.Sci.Geometry.GeomIntersect(double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  nameWithType.vb: Geometry.GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName.vb: SearchAThing.Sci.Geometry.GeomIntersect(Double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  name.vb: GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
    name: GeomIntersect
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
    name: GeomIntersect
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: )
- uid: SearchAThing.Sci.Vector3D.GeomIntersect*
  commentId: Overload:SearchAThing.Sci.Vector3D.GeomIntersect
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  name: GeomIntersect
  nameWithType: Vector3D.GeomIntersect
  fullName: SearchAThing.Sci.Vector3D.GeomIntersect
- uid: SearchAThing.Sci.GeomSegmentMode
  commentId: T:SearchAThing.Sci.GeomSegmentMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.GeomSegmentMode.html
  name: GeomSegmentMode
  nameWithType: GeomSegmentMode
  fullName: SearchAThing.Sci.GeomSegmentMode
- uid: SearchAThing.Sci.Geometry.DxfEntity
  commentId: P:SearchAThing.Sci.Geometry.DxfEntity
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_DxfEntity
  name: DxfEntity
  nameWithType: Geometry.DxfEntity
  fullName: SearchAThing.Sci.Geometry.DxfEntity
- uid: SearchAThing.Sci.Vector3D.DxfEntity*
  commentId: Overload:SearchAThing.Sci.Vector3D.DxfEntity
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_DxfEntity
  name: DxfEntity
  nameWithType: Vector3D.DxfEntity
  fullName: SearchAThing.Sci.Vector3D.DxfEntity
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  isExternal: true
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
- uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  commentId: M:SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  name: GeomEquals(double, Geometry, bool)
  nameWithType: Geometry.GeomEquals(double, Geometry, bool)
  fullName: SearchAThing.Sci.Geometry.GeomEquals(double, SearchAThing.Sci.Geometry, bool)
  nameWithType.vb: Geometry.GeomEquals(Double, Geometry, Boolean)
  fullName.vb: SearchAThing.Sci.Geometry.GeomEquals(Double, SearchAThing.Sci.Geometry, Boolean)
  name.vb: GeomEquals(Double, Geometry, Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
    name: GeomEquals
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
    name: GeomEquals
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Vector3D.GeomEquals*
  commentId: Overload:SearchAThing.Sci.Vector3D.GeomEquals
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  name: GeomEquals
  nameWithType: Vector3D.GeomEquals
  fullName: SearchAThing.Sci.Vector3D.GeomEquals
- uid: SearchAThing.Sci.Vector3D.Axis*
  commentId: Overload:SearchAThing.Sci.Vector3D.Axis
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Axis_System_Int32_
  name: Axis
  nameWithType: Vector3D.Axis
  fullName: SearchAThing.Sci.Vector3D.Axis
- uid: SearchAThing.Sci.Vector3D.GetOrd*
  commentId: Overload:SearchAThing.Sci.Vector3D.GetOrd
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_GetOrd_System_Int32_
  name: GetOrd
  nameWithType: Vector3D.GetOrd
  fullName: SearchAThing.Sci.Vector3D.GetOrd
- uid: SearchAThing.Sci.OrdIdx
  commentId: T:SearchAThing.Sci.OrdIdx
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.OrdIdx.html
  name: OrdIdx
  nameWithType: OrdIdx
  fullName: SearchAThing.Sci.OrdIdx
- uid: SearchAThing.Sci.Vector3D.X*
  commentId: Overload:SearchAThing.Sci.Vector3D.X
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_X
  name: X
  nameWithType: Vector3D.X
  fullName: SearchAThing.Sci.Vector3D.X
- uid: SearchAThing.Sci.Vector3D.Y*
  commentId: Overload:SearchAThing.Sci.Vector3D.Y
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Y
  name: Y
  nameWithType: Vector3D.Y
  fullName: SearchAThing.Sci.Vector3D.Y
- uid: SearchAThing.Sci.Vector3D.Z*
  commentId: Overload:SearchAThing.Sci.Vector3D.Z
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Z
  name: Z
  nameWithType: Vector3D.Z
  fullName: SearchAThing.Sci.Vector3D.Z
- uid: SearchAThing.Sci.Vector3D.#ctor*
  commentId: Overload:SearchAThing.Sci.Vector3D.#ctor
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D__ctor
  name: Vector3D
  nameWithType: Vector3D.Vector3D
  fullName: SearchAThing.Sci.Vector3D.Vector3D
  nameWithType.vb: Vector3D.New
  fullName.vb: SearchAThing.Sci.Vector3D.New
  name.vb: New
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SearchAThing.Sci.Vector3D.Coordinates*
  commentId: Overload:SearchAThing.Sci.Vector3D.Coordinates
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Coordinates
  name: Coordinates
  nameWithType: Vector3D.Coordinates
  fullName: SearchAThing.Sci.Vector3D.Coordinates
- uid: System.Collections.Generic.IEnumerable{System.Double}
  commentId: T:System.Collections.Generic.IEnumerable{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<double>
  nameWithType: IEnumerable<double>
  fullName: System.Collections.Generic.IEnumerable<double>
  nameWithType.vb: IEnumerable(Of Double)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Double)
  name.vb: IEnumerable(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  name: Move(Vector3D)
  nameWithType: Geometry.Move(Vector3D)
  fullName: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
    name: Move
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
    name: Move
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Vector3D.Move*
  commentId: Overload:SearchAThing.Sci.Vector3D.Move
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Move_SearchAThing_Sci_Vector3D_
  name: Move
  nameWithType: Vector3D.Move
  fullName: SearchAThing.Sci.Vector3D.Move
- uid: SearchAThing.Sci.Vector3D.IsZeroLength*
  commentId: Overload:SearchAThing.Sci.Vector3D.IsZeroLength
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_IsZeroLength
  name: IsZeroLength
  nameWithType: Vector3D.IsZeroLength
  fullName: SearchAThing.Sci.Vector3D.IsZeroLength
- uid: SearchAThing.Sci.Vector3D.EqualsTol*
  commentId: Overload:SearchAThing.Sci.Vector3D.EqualsTol
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_EqualsTol_System_Double_SearchAThing_Sci_Vector3D_
  name: EqualsTol
  nameWithType: Vector3D.EqualsTol
  fullName: SearchAThing.Sci.Vector3D.EqualsTol
- uid: SearchAThing.Sci.Vector3D.EqualsAutoTol*
  commentId: Overload:SearchAThing.Sci.Vector3D.EqualsAutoTol
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_EqualsAutoTol_SearchAThing_Sci_Vector3D_
  name: EqualsAutoTol
  nameWithType: Vector3D.EqualsAutoTol
  fullName: SearchAThing.Sci.Vector3D.EqualsAutoTol
- uid: SearchAThing.Sci.Vector3D.Normalized*
  commentId: Overload:SearchAThing.Sci.Vector3D.Normalized
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Normalized
  name: Normalized
  nameWithType: Vector3D.Normalized
  fullName: SearchAThing.Sci.Vector3D.Normalized
- uid: SearchAThing.Sci.Vector3D.Distance*
  commentId: Overload:SearchAThing.Sci.Vector3D.Distance
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Distance_SearchAThing_Sci_Vector3D_
  name: Distance
  nameWithType: Vector3D.Distance
  fullName: SearchAThing.Sci.Vector3D.Distance
- uid: SearchAThing.Sci.Vector3D.ColinearScalarOffset*
  commentId: Overload:SearchAThing.Sci.Vector3D.ColinearScalarOffset
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ColinearScalarOffset_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: ColinearScalarOffset
  nameWithType: Vector3D.ColinearScalarOffset
  fullName: SearchAThing.Sci.Vector3D.ColinearScalarOffset
- uid: SearchAThing.Sci.Line3D
  commentId: T:SearchAThing.Sci.Line3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Line3D.html
  name: Line3D
  nameWithType: Line3D
  fullName: SearchAThing.Sci.Line3D
- uid: SearchAThing.Sci.Vector3D.XYDistance*
  commentId: Overload:SearchAThing.Sci.Vector3D.XYDistance
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_XYDistance_SearchAThing_Sci_Vector3D_
  name: XYDistance
  nameWithType: Vector3D.XYDistance
  fullName: SearchAThing.Sci.Vector3D.XYDistance
- uid: SearchAThing.Sci.Vector3D.DotProduct*
  commentId: Overload:SearchAThing.Sci.Vector3D.DotProduct
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_DotProduct_SearchAThing_Sci_Vector3D_
  name: DotProduct
  nameWithType: Vector3D.DotProduct
  fullName: SearchAThing.Sci.Vector3D.DotProduct
- uid: SearchAThing.Sci.Vector3D.IsPerpendicular*
  commentId: Overload:SearchAThing.Sci.Vector3D.IsPerpendicular
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_IsPerpendicular_SearchAThing_Sci_Vector3D_
  name: IsPerpendicular
  nameWithType: Vector3D.IsPerpendicular
  fullName: SearchAThing.Sci.Vector3D.IsPerpendicular
- uid: SearchAThing.Sci.Vector3D.CrossProduct*
  commentId: Overload:SearchAThing.Sci.Vector3D.CrossProduct
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_CrossProduct_SearchAThing_Sci_Vector3D_
  name: CrossProduct
  nameWithType: Vector3D.CrossProduct
  fullName: SearchAThing.Sci.Vector3D.CrossProduct
- uid: SearchAThing.Sci.Vector3D.AngleRad*
  commentId: Overload:SearchAThing.Sci.Vector3D.AngleRad
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_AngleRad_System_Double_SearchAThing_Sci_Vector3D_
  name: AngleRad
  nameWithType: Vector3D.AngleRad
  fullName: SearchAThing.Sci.Vector3D.AngleRad
- uid: SearchAThing.Sci.Vector3D.Project*
  commentId: Overload:SearchAThing.Sci.Vector3D.Project
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Project_SearchAThing_Sci_Vector3D_
  name: Project
  nameWithType: Vector3D.Project
  fullName: SearchAThing.Sci.Vector3D.Project
- uid: SearchAThing.Sci.CoordinateSystem3D
  commentId: T:SearchAThing.Sci.CoordinateSystem3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.CoordinateSystem3D.html
  name: CoordinateSystem3D
  nameWithType: CoordinateSystem3D
  fullName: SearchAThing.Sci.CoordinateSystem3D
- uid: SearchAThing.Sci.Vector3D.Set*
  commentId: Overload:SearchAThing.Sci.Vector3D.Set
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Set_SearchAThing_Sci_OrdIdx_System_Double_
  name: Set
  nameWithType: Vector3D.Set
  fullName: SearchAThing.Sci.Vector3D.Set
- uid: SearchAThing.Sci.Vector3D.SetX*
  commentId: Overload:SearchAThing.Sci.Vector3D.SetX
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_SetX_System_Double_
  name: SetX
  nameWithType: Vector3D.SetX
  fullName: SearchAThing.Sci.Vector3D.SetX
- uid: SearchAThing.Sci.Vector3D.SetY*
  commentId: Overload:SearchAThing.Sci.Vector3D.SetY
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_SetY_System_Double_
  name: SetY
  nameWithType: Vector3D.SetY
  fullName: SearchAThing.Sci.Vector3D.SetY
- uid: SearchAThing.Sci.Vector3D.SetZ*
  commentId: Overload:SearchAThing.Sci.Vector3D.SetZ
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_SetZ_System_Double_
  name: SetZ
  nameWithType: Vector3D.SetZ
  fullName: SearchAThing.Sci.Vector3D.SetZ
- uid: SearchAThing.Sci.Vector3D.Rel*
  commentId: Overload:SearchAThing.Sci.Vector3D.Rel
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Rel_SearchAThing_Sci_Vector3D_
  name: Rel
  nameWithType: Vector3D.Rel
  fullName: SearchAThing.Sci.Vector3D.Rel
- uid: SearchAThing.Sci.Vector3D.IsParallelTo*
  commentId: Overload:SearchAThing.Sci.Vector3D.IsParallelTo
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_IsParallelTo_System_Double_SearchAThing_Sci_Vector3D_
  name: IsParallelTo
  nameWithType: Vector3D.IsParallelTo
  fullName: SearchAThing.Sci.Vector3D.IsParallelTo
- uid: SearchAThing.Sci.Vector3D.Colinear*
  commentId: Overload:SearchAThing.Sci.Vector3D.Colinear
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Colinear_System_Double_SearchAThing_Sci_Vector3D_
  name: Colinear
  nameWithType: Vector3D.Colinear
  fullName: SearchAThing.Sci.Vector3D.Colinear
- uid: SearchAThing.Sci.Vector3D.Concordant*
  commentId: Overload:SearchAThing.Sci.Vector3D.Concordant
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Concordant_System_Double_SearchAThing_Sci_Vector3D_
  name: Concordant
  nameWithType: Vector3D.Concordant
  fullName: SearchAThing.Sci.Vector3D.Concordant
- uid: SearchAThing.Sci.Vector3D.ConcordantColinear*
  commentId: Overload:SearchAThing.Sci.Vector3D.ConcordantColinear
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ConcordantColinear_System_Double_SearchAThing_Sci_Vector3D_
  name: ConcordantColinear
  nameWithType: Vector3D.ConcordantColinear
  fullName: SearchAThing.Sci.Vector3D.ConcordantColinear
- uid: SearchAThing.Sci.Vector3D.AngleToward*
  commentId: Overload:SearchAThing.Sci.Vector3D.AngleToward
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_AngleToward_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: AngleToward
  nameWithType: Vector3D.AngleToward
  fullName: SearchAThing.Sci.Vector3D.AngleToward
- uid: SearchAThing.Sci.Vector3D.RotateAboutXAxis*
  commentId: Overload:SearchAThing.Sci.Vector3D.RotateAboutXAxis
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_RotateAboutXAxis_System_Double_
  name: RotateAboutXAxis
  nameWithType: Vector3D.RotateAboutXAxis
  fullName: SearchAThing.Sci.Vector3D.RotateAboutXAxis
- uid: SearchAThing.Sci.Vector3D.RotateAboutYAxis*
  commentId: Overload:SearchAThing.Sci.Vector3D.RotateAboutYAxis
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_RotateAboutYAxis_System_Double_
  name: RotateAboutYAxis
  nameWithType: Vector3D.RotateAboutYAxis
  fullName: SearchAThing.Sci.Vector3D.RotateAboutYAxis
- uid: SearchAThing.Sci.Vector3D.RotateAboutZAxis*
  commentId: Overload:SearchAThing.Sci.Vector3D.RotateAboutZAxis
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_RotateAboutZAxis_System_Double_
  name: RotateAboutZAxis
  nameWithType: Vector3D.RotateAboutZAxis
  fullName: SearchAThing.Sci.Vector3D.RotateAboutZAxis
- uid: SearchAThing.Sci.Vector3D.RotateAboutAxis*
  commentId: Overload:SearchAThing.Sci.Vector3D.RotateAboutAxis
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_RotateAboutAxis_SearchAThing_Sci_Vector3D_System_Double_
  name: RotateAboutAxis
  nameWithType: Vector3D.RotateAboutAxis
  fullName: SearchAThing.Sci.Vector3D.RotateAboutAxis
- uid: SearchAThing.Sci.Vector3D.RotateAs*
  commentId: Overload:SearchAThing.Sci.Vector3D.RotateAs
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_RotateAs_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_System_Double_System_Double_
  name: RotateAs
  nameWithType: Vector3D.RotateAs
  fullName: SearchAThing.Sci.Vector3D.RotateAs
- uid: SearchAThing.Sci.Vector3D.ScaleAbout*
  commentId: Overload:SearchAThing.Sci.Vector3D.ScaleAbout
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ScaleAbout_SearchAThing_Sci_Vector3D_System_Double_
  name: ScaleAbout
  nameWithType: Vector3D.ScaleAbout
  fullName: SearchAThing.Sci.Vector3D.ScaleAbout
- uid: SearchAThing.Sci.Vector3D.Mirror*
  commentId: Overload:SearchAThing.Sci.Vector3D.Mirror
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Mirror_SearchAThing_Sci_Line3D_
  name: Mirror
  nameWithType: Vector3D.Mirror
  fullName: SearchAThing.Sci.Vector3D.Mirror
- uid: SearchAThing.Sci.Vector3D.ToUCS*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToUCS
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToUCS_SearchAThing_Sci_CoordinateSystem3D_System_Boolean_
  name: ToUCS
  nameWithType: Vector3D.ToUCS
  fullName: SearchAThing.Sci.Vector3D.ToUCS
- uid: SearchAThing.Sci.Vector3D.ToWCS*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToWCS
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToWCS_SearchAThing_Sci_CoordinateSystem3D_System_Boolean_
  name: ToWCS
  nameWithType: Vector3D.ToWCS
  fullName: SearchAThing.Sci.Vector3D.ToWCS
- uid: SearchAThing.Sci.Vector3D.Scalar*
  commentId: Overload:SearchAThing.Sci.Vector3D.Scalar
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Scalar_System_Double_System_Double_System_Double_
  name: Scalar
  nameWithType: Vector3D.Scalar
  fullName: SearchAThing.Sci.Vector3D.Scalar
- uid: SearchAThing.Sci.Vector3D.Clamp*
  commentId: Overload:SearchAThing.Sci.Vector3D.Clamp
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Clamp_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: Clamp
  nameWithType: Vector3D.Clamp
  fullName: SearchAThing.Sci.Vector3D.Clamp
- uid: SearchAThing.Sci.Vector3D.Item*
  commentId: Overload:SearchAThing.Sci.Vector3D.Item
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Item_System_Int32_
  name: this
  nameWithType: Vector3D.this
  fullName: SearchAThing.Sci.Vector3D.this
  nameWithType.vb: Vector3D.this[]
  fullName.vb: SearchAThing.Sci.Vector3D.this[]
  name.vb: this[]
- uid: SearchAThing.Sci.Vector3D.op_Addition*
  commentId: Overload:SearchAThing.Sci.Vector3D.op_Addition
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_Addition_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: operator +
  nameWithType: Vector3D.operator +
  fullName: SearchAThing.Sci.Vector3D.operator +
  nameWithType.vb: Vector3D.+
  fullName.vb: SearchAThing.Sci.Vector3D.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Vector3D.op_Addition*
    name: +
    href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_Addition_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
- uid: SearchAThing.Sci.Vector3D.op_UnaryNegation*
  commentId: Overload:SearchAThing.Sci.Vector3D.op_UnaryNegation
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_UnaryNegation_SearchAThing_Sci_Vector3D_
  name: operator -
  nameWithType: Vector3D.operator -
  fullName: SearchAThing.Sci.Vector3D.operator -
  nameWithType.vb: Vector3D.-
  fullName.vb: SearchAThing.Sci.Vector3D.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Vector3D.op_UnaryNegation*
    name: '-'
    href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_UnaryNegation_SearchAThing_Sci_Vector3D_
- uid: SearchAThing.Sci.Vector3D.op_Subtraction*
  commentId: Overload:SearchAThing.Sci.Vector3D.op_Subtraction
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_Subtraction_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: operator -
  nameWithType: Vector3D.operator -
  fullName: SearchAThing.Sci.Vector3D.operator -
  nameWithType.vb: Vector3D.-
  fullName.vb: SearchAThing.Sci.Vector3D.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Vector3D.op_Subtraction*
    name: '-'
    href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_Subtraction_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
- uid: SearchAThing.Sci.Vector3D.op_Multiply*
  commentId: Overload:SearchAThing.Sci.Vector3D.op_Multiply
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_Multiply_System_Double_SearchAThing_Sci_Vector3D_
  name: operator *
  nameWithType: Vector3D.operator *
  fullName: SearchAThing.Sci.Vector3D.operator *
  nameWithType.vb: Vector3D.*
  fullName.vb: SearchAThing.Sci.Vector3D.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Vector3D.op_Multiply*
    name: '*'
    href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_Multiply_System_Double_SearchAThing_Sci_Vector3D_
- uid: SearchAThing.Sci.Vector3D.op_Division*
  commentId: Overload:SearchAThing.Sci.Vector3D.op_Division
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_Division_System_Double_SearchAThing_Sci_Vector3D_
  name: operator /
  nameWithType: Vector3D.operator /
  fullName: SearchAThing.Sci.Vector3D.operator /
  nameWithType.vb: Vector3D./
  fullName.vb: SearchAThing.Sci.Vector3D./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Vector3D.op_Division*
    name: /
    href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_op_Division_System_Double_SearchAThing_Sci_Vector3D_
- uid: SearchAThing.Sci.Vector3D.From2DCoords*
  commentId: Overload:SearchAThing.Sci.Vector3D.From2DCoords
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_From2DCoords_System_Double___
  name: From2DCoords
  nameWithType: Vector3D.From2DCoords
  fullName: SearchAThing.Sci.Vector3D.From2DCoords
- uid: System.Collections.Generic.List{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.List{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector3D>
  nameWithType: List<Vector3D>
  fullName: System.Collections.Generic.List<SearchAThing.Sci.Vector3D>
  nameWithType.vb: List(Of Vector3D)
  fullName.vb: System.Collections.Generic.List(Of SearchAThing.Sci.Vector3D)
  name.vb: List(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.Sci.Vector3D.From3DCoords*
  commentId: Overload:SearchAThing.Sci.Vector3D.From3DCoords
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_From3DCoords_System_Double___
  name: From3DCoords
  nameWithType: Vector3D.From3DCoords
  fullName: SearchAThing.Sci.Vector3D.From3DCoords
- uid: SearchAThing.Sci.Vector3D.FromTxtPointsList*
  commentId: Overload:SearchAThing.Sci.Vector3D.FromTxtPointsList
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_FromTxtPointsList_System_String_System_Globalization_CultureInfo_
  name: FromTxtPointsList
  nameWithType: Vector3D.FromTxtPointsList
  fullName: SearchAThing.Sci.Vector3D.FromTxtPointsList
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Globalization
    name: Globalization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization
- uid: SearchAThing.Sci.Vector3D.Random*
  commentId: Overload:SearchAThing.Sci.Vector3D.Random
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Random_System_Int32_System_Double_System_Int32_
  name: Random
  nameWithType: Vector3D.Random
  fullName: SearchAThing.Sci.Vector3D.Random
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: SearchAThing.Sci.Vector3D.FromString*
  commentId: Overload:SearchAThing.Sci.Vector3D.FromString
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_FromString_System_String_
  name: FromString
  nameWithType: Vector3D.FromString
  fullName: SearchAThing.Sci.Vector3D.FromString
- uid: SearchAThing.Sci.Vector3D.FromStringArray*
  commentId: Overload:SearchAThing.Sci.Vector3D.FromStringArray
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_FromStringArray_System_String_
  name: FromStringArray
  nameWithType: Vector3D.FromStringArray
  fullName: SearchAThing.Sci.Vector3D.FromStringArray
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SearchAThing.Sci.Vector3D.ToString*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToString
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToString
  name: ToString
  nameWithType: Vector3D.ToString
  fullName: SearchAThing.Sci.Vector3D.ToString
- uid: SearchAThing.Sci.Vector3D.StringRepresentation*
  commentId: Overload:SearchAThing.Sci.Vector3D.StringRepresentation
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_StringRepresentation
  name: StringRepresentation
  nameWithType: Vector3D.StringRepresentation
  fullName: SearchAThing.Sci.Vector3D.StringRepresentation
- uid: SearchAThing.Sci.Vector3D.QCadScript*
  commentId: Overload:SearchAThing.Sci.Vector3D.QCadScript
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_QCadScript_System_Boolean_
  name: QCadScript
  nameWithType: Vector3D.QCadScript
  fullName: SearchAThing.Sci.Vector3D.QCadScript
- uid: SearchAThing.Sci.Vector3D.A0QCadScript*
  commentId: Overload:SearchAThing.Sci.Vector3D.A0QCadScript
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_A0QCadScript
  name: A0QCadScript
  nameWithType: Vector3D.A0QCadScript
  fullName: SearchAThing.Sci.Vector3D.A0QCadScript
- uid: SearchAThing.Sci.Vector3D.CadScript*
  commentId: Overload:SearchAThing.Sci.Vector3D.CadScript
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_CadScript
  name: CadScript
  nameWithType: Vector3D.CadScript
  fullName: SearchAThing.Sci.Vector3D.CadScript
- uid: SearchAThing.Sci.Vector3D.CadScriptLine*
  commentId: Overload:SearchAThing.Sci.Vector3D.CadScriptLine
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_CadScriptLine
  name: CadScriptLine
  nameWithType: Vector3D.CadScriptLine
  fullName: SearchAThing.Sci.Vector3D.CadScriptLine
- uid: SearchAThing.Sci.Vector3D.CadScriptLineFrom*
  commentId: Overload:SearchAThing.Sci.Vector3D.CadScriptLineFrom
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_CadScriptLineFrom
  name: CadScriptLineFrom
  nameWithType: Vector3D.CadScriptLineFrom
  fullName: SearchAThing.Sci.Vector3D.CadScriptLineFrom
- uid: SearchAThing.Sci.Vector3D.LineTo*
  commentId: Overload:SearchAThing.Sci.Vector3D.LineTo
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_LineTo_SearchAThing_Sci_Vector3D_
  name: LineTo
  nameWithType: Vector3D.LineTo
  fullName: SearchAThing.Sci.Vector3D.LineTo
- uid: SearchAThing.Sci.Vector3D.LineV*
  commentId: Overload:SearchAThing.Sci.Vector3D.LineV
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_LineV_SearchAThing_Sci_Vector3D_
  name: LineV
  nameWithType: Vector3D.LineV
  fullName: SearchAThing.Sci.Vector3D.LineV
- uid: SearchAThing.Sci.Vector3D.LineDir*
  commentId: Overload:SearchAThing.Sci.Vector3D.LineDir
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_LineDir_SearchAThing_Sci_Vector3D_System_Double_System_Boolean_
  name: LineDir
  nameWithType: Vector3D.LineDir
  fullName: SearchAThing.Sci.Vector3D.LineDir
- uid: SearchAThing.Sci.Vector3D.op_Implicit*
  commentId: Overload:SearchAThing.Sci.Vector3D.op_Implicit
  name: implicit operator
  nameWithType: Vector3D.implicit operator
  fullName: SearchAThing.Sci.Vector3D.implicit operator
  nameWithType.vb: Vector3D.CType
  fullName.vb: SearchAThing.Sci.Vector3D.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: netDxf.Vector2
  commentId: T:netDxf.Vector2
  parent: netDxf
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: netDxf.Vector2
- uid: netDxf
  commentId: N:netDxf
  isExternal: true
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: netDxf.Vector3
  commentId: T:netDxf.Vector3
  parent: netDxf
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: netDxf.Vector3
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector3
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: LibTessDotNet.Vec3
  commentId: T:LibTessDotNet.Vec3
  parent: LibTessDotNet
  isExternal: true
  name: Vec3
  nameWithType: Vec3
  fullName: LibTessDotNet.Vec3
- uid: LibTessDotNet
  commentId: N:LibTessDotNet
  isExternal: true
  name: LibTessDotNet
  nameWithType: LibTessDotNet
  fullName: LibTessDotNet
- uid: SearchAThing.Sci.Vector3D.ToDxfVector2*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToDxfVector2
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToDxfVector2
  name: ToDxfVector2
  nameWithType: Vector3D.ToDxfVector2
  fullName: SearchAThing.Sci.Vector3D.ToDxfVector2
- uid: SearchAThing.Sci.Vector3D.ToDxfVector3*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToDxfVector3
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToDxfVector3
  name: ToDxfVector3
  nameWithType: Vector3D.ToDxfVector3
  fullName: SearchAThing.Sci.Vector3D.ToDxfVector3
- uid: SearchAThing.Sci.Vector3D.ToNVector2*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToNVector2
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToNVector2
  name: ToNVector2
  nameWithType: Vector3D.ToNVector2
  fullName: SearchAThing.Sci.Vector3D.ToNVector2
- uid: SearchAThing.Sci.Vector3D.ToNVector3*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToNVector3
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToNVector3
  name: ToNVector3
  nameWithType: Vector3D.ToNVector3
  fullName: SearchAThing.Sci.Vector3D.ToNVector3
- uid: SearchAThing.Sci.Vector3D.ToPoint*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToPoint
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToPoint
  name: ToPoint
  nameWithType: Vector3D.ToPoint
  fullName: SearchAThing.Sci.Vector3D.ToPoint
- uid: netDxf.Entities.Point
  commentId: T:netDxf.Entities.Point
  parent: netDxf.Entities
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: netDxf.Entities.Point
- uid: SearchAThing.Sci.Vector3D.ToDxfPoint*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToDxfPoint
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToDxfPoint
  name: ToDxfPoint
  nameWithType: Vector3D.ToDxfPoint
  fullName: SearchAThing.Sci.Vector3D.ToDxfPoint
- uid: SearchAThing.Sci.Vector3D.ToRad*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToRad
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToRad
  name: ToRad
  nameWithType: Vector3D.ToRad
  fullName: SearchAThing.Sci.Vector3D.ToRad
- uid: SearchAThing.Sci.Vector3D.ToDeg*
  commentId: Overload:SearchAThing.Sci.Vector3D.ToDeg
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_ToDeg
  name: ToDeg
  nameWithType: Vector3D.ToDeg
  fullName: SearchAThing.Sci.Vector3D.ToDeg
- uid: SearchAThing.Sci.Vector3D.Debug*
  commentId: Overload:SearchAThing.Sci.Vector3D.Debug
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Debug_System_String_
  name: Debug
  nameWithType: Vector3D.Debug
  fullName: SearchAThing.Sci.Vector3D.Debug
- uid: SearchAThing.Sci.Vector3D.Abs*
  commentId: Overload:SearchAThing.Sci.Vector3D.Abs
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Abs
  name: Abs
  nameWithType: Vector3D.Abs
  fullName: SearchAThing.Sci.Vector3D.Abs
- uid: SearchAThing.Sci.Vector3D.Sign*
  commentId: Overload:SearchAThing.Sci.Vector3D.Sign
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Sign
  name: Sign
  nameWithType: Vector3D.Sign
  fullName: SearchAThing.Sci.Vector3D.Sign
- uid: SearchAThing.Sci.Vector3D.DisambiguatedPoints*
  commentId: Overload:SearchAThing.Sci.Vector3D.DisambiguatedPoints
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_DisambiguatedPoints_System_Double_SearchAThing_Sci_Vector3D_
  name: DisambiguatedPoints
  nameWithType: Vector3D.DisambiguatedPoints
  fullName: SearchAThing.Sci.Vector3D.DisambiguatedPoints
- uid: SearchAThing.Sci.Vector3D.Max*
  commentId: Overload:SearchAThing.Sci.Vector3D.Max
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Max
  name: Max
  nameWithType: Vector3D.Max
  fullName: SearchAThing.Sci.Vector3D.Max
- uid: SearchAThing.Sci.Vector3D.Min*
  commentId: Overload:SearchAThing.Sci.Vector3D.Min
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Min
  name: Min
  nameWithType: Vector3D.Min
  fullName: SearchAThing.Sci.Vector3D.Min
- uid: SearchAThing.Sci.Vector3D.Transform*
  commentId: Overload:SearchAThing.Sci.Vector3D.Transform
  href: SearchAThing.Sci.Vector3D.html#SearchAThing_Sci_Vector3D_Transform_System_Numerics_Matrix4x4_
  name: Transform
  nameWithType: Vector3D.Transform
  fullName: SearchAThing.Sci.Vector3D.Transform
- uid: System.Numerics.Matrix4x4
  commentId: T:System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.matrix4x4
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
