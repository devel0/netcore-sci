### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.NormalizedAngleComparer
  commentId: T:SearchAThing.Sci.NormalizedAngleComparer
  id: NormalizedAngleComparer
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.NormalizedAngleComparer.#ctor(System.Double,System.Double)
  - SearchAThing.Sci.NormalizedAngleComparer.Compare(System.Double,System.Double)
  - SearchAThing.Sci.NormalizedAngleComparer.NormalizedEndAngleRad
  - SearchAThing.Sci.NormalizedAngleComparer.NormalizedStartAngleRad
  langs:
  - csharp
  - vb
  name: NormalizedAngleComparer
  nameWithType: NormalizedAngleComparer
  fullName: SearchAThing.Sci.NormalizedAngleComparer
  type: Class
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: NormalizedAngleComparer
    path: src/sci/Arc3D.cs
    startLine: 12
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    normalized angles in range [StartAngle, EndAngle] comparer


    Example:


    start:1.25π   end:0.5π

    the set { 0.25π, 0.75π } sorts to { 0.75π, 0.25π }


    Precondition: constructor start, end angles and compare method arguments must normalized [0,2PI)
  example: []
  syntax:
    content: 'public class NormalizedAngleComparer : IComparer<double>'
    content.vb: Public Class NormalizedAngleComparer Implements IComparer(Of Double)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{System.Double}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SearchAThing.Sci.NormalizedAngleComparer.NormalizedStartAngleRad
  commentId: P:SearchAThing.Sci.NormalizedAngleComparer.NormalizedStartAngleRad
  id: NormalizedStartAngleRad
  parent: SearchAThing.Sci.NormalizedAngleComparer
  langs:
  - csharp
  - vb
  name: NormalizedStartAngleRad
  nameWithType: NormalizedAngleComparer.NormalizedStartAngleRad
  fullName: SearchAThing.Sci.NormalizedAngleComparer.NormalizedStartAngleRad
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: NormalizedStartAngleRad
    path: src/sci/Arc3D.cs
    startLine: 14
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public double NormalizedStartAngleRad { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property NormalizedStartAngleRad As Double
  overload: SearchAThing.Sci.NormalizedAngleComparer.NormalizedStartAngleRad*
- uid: SearchAThing.Sci.NormalizedAngleComparer.NormalizedEndAngleRad
  commentId: P:SearchAThing.Sci.NormalizedAngleComparer.NormalizedEndAngleRad
  id: NormalizedEndAngleRad
  parent: SearchAThing.Sci.NormalizedAngleComparer
  langs:
  - csharp
  - vb
  name: NormalizedEndAngleRad
  nameWithType: NormalizedAngleComparer.NormalizedEndAngleRad
  fullName: SearchAThing.Sci.NormalizedAngleComparer.NormalizedEndAngleRad
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: NormalizedEndAngleRad
    path: src/sci/Arc3D.cs
    startLine: 15
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public double NormalizedEndAngleRad { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property NormalizedEndAngleRad As Double
  overload: SearchAThing.Sci.NormalizedAngleComparer.NormalizedEndAngleRad*
- uid: SearchAThing.Sci.NormalizedAngleComparer.#ctor(System.Double,System.Double)
  commentId: M:SearchAThing.Sci.NormalizedAngleComparer.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: SearchAThing.Sci.NormalizedAngleComparer
  langs:
  - csharp
  - vb
  name: NormalizedAngleComparer(double, double)
  nameWithType: NormalizedAngleComparer.NormalizedAngleComparer(double, double)
  fullName: SearchAThing.Sci.NormalizedAngleComparer.NormalizedAngleComparer(double, double)
  type: Constructor
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Arc3D.cs
    startLine: 19
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public NormalizedAngleComparer(double normalizedStartAngleRad, double normalizedEndAngleRad)
    parameters:
    - id: normalizedStartAngleRad
      type: System.Double
    - id: normalizedEndAngleRad
      type: System.Double
    content.vb: Public Sub New(normalizedStartAngleRad As Double, normalizedEndAngleRad As Double)
  overload: SearchAThing.Sci.NormalizedAngleComparer.#ctor*
  nameWithType.vb: NormalizedAngleComparer.New(Double, Double)
  fullName.vb: SearchAThing.Sci.NormalizedAngleComparer.New(Double, Double)
  name.vb: New(Double, Double)
- uid: SearchAThing.Sci.NormalizedAngleComparer.Compare(System.Double,System.Double)
  commentId: M:SearchAThing.Sci.NormalizedAngleComparer.Compare(System.Double,System.Double)
  id: Compare(System.Double,System.Double)
  parent: SearchAThing.Sci.NormalizedAngleComparer
  langs:
  - csharp
  - vb
  name: Compare(double, double)
  nameWithType: NormalizedAngleComparer.Compare(double, double)
  fullName: SearchAThing.Sci.NormalizedAngleComparer.Compare(double, double)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Compare
    path: src/sci/Arc3D.cs
    startLine: 30
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: 'compare two angles ; precondition: angles must already normalized'
  example: []
  syntax:
    content: public int Compare(double xAngleRad, double yAngleRad)
    parameters:
    - id: xAngleRad
      type: System.Double
    - id: yAngleRad
      type: System.Double
    return:
      type: System.Int32
    content.vb: Public Function Compare(xAngleRad As Double, yAngleRad As Double) As Integer
  overload: SearchAThing.Sci.NormalizedAngleComparer.Compare*
  implements:
  - System.Collections.Generic.IComparer{System.Double}.Compare(System.Double,System.Double)
  nameWithType.vb: NormalizedAngleComparer.Compare(Double, Double)
  fullName.vb: SearchAThing.Sci.NormalizedAngleComparer.Compare(Double, Double)
  name.vb: Compare(Double, Double)
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IComparer{System.Double}
  commentId: T:System.Collections.Generic.IComparer{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<double>
  nameWithType: IComparer<double>
  fullName: System.Collections.Generic.IComparer<double>
  nameWithType.vb: IComparer(Of Double)
  fullName.vb: System.Collections.Generic.IComparer(Of Double)
  name.vb: IComparer(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.NormalizedAngleComparer.NormalizedStartAngleRad*
  commentId: Overload:SearchAThing.Sci.NormalizedAngleComparer.NormalizedStartAngleRad
  href: SearchAThing.Sci.NormalizedAngleComparer.html#SearchAThing_Sci_NormalizedAngleComparer_NormalizedStartAngleRad
  name: NormalizedStartAngleRad
  nameWithType: NormalizedAngleComparer.NormalizedStartAngleRad
  fullName: SearchAThing.Sci.NormalizedAngleComparer.NormalizedStartAngleRad
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.NormalizedAngleComparer.NormalizedEndAngleRad*
  commentId: Overload:SearchAThing.Sci.NormalizedAngleComparer.NormalizedEndAngleRad
  href: SearchAThing.Sci.NormalizedAngleComparer.html#SearchAThing_Sci_NormalizedAngleComparer_NormalizedEndAngleRad
  name: NormalizedEndAngleRad
  nameWithType: NormalizedAngleComparer.NormalizedEndAngleRad
  fullName: SearchAThing.Sci.NormalizedAngleComparer.NormalizedEndAngleRad
- uid: SearchAThing.Sci.NormalizedAngleComparer.#ctor*
  commentId: Overload:SearchAThing.Sci.NormalizedAngleComparer.#ctor
  href: SearchAThing.Sci.NormalizedAngleComparer.html#SearchAThing_Sci_NormalizedAngleComparer__ctor_System_Double_System_Double_
  name: NormalizedAngleComparer
  nameWithType: NormalizedAngleComparer.NormalizedAngleComparer
  fullName: SearchAThing.Sci.NormalizedAngleComparer.NormalizedAngleComparer
  nameWithType.vb: NormalizedAngleComparer.New
  fullName.vb: SearchAThing.Sci.NormalizedAngleComparer.New
  name.vb: New
- uid: SearchAThing.Sci.NormalizedAngleComparer.Compare*
  commentId: Overload:SearchAThing.Sci.NormalizedAngleComparer.Compare
  href: SearchAThing.Sci.NormalizedAngleComparer.html#SearchAThing_Sci_NormalizedAngleComparer_Compare_System_Double_System_Double_
  name: Compare
  nameWithType: NormalizedAngleComparer.Compare
  fullName: SearchAThing.Sci.NormalizedAngleComparer.Compare
- uid: System.Collections.Generic.IComparer{System.Double}.Compare(System.Double,System.Double)
  commentId: M:System.Collections.Generic.IComparer{System.Double}.Compare(System.Double,System.Double)
  parent: System.Collections.Generic.IComparer{System.Double}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  name: Compare(double, double)
  nameWithType: IComparer<double>.Compare(double, double)
  fullName: System.Collections.Generic.IComparer<double>.Compare(double, double)
  nameWithType.vb: IComparer(Of Double).Compare(Double, Double)
  fullName.vb: System.Collections.Generic.IComparer(Of Double).Compare(Double, Double)
  name.vb: Compare(Double, Double)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer{System.Double}.Compare(System.Double,System.Double)
    name: Compare
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer{System.Double}.Compare(System.Double,System.Double)
    name: Compare
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
