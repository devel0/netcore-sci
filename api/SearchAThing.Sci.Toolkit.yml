### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Toolkit
  commentId: T:SearchAThing.Sci.Toolkit
  id: Toolkit
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Toolkit.Circle2D(System.Double,System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Toolkit.CirclesOuterTangent(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Toolkit.Cube(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Toolkit.Cuboid(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Toolkit.LinearSplineInterpolate(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})
  - SearchAThing.Sci.Toolkit.PostProcessCadScript
  - SearchAThing.Sci.Toolkit.Range(System.Double,System.Double,System.Double,System.Double,System.Boolean)
  - SearchAThing.Sci.Toolkit.SciJsonSettings
  - SearchAThing.Sci.Toolkit.Segments(netDxf.Entities.Face3D)
  - SearchAThing.Sci.Toolkit.Star(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Toolkit.ToRegion(netDxf.Entities.Face3D,System.Double)
  - SearchAThing.Sci.Toolkit.ToSciJson(System.Object)
  - SearchAThing.Sci.Toolkit.Vertexes(netDxf.Entities.Face3D)
  - SearchAThing.Sci.Toolkit.WalkEdges(System.Double,SearchAThing.Sci.Edge,SearchAThing.Sci.Vector3D,System.Collections.Generic.Dictionary{SearchAThing.Sci.Vector3D,System.Collections.Generic.List{SearchAThing.Sci.Edge}},SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate)
  langs:
  - csharp
  - vb
  name: Toolkit
  nameWithType: Toolkit
  fullName: SearchAThing.Sci.Toolkit
  type: Class
  source:
    remote:
      path: src/sci/Serialization.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Toolkit
    path: src/sci/Serialization.cs
    startLine: 2
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: netcore-sci toolkit static methods
  example: []
  syntax:
    content: public static class Toolkit
    content.vb: Public Module Toolkit
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SearchAThing.Sci.Toolkit.Circle2D(System.Double,System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Toolkit.Circle2D(System.Double,System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: Circle2D(System.Double,System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: Circle2D(double, double, Vector3D, Vector3D)
  nameWithType: Toolkit.Circle2D(double, double, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Toolkit.Circle2D(double, double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Circle2D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Circle2D
    path: src/sci/Circle2D.cs
    startLine: 15
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create circle 2D by given two points and radius
  example: []
  syntax:
    content: public static Vector3D[] Circle2D(double tol, double radius, Vector3D p1, Vector3D p2)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: radius
      type: System.Double
      description: circle radius
    - id: p1
      type: SearchAThing.Sci.Vector3D
      description: circle first point (z not considered)
    - id: p2
      type: SearchAThing.Sci.Vector3D
      description: circle second point (z not considered)
    return:
      type: SearchAThing.Sci.Vector3D[]
      description: circle centers
    content.vb: Public Shared Function Circle2D(tol As Double, radius As Double, p1 As Vector3D, p2 As Vector3D) As Vector3D()
  overload: SearchAThing.Sci.Toolkit.Circle2D*
  nameWithType.vb: Toolkit.Circle2D(Double, Double, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Toolkit.Circle2D(Double, Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: Circle2D(Double, Double, Vector3D, Vector3D)
- uid: SearchAThing.Sci.Toolkit.CirclesOuterTangent(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Toolkit.CirclesOuterTangent(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: CirclesOuterTangent(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: CirclesOuterTangent(double, double, double, double, double, double)
  nameWithType: Toolkit.CirclesOuterTangent(double, double, double, double, double, double)
  fullName: SearchAThing.Sci.Toolkit.CirclesOuterTangent(double, double, double, double, double, double)
  type: Method
  source:
    remote:
      path: src/sci/Circle2D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CirclesOuterTangent
    path: src/sci/Circle2D.cs
    startLine: 58
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Finds tangent segments between two given circles.


    returns empty,

    or 2 tuple (exterior tangents)

    or 4 tuple (two exterior tangents and two interior tangents)


    ref: https://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Tangents_between_two_circles
  example: []
  syntax:
    content: public static IEnumerable<(CircleTangentType type, Vector3D pa, Vector3D pb)> CirclesOuterTangent(double x1, double y1, double r1, double x2, double y2, double r2)
    parameters:
    - id: x1
      type: System.Double
    - id: y1
      type: System.Double
    - id: r1
      type: System.Double
    - id: x2
      type: System.Double
    - id: y2
      type: System.Double
    - id: r2
      type: System.Double
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}}
    content.vb: Public Shared Function CirclesOuterTangent(x1 As Double, y1 As Double, r1 As Double, x2 As Double, y2 As Double, r2 As Double) As IEnumerable(Of (type As CircleTangentType, pa As Vector3D, pb As Vector3D))
  overload: SearchAThing.Sci.Toolkit.CirclesOuterTangent*
  nameWithType.vb: Toolkit.CirclesOuterTangent(Double, Double, Double, Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Toolkit.CirclesOuterTangent(Double, Double, Double, Double, Double, Double)
  name.vb: CirclesOuterTangent(Double, Double, Double, Double, Double, Double)
- uid: SearchAThing.Sci.Toolkit.PostProcessCadScript
  commentId: F:SearchAThing.Sci.Toolkit.PostProcessCadScript
  id: PostProcessCadScript
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: PostProcessCadScript
  nameWithType: Toolkit.PostProcessCadScript
  fullName: SearchAThing.Sci.Toolkit.PostProcessCadScript
  type: Field
  source:
    remote:
      path: src/sci/DxfKit.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: PostProcessCadScript
    path: src/sci/DxfKit.cs
    startLine: 5
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static Func<string, string> PostProcessCadScript
    return:
      type: System.Func{System.String,System.String}
    content.vb: Public Shared PostProcessCadScript As Func(Of String, String)
- uid: SearchAThing.Sci.Toolkit.Star(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Toolkit.Star(SearchAThing.Sci.Vector3D,System.Double)
  id: Star(SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: Star(Vector3D, double)
  nameWithType: Toolkit.Star(Vector3D, double)
  fullName: SearchAThing.Sci.Toolkit.Star(SearchAThing.Sci.Vector3D, double)
  type: Method
  source:
    remote:
      path: src/sci/DxfKit.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Star
    path: src/sci/DxfKit.cs
    startLine: 11
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Creates dxf entities for a 3 axis of given length centered in given center point.
  example: []
  syntax:
    content: public static IEnumerable<Line> Star(Vector3D center, double L)
    parameters:
    - id: center
      type: SearchAThing.Sci.Vector3D
    - id: L
      type: System.Double
    return:
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.Line}
    content.vb: Public Shared Function Star(center As Vector3D, L As Double) As IEnumerable(Of Line)
  overload: SearchAThing.Sci.Toolkit.Star*
  nameWithType.vb: Toolkit.Star(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Toolkit.Star(SearchAThing.Sci.Vector3D, Double)
  name.vb: Star(Vector3D, Double)
- uid: SearchAThing.Sci.Toolkit.Segments(netDxf.Entities.Face3D)
  commentId: M:SearchAThing.Sci.Toolkit.Segments(netDxf.Entities.Face3D)
  id: Segments(netDxf.Entities.Face3D)
  isExtensionMethod: true
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: Segments(Face3D)
  nameWithType: Toolkit.Segments(Face3D)
  fullName: SearchAThing.Sci.Toolkit.Segments(netDxf.Entities.Face3D)
  type: Method
  source:
    remote:
      path: src/sci/DxfKit.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Segments
    path: src/sci/DxfKit.cs
    startLine: 21
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve 3 or 4 segments from given face
  example: []
  syntax:
    content: public static IEnumerable<Line3D> Segments(this Face3D face)
    parameters:
    - id: face
      type: netDxf.Entities.Face3D
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Line3D}
    content.vb: Public Shared Function Segments(face As Face3D) As IEnumerable(Of Line3D)
  overload: SearchAThing.Sci.Toolkit.Segments*
- uid: SearchAThing.Sci.Toolkit.Cube(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Toolkit.Cube(SearchAThing.Sci.Vector3D,System.Double)
  id: Cube(SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: Cube(Vector3D, double)
  nameWithType: Toolkit.Cube(Vector3D, double)
  fullName: SearchAThing.Sci.Toolkit.Cube(SearchAThing.Sci.Vector3D, double)
  type: Method
  source:
    remote:
      path: src/sci/DxfKit.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Cube
    path: src/sci/DxfKit.cs
    startLine: 38
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Creates dxf entities for a 6 faces of a cube;

    generated face order is front, back, left, right, bottom, top
  example: []
  syntax:
    content: public static IEnumerable<Face3D> Cube(Vector3D center, double L)
    parameters:
    - id: center
      type: SearchAThing.Sci.Vector3D
    - id: L
      type: System.Double
    return:
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.Face3D}
    content.vb: Public Shared Function Cube(center As Vector3D, L As Double) As IEnumerable(Of Face3D)
  overload: SearchAThing.Sci.Toolkit.Cube*
  nameWithType.vb: Toolkit.Cube(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Toolkit.Cube(SearchAThing.Sci.Vector3D, Double)
  name.vb: Cube(Vector3D, Double)
- uid: SearchAThing.Sci.Toolkit.Cuboid(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Toolkit.Cuboid(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: Cuboid(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: Cuboid(Vector3D, Vector3D)
  nameWithType: Toolkit.Cuboid(Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Toolkit.Cuboid(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/DxfKit.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Cuboid
    path: src/sci/DxfKit.cs
    startLine: 44
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Creates dxf entities for 6 faces of a cuboid;

    generated face order is front, back, left, right, bottom, top
  example: []
  syntax:
    content: public static IEnumerable<Face3D> Cuboid(Vector3D center, Vector3D size)
    parameters:
    - id: center
      type: SearchAThing.Sci.Vector3D
    - id: size
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.Face3D}
    content.vb: Public Shared Function Cuboid(center As Vector3D, size As Vector3D) As IEnumerable(Of Face3D)
  overload: SearchAThing.Sci.Toolkit.Cuboid*
- uid: SearchAThing.Sci.Toolkit.Vertexes(netDxf.Entities.Face3D)
  commentId: M:SearchAThing.Sci.Toolkit.Vertexes(netDxf.Entities.Face3D)
  id: Vertexes(netDxf.Entities.Face3D)
  isExtensionMethod: true
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: Vertexes(Face3D)
  nameWithType: Toolkit.Vertexes(Face3D)
  fullName: SearchAThing.Sci.Toolkit.Vertexes(netDxf.Entities.Face3D)
  type: Method
  source:
    remote:
      path: src/sci/DxfKit.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Vertexes
    path: src/sci/DxfKit.cs
    startLine: 82
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve 3 or 4 vertex from given face
  example: []
  syntax:
    content: public static IEnumerable<Vector3D> Vertexes(this Face3D face)
    parameters:
    - id: face
      type: netDxf.Entities.Face3D
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Shared Function Vertexes(face As Face3D) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Toolkit.Vertexes*
- uid: SearchAThing.Sci.Toolkit.ToRegion(netDxf.Entities.Face3D,System.Double)
  commentId: M:SearchAThing.Sci.Toolkit.ToRegion(netDxf.Entities.Face3D,System.Double)
  id: ToRegion(netDxf.Entities.Face3D,System.Double)
  isExtensionMethod: true
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: ToRegion(Face3D, double)
  nameWithType: Toolkit.ToRegion(Face3D, double)
  fullName: SearchAThing.Sci.Toolkit.ToRegion(netDxf.Entities.Face3D, double)
  type: Method
  source:
    remote:
      path: src/sci/DxfKit.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToRegion
    path: src/sci/DxfKit.cs
    startLine: 93
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: convert face3d to Plane3DRegion
  example: []
  syntax:
    content: public static Plane3DRegion ToRegion(this Face3D face, double tol)
    parameters:
    - id: face
      type: netDxf.Entities.Face3D
    - id: tol
      type: System.Double
    return:
      type: SearchAThing.Sci.Plane3DRegion
    content.vb: Public Shared Function ToRegion(face As Face3D, tol As Double) As Plane3DRegion
  overload: SearchAThing.Sci.Toolkit.ToRegion*
  nameWithType.vb: Toolkit.ToRegion(Face3D, Double)
  fullName.vb: SearchAThing.Sci.Toolkit.ToRegion(netDxf.Entities.Face3D, Double)
  name.vb: ToRegion(Face3D, Double)
- uid: SearchAThing.Sci.Toolkit.WalkEdges(System.Double,SearchAThing.Sci.Edge,SearchAThing.Sci.Vector3D,System.Collections.Generic.Dictionary{SearchAThing.Sci.Vector3D,System.Collections.Generic.List{SearchAThing.Sci.Edge}},SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate)
  commentId: M:SearchAThing.Sci.Toolkit.WalkEdges(System.Double,SearchAThing.Sci.Edge,SearchAThing.Sci.Vector3D,System.Collections.Generic.Dictionary{SearchAThing.Sci.Vector3D,System.Collections.Generic.List{SearchAThing.Sci.Edge}},SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate)
  id: WalkEdges(System.Double,SearchAThing.Sci.Edge,SearchAThing.Sci.Vector3D,System.Collections.Generic.Dictionary{SearchAThing.Sci.Vector3D,System.Collections.Generic.List{SearchAThing.Sci.Edge}},SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate)
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: WalkEdges(double, Edge, Vector3D, Dictionary<Vector3D, List<Edge>>, WalkEdgeStopConditionDelegate?)
  nameWithType: Toolkit.WalkEdges(double, Edge, Vector3D, Dictionary<Vector3D, List<Edge>>, Toolkit.WalkEdgeStopConditionDelegate?)
  fullName: SearchAThing.Sci.Toolkit.WalkEdges(double, SearchAThing.Sci.Edge, SearchAThing.Sci.Vector3D, System.Collections.Generic.Dictionary<SearchAThing.Sci.Vector3D, System.Collections.Generic.List<SearchAThing.Sci.Edge>>, SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate?)
  type: Method
  source:
    remote:
      path: src/sci/Edge.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: WalkEdges
    path: src/sci/Edge.cs
    startLine: 332
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: walk edges
  example: []
  syntax:
    content: public static IEnumerable<Edge> WalkEdges(double tol, Edge startEdge, Vector3D startVertex, Dictionary<Vector3D, List<Edge>> vertexToEdges, Toolkit.WalkEdgeStopConditionDelegate? stopCondition = null)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: startEdge
      type: SearchAThing.Sci.Edge
      description: starting edge
    - id: startVertex
      type: SearchAThing.Sci.Vector3D
      description: starting vertex
    - id: vertexToEdges
      type: System.Collections.Generic.Dictionary{SearchAThing.Sci.Vector3D,System.Collections.Generic.List{SearchAThing.Sci.Edge}}
      description: vertex to edges dictionary
    - id: stopCondition
      type: SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate
      description: by default stop when meet startvertex again
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge}
      description: walked edges
    content.vb: Public Shared Function WalkEdges(tol As Double, startEdge As Edge, startVertex As Vector3D, vertexToEdges As Dictionary(Of Vector3D, List(Of Edge)), stopCondition As Toolkit.WalkEdgeStopConditionDelegate = Nothing) As IEnumerable(Of Edge)
  overload: SearchAThing.Sci.Toolkit.WalkEdges*
  nameWithType.vb: Toolkit.WalkEdges(Double, Edge, Vector3D, Dictionary(Of Vector3D, List(Of Edge)), Toolkit.WalkEdgeStopConditionDelegate)
  fullName.vb: SearchAThing.Sci.Toolkit.WalkEdges(Double, SearchAThing.Sci.Edge, SearchAThing.Sci.Vector3D, System.Collections.Generic.Dictionary(Of SearchAThing.Sci.Vector3D, System.Collections.Generic.List(Of SearchAThing.Sci.Edge)), SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate)
  name.vb: WalkEdges(Double, Edge, Vector3D, Dictionary(Of Vector3D, List(Of Edge)), WalkEdgeStopConditionDelegate)
- uid: SearchAThing.Sci.Toolkit.LinearSplineInterpolate(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:SearchAThing.Sci.Toolkit.LinearSplineInterpolate(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})
  id: LinearSplineInterpolate(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double})
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: LinearSplineInterpolate(IEnumerable<double>, IEnumerable<double>)
  nameWithType: Toolkit.LinearSplineInterpolate(IEnumerable<double>, IEnumerable<double>)
  fullName: SearchAThing.Sci.Toolkit.LinearSplineInterpolate(System.Collections.Generic.IEnumerable<double>, System.Collections.Generic.IEnumerable<double>)
  type: Method
  source:
    remote:
      path: src/sci/Number.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: LinearSplineInterpolate
    path: src/sci/Number.cs
    startLine: 315
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    (MathNet.Numerics bookmark function)

    "Create a linear spline interpolation from an unsorted set of (x,y) value pairs."

    then invoke Interpolate with x value to retrieve interpolated y value.

    <p>

    For more interpolator see https://numerics.mathdotnet.com/api/MathNet.Numerics.Interpolation/index.htm

    </p>
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Number/NumberTest_0004.cs)'
  example: []
  syntax:
    content: public static IInterpolation LinearSplineInterpolate(IEnumerable<double> x, IEnumerable<double> y)
    parameters:
    - id: x
      type: System.Collections.Generic.IEnumerable{System.Double}
    - id: y
      type: System.Collections.Generic.IEnumerable{System.Double}
    return:
      type: MathNet.Numerics.Interpolation.IInterpolation
    content.vb: Public Shared Function LinearSplineInterpolate(x As IEnumerable(Of Double), y As IEnumerable(Of Double)) As IInterpolation
  overload: SearchAThing.Sci.Toolkit.LinearSplineInterpolate*
  nameWithType.vb: Toolkit.LinearSplineInterpolate(IEnumerable(Of Double), IEnumerable(Of Double))
  fullName.vb: SearchAThing.Sci.Toolkit.LinearSplineInterpolate(System.Collections.Generic.IEnumerable(Of Double), System.Collections.Generic.IEnumerable(Of Double))
  name.vb: LinearSplineInterpolate(IEnumerable(Of Double), IEnumerable(Of Double))
- uid: SearchAThing.Sci.Toolkit.Range(System.Double,System.Double,System.Double,System.Double,System.Boolean)
  commentId: M:SearchAThing.Sci.Toolkit.Range(System.Double,System.Double,System.Double,System.Double,System.Boolean)
  id: Range(System.Double,System.Double,System.Double,System.Double,System.Boolean)
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: Range(double, double, double, double, bool)
  nameWithType: Toolkit.Range(double, double, double, double, bool)
  fullName: SearchAThing.Sci.Toolkit.Range(double, double, double, double, bool)
  type: Method
  source:
    remote:
      path: src/sci/Number.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Range
    path: src/sci/Number.cs
    startLine: 327
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: span a range of doubles from start to end ( optionally included ) stepping with given inc
  example: []
  syntax:
    content: public static IEnumerable<double> Range(double tol, double start, double end, double inc, bool includeEnd = false)
    parameters:
    - id: tol
      type: System.Double
      description: measure tolerance
    - id: start
      type: System.Double
      description: start pos
    - id: end
      type: System.Double
      description: end pos
    - id: inc
      type: System.Double
      description: increment
    - id: includeEnd
      type: System.Boolean
      description: if true end can included in result set
    return:
      type: System.Collections.Generic.IEnumerable{System.Double}
      description: enumeration of discrete range items
    content.vb: Public Shared Function Range(tol As Double, start As Double, [end] As Double, inc As Double, includeEnd As Boolean = False) As IEnumerable(Of Double)
  overload: SearchAThing.Sci.Toolkit.Range*
  nameWithType.vb: Toolkit.Range(Double, Double, Double, Double, Boolean)
  fullName.vb: SearchAThing.Sci.Toolkit.Range(Double, Double, Double, Double, Boolean)
  name.vb: Range(Double, Double, Double, Double, Boolean)
- uid: SearchAThing.Sci.Toolkit.ToSciJson(System.Object)
  commentId: M:SearchAThing.Sci.Toolkit.ToSciJson(System.Object)
  id: ToSciJson(System.Object)
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: ToSciJson(object)
  nameWithType: Toolkit.ToSciJson(object)
  fullName: SearchAThing.Sci.Toolkit.ToSciJson(object)
  type: Method
  source:
    remote:
      path: src/sci/Serialization.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToSciJson
    path: src/sci/Serialization.cs
    startLine: 5
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static string ToSciJson(object o)
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.String
    content.vb: Public Shared Function ToSciJson(o As Object) As String
  overload: SearchAThing.Sci.Toolkit.ToSciJson*
  nameWithType.vb: Toolkit.ToSciJson(Object)
  fullName.vb: SearchAThing.Sci.Toolkit.ToSciJson(Object)
  name.vb: ToSciJson(Object)
- uid: SearchAThing.Sci.Toolkit.SciJsonSettings
  commentId: P:SearchAThing.Sci.Toolkit.SciJsonSettings
  id: SciJsonSettings
  parent: SearchAThing.Sci.Toolkit
  langs:
  - csharp
  - vb
  name: SciJsonSettings
  nameWithType: Toolkit.SciJsonSettings
  fullName: SearchAThing.Sci.Toolkit.SciJsonSettings
  type: Property
  source:
    remote:
      path: src/sci/Serialization.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SciJsonSettings
    path: src/sci/Serialization.cs
    startLine: 7
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static JsonSerializerSettings SciJsonSettings { get; }
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
    content.vb: Public Shared ReadOnly Property SciJsonSettings As JsonSerializerSettings
  overload: SearchAThing.Sci.Toolkit.SciJsonSettings*
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.Toolkit.Circle2D*
  commentId: Overload:SearchAThing.Sci.Toolkit.Circle2D
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_Circle2D_System_Double_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: Circle2D
  nameWithType: Toolkit.Circle2D
  fullName: SearchAThing.Sci.Toolkit.Circle2D
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.Vector3D[]
  isExternal: true
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D[]
  nameWithType: Vector3D[]
  fullName: SearchAThing.Sci.Vector3D[]
  nameWithType.vb: Vector3D()
  fullName.vb: SearchAThing.Sci.Vector3D()
  name.vb: Vector3D()
  spec.csharp:
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: (
  - name: )
- uid: SearchAThing.Sci.Toolkit.CirclesOuterTangent*
  commentId: Overload:SearchAThing.Sci.Toolkit.CirclesOuterTangent
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_CirclesOuterTangent_System_Double_System_Double_System_Double_System_Double_System_Double_System_Double_
  name: CirclesOuterTangent
  nameWithType: Toolkit.CirclesOuterTangent
  fullName: SearchAThing.Sci.Toolkit.CirclesOuterTangent
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(CircleTangentType type, Vector3D pa, Vector3D pb)>
  nameWithType: IEnumerable<(CircleTangentType type, Vector3D pa, Vector3D pb)>
  fullName: System.Collections.Generic.IEnumerable<(SearchAThing.Sci.CircleTangentType type, SearchAThing.Sci.Vector3D pa, SearchAThing.Sci.Vector3D pb)>
  nameWithType.vb: IEnumerable(Of (type As CircleTangentType, pa As Vector3D, pb As Vector3D))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (type As SearchAThing.Sci.CircleTangentType, pa As SearchAThing.Sci.Vector3D, pb As SearchAThing.Sci.Vector3D))
  name.vb: IEnumerable(Of (type As CircleTangentType, pa As Vector3D, pb As Vector3D))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: SearchAThing.Sci.CircleTangentType
    name: CircleTangentType
    href: SearchAThing.Sci.CircleTangentType.html
  - name: " "
  - uid: System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}.type
    name: type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-searchathing.sci.circletangenttype,searchathing.sci.vector3d,searchathing.sci.vector3d-.type
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: " "
  - uid: System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}.pa
    name: pa
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-searchathing.sci.circletangenttype,searchathing.sci.vector3d,searchathing.sci.vector3d-.pa
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: " "
  - uid: System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}.pb
    name: pb
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-searchathing.sci.circletangenttype,searchathing.sci.vector3d,searchathing.sci.vector3d-.pb
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}.type
    name: type
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-searchathing.sci.circletangenttype,searchathing.sci.vector3d,searchathing.sci.vector3d-.type
  - name: " "
  - name: As
  - name: " "
  - uid: SearchAThing.Sci.CircleTangentType
    name: CircleTangentType
    href: SearchAThing.Sci.CircleTangentType.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}.pa
    name: pa
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-searchathing.sci.circletangenttype,searchathing.sci.vector3d,searchathing.sci.vector3d-.pa
  - name: " "
  - name: As
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{SearchAThing.Sci.CircleTangentType,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D}.pb
    name: pb
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-searchathing.sci.circletangenttype,searchathing.sci.vector3d,searchathing.sci.vector3d-.pb
  - name: " "
  - name: As
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func{System.String,System.String}
  commentId: T:System.Func{System.String,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<string, string>
  nameWithType: Func<string, string>
  fullName: System.Func<string, string>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: System.Func(Of String, String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: SearchAThing.Sci.Toolkit.Star*
  commentId: Overload:SearchAThing.Sci.Toolkit.Star
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_Star_SearchAThing_Sci_Vector3D_System_Double_
  name: Star
  nameWithType: Toolkit.Star
  fullName: SearchAThing.Sci.Toolkit.Star
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.Line}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.Line}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Line>
  nameWithType: IEnumerable<Line>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.Line>
  nameWithType.vb: IEnumerable(Of Line)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.Line)
  name.vb: IEnumerable(Of Line)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.Line
    name: Line
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Line
    name: Line
    isExternal: true
  - name: )
- uid: SearchAThing.Sci.Toolkit.Segments*
  commentId: Overload:SearchAThing.Sci.Toolkit.Segments
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_Segments_netDxf_Entities_Face3D_
  name: Segments
  nameWithType: Toolkit.Segments
  fullName: SearchAThing.Sci.Toolkit.Segments
- uid: netDxf.Entities.Face3D
  commentId: T:netDxf.Entities.Face3D
  parent: netDxf.Entities
  isExternal: true
  name: Face3D
  nameWithType: Face3D
  fullName: netDxf.Entities.Face3D
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Line3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Line3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Line3D>
  nameWithType: IEnumerable<Line3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Line3D>
  nameWithType.vb: IEnumerable(Of Line3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Line3D)
  name.vb: IEnumerable(Of Line3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Line3D
    name: Line3D
    href: SearchAThing.Sci.Line3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Line3D
    name: Line3D
    href: SearchAThing.Sci.Line3D.html
  - name: )
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  isExternal: true
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
- uid: SearchAThing.Sci.Toolkit.Cube*
  commentId: Overload:SearchAThing.Sci.Toolkit.Cube
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_Cube_SearchAThing_Sci_Vector3D_System_Double_
  name: Cube
  nameWithType: Toolkit.Cube
  fullName: SearchAThing.Sci.Toolkit.Cube
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.Face3D}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.Face3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Face3D>
  nameWithType: IEnumerable<Face3D>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.Face3D>
  nameWithType.vb: IEnumerable(Of Face3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.Face3D)
  name.vb: IEnumerable(Of Face3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.Face3D
    name: Face3D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Face3D
    name: Face3D
    isExternal: true
  - name: )
- uid: SearchAThing.Sci.Toolkit.Cuboid*
  commentId: Overload:SearchAThing.Sci.Toolkit.Cuboid
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_Cuboid_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: Cuboid
  nameWithType: Toolkit.Cuboid
  fullName: SearchAThing.Sci.Toolkit.Cuboid
- uid: SearchAThing.Sci.Toolkit.Vertexes*
  commentId: Overload:SearchAThing.Sci.Toolkit.Vertexes
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_Vertexes_netDxf_Entities_Face3D_
  name: Vertexes
  nameWithType: Toolkit.Vertexes
  fullName: SearchAThing.Sci.Toolkit.Vertexes
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3D>
  nameWithType: IEnumerable<Vector3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>
  nameWithType.vb: IEnumerable(Of Vector3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D)
  name.vb: IEnumerable(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Toolkit.ToRegion*
  commentId: Overload:SearchAThing.Sci.Toolkit.ToRegion
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_ToRegion_netDxf_Entities_Face3D_System_Double_
  name: ToRegion
  nameWithType: Toolkit.ToRegion
  fullName: SearchAThing.Sci.Toolkit.ToRegion
- uid: SearchAThing.Sci.Plane3DRegion
  commentId: T:SearchAThing.Sci.Plane3DRegion
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Plane3DRegion.html
  name: Plane3DRegion
  nameWithType: Plane3DRegion
  fullName: SearchAThing.Sci.Plane3DRegion
- uid: SearchAThing.Sci.Toolkit.WalkEdges*
  commentId: Overload:SearchAThing.Sci.Toolkit.WalkEdges
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_WalkEdges_System_Double_SearchAThing_Sci_Edge_SearchAThing_Sci_Vector3D_System_Collections_Generic_Dictionary_SearchAThing_Sci_Vector3D_System_Collections_Generic_List_SearchAThing_Sci_Edge___SearchAThing_Sci_Toolkit_WalkEdgeStopConditionDelegate_
  name: WalkEdges
  nameWithType: Toolkit.WalkEdges
  fullName: SearchAThing.Sci.Toolkit.WalkEdges
- uid: SearchAThing.Sci.Edge
  commentId: T:SearchAThing.Sci.Edge
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Edge.html
  name: Edge
  nameWithType: Edge
  fullName: SearchAThing.Sci.Edge
- uid: System.Collections.Generic.Dictionary{SearchAThing.Sci.Vector3D,System.Collections.Generic.List{SearchAThing.Sci.Edge}}
  commentId: T:System.Collections.Generic.Dictionary{SearchAThing.Sci.Vector3D,System.Collections.Generic.List{SearchAThing.Sci.Edge}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Vector3D, List<Edge>>
  nameWithType: Dictionary<Vector3D, List<Edge>>
  fullName: System.Collections.Generic.Dictionary<SearchAThing.Sci.Vector3D, System.Collections.Generic.List<SearchAThing.Sci.Edge>>
  nameWithType.vb: Dictionary(Of Vector3D, List(Of Edge))
  fullName.vb: System.Collections.Generic.Dictionary(Of SearchAThing.Sci.Vector3D, System.Collections.Generic.List(Of SearchAThing.Sci.Edge))
  name.vb: Dictionary(Of Vector3D, List(Of Edge))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
  - name: )
- uid: SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate
  commentId: T:SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Toolkit.html
  name: Toolkit.WalkEdgeStopConditionDelegate
  nameWithType: Toolkit.WalkEdgeStopConditionDelegate
  fullName: SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate
  spec.csharp:
  - uid: SearchAThing.Sci.Toolkit
    name: Toolkit
    href: SearchAThing.Sci.Toolkit.html
  - name: .
  - uid: SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate
    name: WalkEdgeStopConditionDelegate
    href: SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate.html
  spec.vb:
  - uid: SearchAThing.Sci.Toolkit
    name: Toolkit
    href: SearchAThing.Sci.Toolkit.html
  - name: .
  - uid: SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate
    name: WalkEdgeStopConditionDelegate
    href: SearchAThing.Sci.Toolkit.WalkEdgeStopConditionDelegate.html
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Edge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Edge>
  nameWithType: IEnumerable<Edge>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Edge>
  nameWithType.vb: IEnumerable(Of Edge)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Edge)
  name.vb: IEnumerable(Of Edge)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: SearchAThing.Sci.Toolkit.LinearSplineInterpolate*
  commentId: Overload:SearchAThing.Sci.Toolkit.LinearSplineInterpolate
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_LinearSplineInterpolate_System_Collections_Generic_IEnumerable_System_Double__System_Collections_Generic_IEnumerable_System_Double__
  name: LinearSplineInterpolate
  nameWithType: Toolkit.LinearSplineInterpolate
  fullName: SearchAThing.Sci.Toolkit.LinearSplineInterpolate
- uid: System.Collections.Generic.IEnumerable{System.Double}
  commentId: T:System.Collections.Generic.IEnumerable{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<double>
  nameWithType: IEnumerable<double>
  fullName: System.Collections.Generic.IEnumerable<double>
  nameWithType.vb: IEnumerable(Of Double)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Double)
  name.vb: IEnumerable(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: MathNet.Numerics.Interpolation.IInterpolation
  commentId: T:MathNet.Numerics.Interpolation.IInterpolation
  parent: MathNet.Numerics.Interpolation
  isExternal: true
  name: IInterpolation
  nameWithType: IInterpolation
  fullName: MathNet.Numerics.Interpolation.IInterpolation
- uid: MathNet.Numerics.Interpolation
  commentId: N:MathNet.Numerics.Interpolation
  isExternal: true
  name: MathNet.Numerics.Interpolation
  nameWithType: MathNet.Numerics.Interpolation
  fullName: MathNet.Numerics.Interpolation
  spec.csharp:
  - uid: MathNet
    name: MathNet
    isExternal: true
  - name: .
  - uid: MathNet.Numerics
    name: Numerics
    isExternal: true
  - name: .
  - uid: MathNet.Numerics.Interpolation
    name: Interpolation
    isExternal: true
  spec.vb:
  - uid: MathNet
    name: MathNet
    isExternal: true
  - name: .
  - uid: MathNet.Numerics
    name: Numerics
    isExternal: true
  - name: .
  - uid: MathNet.Numerics.Interpolation
    name: Interpolation
    isExternal: true
- uid: SearchAThing.Sci.Toolkit.Range*
  commentId: Overload:SearchAThing.Sci.Toolkit.Range
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_Range_System_Double_System_Double_System_Double_System_Double_System_Boolean_
  name: Range
  nameWithType: Toolkit.Range
  fullName: SearchAThing.Sci.Toolkit.Range
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.Toolkit.ToSciJson*
  commentId: Overload:SearchAThing.Sci.Toolkit.ToSciJson
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_ToSciJson_System_Object_
  name: ToSciJson
  nameWithType: Toolkit.ToSciJson
  fullName: SearchAThing.Sci.Toolkit.ToSciJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SearchAThing.Sci.Toolkit.SciJsonSettings*
  commentId: Overload:SearchAThing.Sci.Toolkit.SciJsonSettings
  href: SearchAThing.Sci.Toolkit.html#SearchAThing_Sci_Toolkit_SciJsonSettings
  name: SciJsonSettings
  nameWithType: Toolkit.SciJsonSettings
  fullName: SearchAThing.Sci.Toolkit.SciJsonSettings
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
