### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Line3D
  commentId: T:SearchAThing.Sci.Line3D
  id: Line3D
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Line3DConstructMode)
  - SearchAThing.Sci.Line3D.#ctor(System.Double,System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Line3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Line3D.A0ProgeCadScript
  - SearchAThing.Sci.Line3D.A0QCadScript
  - SearchAThing.Sci.Line3D.ApparentIntersect(SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.Line3D.BBox(System.Double)
  - SearchAThing.Sci.Line3D.Bisect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.CadScript
  - SearchAThing.Sci.Line3D.Colinear(System.Double,SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.Line3D.CommonPoint(System.Double,SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.Line3D.Copy
  - SearchAThing.Sci.Line3D.Dir
  - SearchAThing.Sci.Line3D.DisambiguatedPoints
  - SearchAThing.Sci.Line3D.Divide(System.Int32,System.Boolean)
  - SearchAThing.Sci.Line3D.DxfEntity
  - SearchAThing.Sci.Line3D.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.EdgeMove(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.EnsureFrom(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.EqualsTol(System.Double,SearchAThing.Sci.Line3D,System.Boolean)
  - SearchAThing.Sci.Line3D.From
  - SearchAThing.Sci.Line3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  - SearchAThing.Sci.Line3D.GeomFrom
  - SearchAThing.Sci.Line3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  - SearchAThing.Sci.Line3D.GeomTo
  - SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  - SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  - SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.LineIntersectBehavior)
  - SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean)
  - SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Plane3D)
  - SearchAThing.Sci.Line3D.Inverted
  - SearchAThing.Sci.Line3D.IsParallelTo(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  - SearchAThing.Sci.Line3D.IsParallelTo(System.Double,SearchAThing.Sci.Plane3D)
  - SearchAThing.Sci.Line3D.Length
  - SearchAThing.Sci.Line3D.LineContainsPoint(System.Double,SearchAThing.Sci.Vector3D,System.Boolean,System.Boolean)
  - SearchAThing.Sci.Line3D.LineContainsPoint(System.Double,System.Double,System.Double,System.Double,System.Boolean)
  - SearchAThing.Sci.Line3D.MidPoint
  - SearchAThing.Sci.Line3D.Move(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.MoveMidpoint(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.Normalized
  - SearchAThing.Sci.Line3D.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Line3D.Perpendicular(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.Points
  - SearchAThing.Sci.Line3D.ProgeCadScript(System.Boolean)
  - SearchAThing.Sci.Line3D.Project(System.Double,SearchAThing.Sci.Plane3D)
  - SearchAThing.Sci.Line3D.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  - SearchAThing.Sci.Line3D.QCadScript(System.Boolean)
  - SearchAThing.Sci.Line3D.Reverse
  - SearchAThing.Sci.Line3D.RotateAboutAxis(SearchAThing.Sci.Line3D,System.Double)
  - SearchAThing.Sci.Line3D.Scale(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Line3D.Scale(System.Double)
  - SearchAThing.Sci.Line3D.SegmentContainsPoint(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  - SearchAThing.Sci.Line3D.SegmentContainsPoint(System.Double,System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Line3D.SemiLineContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.SetLength(System.Double)
  - SearchAThing.Sci.Line3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  - SearchAThing.Sci.Line3D.Swapped
  - SearchAThing.Sci.Line3D.To
  - SearchAThing.Sci.Line3D.ToString
  - SearchAThing.Sci.Line3D.ToString(System.Int32)
  - SearchAThing.Sci.Line3D.ToStringTol(System.Double)
  - SearchAThing.Sci.Line3D.ToggleSense
  - SearchAThing.Sci.Line3D.Transform(System.Numerics.Matrix4x4)
  - SearchAThing.Sci.Line3D.V
  - SearchAThing.Sci.Line3D.Vertexes
  - SearchAThing.Sci.Line3D.XAxisLine
  - SearchAThing.Sci.Line3D.YAxisLine
  - SearchAThing.Sci.Line3D.ZAxisLine
  - SearchAThing.Sci.Line3D.op_Addition(SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Line3D.op_Multiply(SearchAThing.Sci.Line3D,System.Double)
  - SearchAThing.Sci.Line3D.op_Multiply(System.Double,SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.Line3D.op_Subtraction(SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  langs:
  - csharp
  - vb
  name: Line3D
  nameWithType: Line3D
  fullName: SearchAThing.Sci.Line3D
  type: Class
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Line3D
    path: src/sci/Line3D.cs
    startLine: 17
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Defines a line by an application point (From) and an extension from there (V).

    To is computed as From+V.

    Line can be built by givin From and To, or From and V using specialized constructor with Line3DConstructMode.

    Line can be built from a point using LineTo(), LineV() or LineDir() extension methods.
  example: []
  syntax:
    content: 'public class Line3D : Edge'
    content.vb: Public Class Line3D Inherits Edge
  inheritance:
  - System.Object
  - SearchAThing.Sci.Geometry
  - SearchAThing.Sci.Edge
  inheritedMembers:
  - SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
  - SearchAThing.Sci.Edge.Sense
  - SearchAThing.Sci.Edge.SGeomFrom
  - SearchAThing.Sci.Edge.SGeomTo
  - SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
  - SearchAThing.Sci.Geometry.GeomType
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - SearchAThing.Sci.Line3D.SearchAThing.Sci.Ext.ToDxfLine
- uid: SearchAThing.Sci.Line3D.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  id: EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: EdgeContainsPoint(double, Vector3D)
  nameWithType: Line3D.EdgeContainsPoint(double, Vector3D)
  fullName: SearchAThing.Sci.Line3D.EdgeContainsPoint(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EdgeContainsPoint
    path: src/sci/Line3D.cs
    startLine: 24
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: States if edge contains given point on its perimeter
  example: []
  syntax:
    content: public override bool EdgeContainsPoint(double tol, Vector3D pt)
    parameters:
    - id: tol
      type: System.Double
    - id: pt
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Boolean
    content.vb: Public Overrides Function EdgeContainsPoint(tol As Double, pt As Vector3D) As Boolean
  overridden: SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  overload: SearchAThing.Sci.Line3D.EdgeContainsPoint*
  nameWithType.vb: Line3D.EdgeContainsPoint(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.EdgeContainsPoint(Double, SearchAThing.Sci.Vector3D)
  name.vb: EdgeContainsPoint(Double, Vector3D)
- uid: SearchAThing.Sci.Line3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.Line3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  id: Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Split(double, IEnumerable<Vector3D>)
  nameWithType: Line3D.Split(double, IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.Line3D.Split(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Split
    path: src/sci/Line3D.cs
    startLine: 35
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Split current segment into one or more depending on which

    of given split points was found on the segment.
  example: []
  syntax:
    content: public override IEnumerable<Geometry> Split(double tol, IEnumerable<Vector3D> breaks)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: breaks
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: break points
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
      description: splitted segments starts from begin of line
    content.vb: Public Overrides Function Split(tol As Double, breaks As IEnumerable(Of Vector3D)) As IEnumerable(Of Geometry)
  overridden: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  overload: SearchAThing.Sci.Line3D.Split*
  nameWithType.vb: Line3D.Split(Double, IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.Line3D.Split(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: Split(Double, IEnumerable(Of Vector3D))
- uid: SearchAThing.Sci.Line3D.Project(System.Double,SearchAThing.Sci.Plane3D)
  commentId: M:SearchAThing.Sci.Line3D.Project(System.Double,SearchAThing.Sci.Plane3D)
  id: Project(System.Double,SearchAThing.Sci.Plane3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Project(double, Plane3D)
  nameWithType: Line3D.Project(double, Plane3D)
  fullName: SearchAThing.Sci.Line3D.Project(double, SearchAThing.Sci.Plane3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Project
    path: src/sci/Line3D.cs
    startLine: 78
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: project this line to given projection plane
  example: []
  syntax:
    content: public override Edge Project(double tol, Plane3D prjPlane)
    parameters:
    - id: tol
      type: System.Double
    - id: prjPlane
      type: SearchAThing.Sci.Plane3D
    return:
      type: SearchAThing.Sci.Edge
    content.vb: Public Overrides Function Project(tol As Double, prjPlane As Plane3D) As Edge
  overridden: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
  overload: SearchAThing.Sci.Line3D.Project*
  nameWithType.vb: Line3D.Project(Double, Plane3D)
  fullName.vb: SearchAThing.Sci.Line3D.Project(Double, SearchAThing.Sci.Plane3D)
  name.vb: Project(Double, Plane3D)
- uid: SearchAThing.Sci.Line3D.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  id: Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Project(double, Vector3D, bool)
  nameWithType: Line3D.Project(double, Vector3D, bool)
  fullName: SearchAThing.Sci.Line3D.Project(double, SearchAThing.Sci.Vector3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Project
    path: src/sci/Line3D.cs
    startLine: 84
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: project given pt to this line
  example: []
  syntax:
    content: public override Vector3D? Project(double tol, Vector3D pt, bool segment_mode = true)
    parameters:
    - id: tol
      type: System.Double
    - id: pt
      type: SearchAThing.Sci.Vector3D
    - id: segment_mode
      type: System.Boolean
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Overrides Function Project(tol As Double, pt As Vector3D, segment_mode As Boolean = True) As Vector3D
  overridden: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  overload: SearchAThing.Sci.Line3D.Project*
  nameWithType.vb: Line3D.Project(Double, Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.Project(Double, SearchAThing.Sci.Vector3D, Boolean)
  name.vb: Project(Double, Vector3D, Boolean)
- uid: SearchAThing.Sci.Line3D.MidPoint
  commentId: P:SearchAThing.Sci.Line3D.MidPoint
  id: MidPoint
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: MidPoint
  nameWithType: Line3D.MidPoint
  fullName: SearchAThing.Sci.Line3D.MidPoint
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: MidPoint
    path: src/sci/Line3D.cs
    startLine: 93
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override Vector3D MidPoint { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Overrides ReadOnly Property MidPoint As Vector3D
  overridden: SearchAThing.Sci.Geometry.MidPoint
  overload: SearchAThing.Sci.Line3D.MidPoint*
- uid: SearchAThing.Sci.Line3D.EdgeMove(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.EdgeMove(SearchAThing.Sci.Vector3D)
  id: EdgeMove(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: EdgeMove(Vector3D)
  nameWithType: Line3D.EdgeMove(Vector3D)
  fullName: SearchAThing.Sci.Line3D.EdgeMove(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EdgeMove
    path: src/sci/Line3D.cs
    startLine: 95
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Edge EdgeMove(Vector3D delta)
    parameters:
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Edge
    content.vb: Public Function EdgeMove(delta As Vector3D) As Edge
  overload: SearchAThing.Sci.Line3D.EdgeMove*
- uid: SearchAThing.Sci.Line3D.Copy
  commentId: M:SearchAThing.Sci.Line3D.Copy
  id: Copy
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: Line3D.Copy()
  fullName: SearchAThing.Sci.Line3D.Copy()
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Copy
    path: src/sci/Line3D.cs
    startLine: 102
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create copy of this geometry.
  remarks: it's required to call base.CopyFrom(other) to ensure geometry properties to be copied.
  example: []
  syntax:
    content: public override Geometry Copy()
    return:
      type: SearchAThing.Sci.Geometry
    content.vb: Public Overrides Function Copy() As Geometry
  overridden: SearchAThing.Sci.Geometry.Copy
  overload: SearchAThing.Sci.Line3D.Copy*
- uid: SearchAThing.Sci.Line3D.ToggleSense
  commentId: M:SearchAThing.Sci.Line3D.ToggleSense
  id: ToggleSense
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: ToggleSense()
  nameWithType: Line3D.ToggleSense()
  fullName: SearchAThing.Sci.Line3D.ToggleSense()
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToggleSense
    path: src/sci/Line3D.cs
    startLine: 107
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Line3D ToggleSense()
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function ToggleSense() As Line3D
  overload: SearchAThing.Sci.Line3D.ToggleSense*
- uid: SearchAThing.Sci.Line3D.Vertexes
  commentId: P:SearchAThing.Sci.Line3D.Vertexes
  id: Vertexes
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Vertexes
  nameWithType: Line3D.Vertexes
  fullName: SearchAThing.Sci.Line3D.Vertexes
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Vertexes
    path: src/sci/Line3D.cs
    startLine: 109
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: vertexes of this geom ( can be 1 for points, 2 for line/arc/circles )
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public override IEnumerable<Vector3D> Vertexes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: >-
      <JsonIgnore>

      Public Overrides ReadOnly Property Vertexes As IEnumerable(Of Vector3D)
  overridden: SearchAThing.Sci.Geometry.Vertexes
  overload: SearchAThing.Sci.Line3D.Vertexes*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: SearchAThing.Sci.Line3D.GeomFrom
  commentId: P:SearchAThing.Sci.Line3D.GeomFrom
  id: GeomFrom
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: GeomFrom
  nameWithType: Line3D.GeomFrom
  fullName: SearchAThing.Sci.Line3D.GeomFrom
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomFrom
    path: src/sci/Line3D.cs
    startLine: 119
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: start point
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public override Vector3D GeomFrom { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: >-
      <JsonIgnore>

      Public Overrides ReadOnly Property GeomFrom As Vector3D
  overridden: SearchAThing.Sci.Geometry.GeomFrom
  overload: SearchAThing.Sci.Line3D.GeomFrom*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: SearchAThing.Sci.Line3D.GeomTo
  commentId: P:SearchAThing.Sci.Line3D.GeomTo
  id: GeomTo
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: GeomTo
  nameWithType: Line3D.GeomTo
  fullName: SearchAThing.Sci.Line3D.GeomTo
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomTo
    path: src/sci/Line3D.cs
    startLine: 122
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: end point
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public override Vector3D GeomTo { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: >-
      <JsonIgnore>

      Public Overrides ReadOnly Property GeomTo As Vector3D
  overridden: SearchAThing.Sci.Geometry.GeomTo
  overload: SearchAThing.Sci.Line3D.GeomTo*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: SearchAThing.Sci.Line3D.Length
  commentId: P:SearchAThing.Sci.Line3D.Length
  id: Length
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Line3D.Length
  fullName: SearchAThing.Sci.Line3D.Length
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Length
    path: src/sci/Line3D.cs
    startLine: 125
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: geometry length ( 0 for point, line length for lines, perimeter for arc/circles )
  example: []
  syntax:
    content: public override double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overrides ReadOnly Property Length As Double
  overridden: SearchAThing.Sci.Geometry.Length
  overload: SearchAThing.Sci.Line3D.Length*
- uid: SearchAThing.Sci.Line3D.Divide(System.Int32,System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.Divide(System.Int32,System.Boolean)
  id: Divide(System.Int32,System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Divide(int, bool)
  nameWithType: Line3D.Divide(int, bool)
  fullName: SearchAThing.Sci.Line3D.Divide(int, bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Divide
    path: src/sci/Line3D.cs
    startLine: 127
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: find split points for this geometry splitter int cnt parts
  example: []
  syntax:
    content: public override IEnumerable<Vector3D> Divide(int cnt, bool include_endpoints = false)
    parameters:
    - id: cnt
      type: System.Int32
      description: ''
    - id: include_endpoints
      type: System.Boolean
      description: if true GeomFrom and GeomTo will added
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Overrides Function Divide(cnt As Integer, include_endpoints As Boolean = False) As IEnumerable(Of Vector3D)
  overridden: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  overload: SearchAThing.Sci.Line3D.Divide*
  nameWithType.vb: Line3D.Divide(Integer, Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.Divide(Integer, Boolean)
  name.vb: Divide(Integer, Boolean)
- uid: SearchAThing.Sci.Line3D.BBox(System.Double)
  commentId: M:SearchAThing.Sci.Line3D.BBox(System.Double)
  id: BBox(System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: BBox(double)
  nameWithType: Line3D.BBox(double)
  fullName: SearchAThing.Sci.Line3D.BBox(double)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BBox
    path: src/sci/Line3D.cs
    startLine: 142
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: bbox of this geom
  example: []
  syntax:
    content: public override BBox3D BBox(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: SearchAThing.Sci.BBox3D
    content.vb: Public Overrides Function BBox(tol As Double) As BBox3D
  overridden: SearchAThing.Sci.Geometry.BBox(System.Double)
  overload: SearchAThing.Sci.Line3D.BBox*
  nameWithType.vb: Line3D.BBox(Double)
  fullName.vb: SearchAThing.Sci.Line3D.BBox(Double)
  name.vb: BBox(Double)
- uid: SearchAThing.Sci.Line3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  commentId: M:SearchAThing.Sci.Line3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  id: GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  nameWithType: Line3D.GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName: SearchAThing.Sci.Line3D.GeomIntersect(double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomIntersect
    path: src/sci/Line3D.cs
    startLine: 144
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: find intersections between this and another geometry resulting in zero or more geometries.
  example: []
  syntax:
    content: public override IEnumerable<Geometry> GeomIntersect(double tol, Geometry _other, GeomSegmentMode thisSegmentMode = GeomSegmentMode.FromTo, GeomSegmentMode otherSegmentMode = GeomSegmentMode.FromTo)
    parameters:
    - id: tol
      type: System.Double
      description: ''
    - id: _other
      type: SearchAThing.Sci.Geometry
    - id: thisSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
      description: if this is Line3D specifies how to consider
    - id: otherSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
      description: if other is Line3D specifies how to consider
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
      description: ''
    content.vb: Public Overrides Function GeomIntersect(tol As Double, _other As Geometry, thisSegmentMode As GeomSegmentMode = GeomSegmentMode.FromTo, otherSegmentMode As GeomSegmentMode = GeomSegmentMode.FromTo) As IEnumerable(Of Geometry)
  overridden: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  overload: SearchAThing.Sci.Line3D.GeomIntersect*
  nameWithType.vb: Line3D.GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName.vb: SearchAThing.Sci.Line3D.GeomIntersect(Double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  name.vb: GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
- uid: SearchAThing.Sci.Line3D.DxfEntity
  commentId: P:SearchAThing.Sci.Line3D.DxfEntity
  id: DxfEntity
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: DxfEntity
  nameWithType: Line3D.DxfEntity
  fullName: SearchAThing.Sci.Line3D.DxfEntity
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DxfEntity
    path: src/sci/Line3D.cs
    startLine: 230
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: dxf entity representing this geom
  example: []
  syntax:
    content: public override EntityObject DxfEntity { get; }
    parameters: []
    return:
      type: netDxf.Entities.EntityObject
    content.vb: Public Overrides ReadOnly Property DxfEntity As EntityObject
  overridden: SearchAThing.Sci.Geometry.DxfEntity
  overload: SearchAThing.Sci.Line3D.DxfEntity*
- uid: SearchAThing.Sci.Line3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  id: GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: GeomEquals(double, Geometry, bool)
  nameWithType: Line3D.GeomEquals(double, Geometry, bool)
  fullName: SearchAThing.Sci.Line3D.GeomEquals(double, SearchAThing.Sci.Geometry, bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomEquals
    path: src/sci/Line3D.cs
    startLine: 232
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this geom equals to given other
  example: []
  syntax:
    content: public override bool GeomEquals(double tol, Geometry other, bool checkSense = false)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: other
      type: SearchAThing.Sci.Geometry
      description: other geom
    - id: checkSense
      type: System.Boolean
      description: if false two geometry with different sense but same space coverage are considered equals
    return:
      type: System.Boolean
    content.vb: Public Overrides Function GeomEquals(tol As Double, other As Geometry, checkSense As Boolean = False) As Boolean
  overridden: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  overload: SearchAThing.Sci.Line3D.GeomEquals*
  nameWithType.vb: Line3D.GeomEquals(Double, Geometry, Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.GeomEquals(Double, SearchAThing.Sci.Geometry, Boolean)
  name.vb: GeomEquals(Double, Geometry, Boolean)
- uid: SearchAThing.Sci.Line3D.XAxisLine
  commentId: F:SearchAThing.Sci.Line3D.XAxisLine
  id: XAxisLine
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: XAxisLine
  nameWithType: Line3D.XAxisLine
  fullName: SearchAThing.Sci.Line3D.XAxisLine
  type: Field
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: XAxisLine
    path: src/sci/Line3D.cs
    startLine: 254
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static readonly Line3D XAxisLine
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Shared ReadOnly XAxisLine As Line3D
- uid: SearchAThing.Sci.Line3D.YAxisLine
  commentId: F:SearchAThing.Sci.Line3D.YAxisLine
  id: YAxisLine
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: YAxisLine
  nameWithType: Line3D.YAxisLine
  fullName: SearchAThing.Sci.Line3D.YAxisLine
  type: Field
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: YAxisLine
    path: src/sci/Line3D.cs
    startLine: 255
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static readonly Line3D YAxisLine
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Shared ReadOnly YAxisLine As Line3D
- uid: SearchAThing.Sci.Line3D.ZAxisLine
  commentId: F:SearchAThing.Sci.Line3D.ZAxisLine
  id: ZAxisLine
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: ZAxisLine
  nameWithType: Line3D.ZAxisLine
  fullName: SearchAThing.Sci.Line3D.ZAxisLine
  type: Field
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ZAxisLine
    path: src/sci/Line3D.cs
    startLine: 256
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static readonly Line3D ZAxisLine
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Shared ReadOnly ZAxisLine As Line3D
- uid: SearchAThing.Sci.Line3D.From
  commentId: P:SearchAThing.Sci.Line3D.From
  id: From
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: From
  nameWithType: Line3D.From
  fullName: SearchAThing.Sci.Line3D.From
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: From
    path: src/sci/Line3D.cs
    startLine: 261
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: application point vector
  example: []
  syntax:
    content: public Vector3D From { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Property From As Vector3D
  overload: SearchAThing.Sci.Line3D.From*
- uid: SearchAThing.Sci.Line3D.V
  commentId: P:SearchAThing.Sci.Line3D.V
  id: V
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: V
  nameWithType: Line3D.V
  fullName: SearchAThing.Sci.Line3D.V
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: V
    path: src/sci/Line3D.cs
    startLine: 266
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: vector depart at From to identify To
  example: []
  syntax:
    content: public Vector3D V { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Property V As Vector3D
  overload: SearchAThing.Sci.Line3D.V*
- uid: SearchAThing.Sci.Line3D.To
  commentId: P:SearchAThing.Sci.Line3D.To
  id: To
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: To
  nameWithType: Line3D.To
  fullName: SearchAThing.Sci.Line3D.To
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: To
    path: src/sci/Line3D.cs
    startLine: 271
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: From + V
  example: []
  syntax:
    content: public Vector3D To { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property [To] As Vector3D
  overload: SearchAThing.Sci.Line3D.To*
- uid: SearchAThing.Sci.Line3D.Dir
  commentId: P:SearchAThing.Sci.Line3D.Dir
  id: Dir
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Dir
  nameWithType: Line3D.Dir
  fullName: SearchAThing.Sci.Line3D.Dir
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Dir
    path: src/sci/Line3D.cs
    startLine: 276
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: V normalized
  example: []
  syntax:
    content: public Vector3D Dir { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property Dir As Vector3D
  overload: SearchAThing.Sci.Line3D.Dir*
- uid: SearchAThing.Sci.Line3D.DisambiguatedPoints
  commentId: P:SearchAThing.Sci.Line3D.DisambiguatedPoints
  id: DisambiguatedPoints
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: DisambiguatedPoints
  nameWithType: Line3D.DisambiguatedPoints
  fullName: SearchAThing.Sci.Line3D.DisambiguatedPoints
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DisambiguatedPoints
    path: src/sci/Line3D.cs
    startLine: 282
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    retrieve a unique endpoint representation of this line3d segment (regardless its from-to or to-from order)

    such that From.Distance(Vector3D.Zero) less than To.Distance(Vector3D.Zero)
  example: []
  syntax:
    content: public IEnumerable<Vector3D> DisambiguatedPoints { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public ReadOnly Property DisambiguatedPoints As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Line3D.DisambiguatedPoints*
- uid: SearchAThing.Sci.Line3D.Points
  commentId: P:SearchAThing.Sci.Line3D.Points
  id: Points
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Points
  nameWithType: Line3D.Points
  fullName: SearchAThing.Sci.Line3D.Points
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Points
    path: src/sci/Line3D.cs
    startLine: 284
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public IEnumerable<Vector3D> Points { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public ReadOnly Property Points As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Line3D.Points*
- uid: SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Line3D)
  id: '#ctor(SearchAThing.Sci.Line3D)'
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Line3D(Line3D)
  nameWithType: Line3D.Line3D(Line3D)
  fullName: SearchAThing.Sci.Line3D.Line3D(SearchAThing.Sci.Line3D)
  type: Constructor
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Line3D.cs
    startLine: 303
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a copy of given line
  example: []
  syntax:
    content: public Line3D(Line3D l)
    parameters:
    - id: l
      type: SearchAThing.Sci.Line3D
    content.vb: Public Sub New(l As Line3D)
  overload: SearchAThing.Sci.Line3D.#ctor*
  nameWithType.vb: Line3D.New(Line3D)
  fullName.vb: SearchAThing.Sci.Line3D.New(SearchAThing.Sci.Line3D)
  name.vb: New(Line3D)
- uid: SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: '#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)'
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Line3D(Vector3D, Vector3D)
  nameWithType: Line3D.Line3D(Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Line3D.Line3D(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Constructor
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Line3D.cs
    startLine: 314
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build segment
  example: []
  syntax:
    content: public Line3D(Vector3D from, Vector3D to)
    parameters:
    - id: from
      type: SearchAThing.Sci.Vector3D
    - id: to
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Sub New(from As Vector3D, [to] As Vector3D)
  overload: SearchAThing.Sci.Line3D.#ctor*
  nameWithType.vb: Line3D.New(Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.New(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: New(Vector3D, Vector3D)
- uid: SearchAThing.Sci.Line3D.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Line3D.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Line3D(double, double, double, double)
  nameWithType: Line3D.Line3D(double, double, double, double)
  fullName: SearchAThing.Sci.Line3D.Line3D(double, double, double, double)
  type: Constructor
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Line3D.cs
    startLine: 323
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: z=0
  example: []
  syntax:
    content: public Line3D(double x1, double y1, double x2, double y2)
    parameters:
    - id: x1
      type: System.Double
    - id: y1
      type: System.Double
    - id: x2
      type: System.Double
    - id: y2
      type: System.Double
    content.vb: Public Sub New(x1 As Double, y1 As Double, x2 As Double, y2 As Double)
  overload: SearchAThing.Sci.Line3D.#ctor*
  nameWithType.vb: Line3D.New(Double, Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Line3D.New(Double, Double, Double, Double)
  name.vb: New(Double, Double, Double, Double)
- uid: SearchAThing.Sci.Line3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Line3D.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Line3D(double, double, double, double, double, double)
  nameWithType: Line3D.Line3D(double, double, double, double, double, double)
  fullName: SearchAThing.Sci.Line3D.Line3D(double, double, double, double, double, double)
  type: Constructor
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Line3D.cs
    startLine: 329
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Line3D(double x1, double y1, double z1, double x2, double y2, double z2)
    parameters:
    - id: x1
      type: System.Double
    - id: y1
      type: System.Double
    - id: z1
      type: System.Double
    - id: x2
      type: System.Double
    - id: y2
      type: System.Double
    - id: z2
      type: System.Double
    content.vb: Public Sub New(x1 As Double, y1 As Double, z1 As Double, x2 As Double, y2 As Double, z2 As Double)
  overload: SearchAThing.Sci.Line3D.#ctor*
  nameWithType.vb: Line3D.New(Double, Double, Double, Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Line3D.New(Double, Double, Double, Double, Double, Double)
  name.vb: New(Double, Double, Double, Double, Double, Double)
- uid: SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Line3DConstructMode)
  commentId: M:SearchAThing.Sci.Line3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Line3DConstructMode)
  id: '#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Line3DConstructMode)'
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Line3D(Vector3D, Vector3D, Line3DConstructMode)
  nameWithType: Line3D.Line3D(Vector3D, Vector3D, Line3DConstructMode)
  fullName: SearchAThing.Sci.Line3D.Line3D(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Line3DConstructMode)
  type: Constructor
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Line3D.cs
    startLine: 338
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build segment from plus the given vector form to
  example: []
  syntax:
    content: public Line3D(Vector3D from, Vector3D v, Line3DConstructMode mode)
    parameters:
    - id: from
      type: SearchAThing.Sci.Vector3D
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: mode
      type: SearchAThing.Sci.Line3DConstructMode
    content.vb: Public Sub New(from As Vector3D, v As Vector3D, mode As Line3DConstructMode)
  overload: SearchAThing.Sci.Line3D.#ctor*
  nameWithType.vb: Line3D.New(Vector3D, Vector3D, Line3DConstructMode)
  fullName.vb: SearchAThing.Sci.Line3D.New(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Line3DConstructMode)
  name.vb: New(Vector3D, Vector3D, Line3DConstructMode)
- uid: SearchAThing.Sci.Line3D.EqualsTol(System.Double,SearchAThing.Sci.Line3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.EqualsTol(System.Double,SearchAThing.Sci.Line3D,System.Boolean)
  id: EqualsTol(System.Double,SearchAThing.Sci.Line3D,System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: EqualsTol(double, Line3D, bool)
  nameWithType: Line3D.EqualsTol(double, Line3D, bool)
  fullName: SearchAThing.Sci.Line3D.EqualsTol(double, SearchAThing.Sci.Line3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EqualsTol
    path: src/sci/Line3D.cs
    startLine: 350
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Checks if two lines are equals
  example: []
  syntax:
    content: public bool EqualsTol(double tol, Line3D other, bool strict = false)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: other
      type: SearchAThing.Sci.Line3D
      description: other line
    - id: strict
      type: System.Boolean
      description: if false(default) two line equals even with swapped from,to
    return:
      type: System.Boolean
    content.vb: Public Function EqualsTol(tol As Double, other As Line3D, strict As Boolean = False) As Boolean
  overload: SearchAThing.Sci.Line3D.EqualsTol*
  nameWithType.vb: Line3D.EqualsTol(Double, Line3D, Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.EqualsTol(Double, SearchAThing.Sci.Line3D, Boolean)
  name.vb: EqualsTol(Double, Line3D, Boolean)
- uid: SearchAThing.Sci.Line3D.CommonPoint(System.Double,SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Line3D.CommonPoint(System.Double,SearchAThing.Sci.Line3D)
  id: CommonPoint(System.Double,SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: CommonPoint(double, Line3D)
  nameWithType: Line3D.CommonPoint(double, Line3D)
  fullName: SearchAThing.Sci.Line3D.CommonPoint(double, SearchAThing.Sci.Line3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CommonPoint
    path: src/sci/Line3D.cs
    startLine: 364
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: returns the common point from,to between two lines or null if not consecutives
  example: []
  syntax:
    content: public Vector3D? CommonPoint(double tol, Line3D other)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Line3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function CommonPoint(tol As Double, other As Line3D) As Vector3D
  overload: SearchAThing.Sci.Line3D.CommonPoint*
  nameWithType.vb: Line3D.CommonPoint(Double, Line3D)
  fullName.vb: SearchAThing.Sci.Line3D.CommonPoint(Double, SearchAThing.Sci.Line3D)
  name.vb: CommonPoint(Double, Line3D)
- uid: SearchAThing.Sci.Line3D.Reverse
  commentId: M:SearchAThing.Sci.Line3D.Reverse
  id: Reverse
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Reverse()
  nameWithType: Line3D.Reverse()
  fullName: SearchAThing.Sci.Line3D.Reverse()
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Reverse
    path: src/sci/Line3D.cs
    startLine: 375
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return the segment with swapped from,to
  example: []
  syntax:
    content: public Line3D Reverse()
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function Reverse() As Line3D
  overload: SearchAThing.Sci.Line3D.Reverse*
- uid: SearchAThing.Sci.Line3D.Scale(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Line3D.Scale(SearchAThing.Sci.Vector3D,System.Double)
  id: Scale(SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Scale(Vector3D, double)
  nameWithType: Line3D.Scale(Vector3D, double)
  fullName: SearchAThing.Sci.Line3D.Scale(SearchAThing.Sci.Vector3D, double)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Scale
    path: src/sci/Line3D.cs
    startLine: 380
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scale from,to of this line using given refpt and factor
  example: []
  syntax:
    content: public Line3D Scale(Vector3D refpt, double factor)
    parameters:
    - id: refpt
      type: SearchAThing.Sci.Vector3D
    - id: factor
      type: System.Double
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function Scale(refpt As Vector3D, factor As Double) As Line3D
  overload: SearchAThing.Sci.Line3D.Scale*
  nameWithType.vb: Line3D.Scale(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Line3D.Scale(SearchAThing.Sci.Vector3D, Double)
  name.vb: Scale(Vector3D, Double)
- uid: SearchAThing.Sci.Line3D.Scale(System.Double)
  commentId: M:SearchAThing.Sci.Line3D.Scale(System.Double)
  id: Scale(System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Scale(double)
  nameWithType: Line3D.Scale(double)
  fullName: SearchAThing.Sci.Line3D.Scale(double)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Scale
    path: src/sci/Line3D.cs
    startLine: 389
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scale from,to of this line using given factor and assuming refpt = MidPoint
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Line3D/Line3DTest_0001.cs)'
  example: []
  syntax:
    content: public Line3D Scale(double factor)
    parameters:
    - id: factor
      type: System.Double
      description: factor to scale this segment
    return:
      type: SearchAThing.Sci.Line3D
      description: scaled segment
    content.vb: Public Function Scale(factor As Double) As Line3D
  overload: SearchAThing.Sci.Line3D.Scale*
  nameWithType.vb: Line3D.Scale(Double)
  fullName.vb: SearchAThing.Sci.Line3D.Scale(Double)
  name.vb: Scale(Double)
- uid: SearchAThing.Sci.Line3D.op_Multiply(System.Double,SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Line3D.op_Multiply(System.Double,SearchAThing.Sci.Line3D)
  id: op_Multiply(System.Double,SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: operator *(double, Line3D)
  nameWithType: Line3D.operator *(double, Line3D)
  fullName: SearchAThing.Sci.Line3D.operator *(double, SearchAThing.Sci.Line3D)
  type: Operator
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Line3D.cs
    startLine: 396
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    multiply Length by given scalar factor

    Note : this will change To
  example: []
  syntax:
    content: public static Line3D operator *(double s, Line3D l)
    parameters:
    - id: s
      type: System.Double
    - id: l
      type: SearchAThing.Sci.Line3D
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Shared Operator *(s As Double, l As Line3D) As Line3D
  overload: SearchAThing.Sci.Line3D.op_Multiply*
  nameWithType.vb: Line3D.*(Double, Line3D)
  fullName.vb: SearchAThing.Sci.Line3D.*(Double, SearchAThing.Sci.Line3D)
  name.vb: '*(Double, Line3D)'
- uid: SearchAThing.Sci.Line3D.op_Multiply(SearchAThing.Sci.Line3D,System.Double)
  commentId: M:SearchAThing.Sci.Line3D.op_Multiply(SearchAThing.Sci.Line3D,System.Double)
  id: op_Multiply(SearchAThing.Sci.Line3D,System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: operator *(Line3D, double)
  nameWithType: Line3D.operator *(Line3D, double)
  fullName: SearchAThing.Sci.Line3D.operator *(SearchAThing.Sci.Line3D, double)
  type: Operator
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Line3D.cs
    startLine: 403
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    multiply Length by given scalar factor

    Note : this will change To
  example: []
  syntax:
    content: public static Line3D operator *(Line3D l, double s)
    parameters:
    - id: l
      type: SearchAThing.Sci.Line3D
    - id: s
      type: System.Double
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Shared Operator *(l As Line3D, s As Double) As Line3D
  overload: SearchAThing.Sci.Line3D.op_Multiply*
  nameWithType.vb: Line3D.*(Line3D, Double)
  fullName.vb: SearchAThing.Sci.Line3D.*(SearchAThing.Sci.Line3D, Double)
  name.vb: '*(Line3D, Double)'
- uid: SearchAThing.Sci.Line3D.op_Addition(SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.op_Addition(SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  id: op_Addition(SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: operator +(Line3D, Vector3D)
  nameWithType: Line3D.operator +(Line3D, Vector3D)
  fullName: SearchAThing.Sci.Line3D.operator +(SearchAThing.Sci.Line3D, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Addition
    path: src/sci/Line3D.cs
    startLine: 409
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Move this line of given delta adding value either at From, To
  example: []
  syntax:
    content: public static Line3D operator +(Line3D l, Vector3D delta)
    parameters:
    - id: l
      type: SearchAThing.Sci.Line3D
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Shared Operator +(l As Line3D, delta As Vector3D) As Line3D
  overload: SearchAThing.Sci.Line3D.op_Addition*
  nameWithType.vb: Line3D.+(Line3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.+(SearchAThing.Sci.Line3D, SearchAThing.Sci.Vector3D)
  name.vb: +(Line3D, Vector3D)
- uid: SearchAThing.Sci.Line3D.op_Subtraction(SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.op_Subtraction(SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  id: op_Subtraction(SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: operator -(Line3D, Vector3D)
  nameWithType: Line3D.operator -(Line3D, Vector3D)
  fullName: SearchAThing.Sci.Line3D.operator -(SearchAThing.Sci.Line3D, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Subtraction
    path: src/sci/Line3D.cs
    startLine: 415
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Move this line of given delta subtracting value either at From, To
  example: []
  syntax:
    content: public static Line3D operator -(Line3D l, Vector3D delta)
    parameters:
    - id: l
      type: SearchAThing.Sci.Line3D
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Shared Operator -(l As Line3D, delta As Vector3D) As Line3D
  overload: SearchAThing.Sci.Line3D.op_Subtraction*
  nameWithType.vb: Line3D.-(Line3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.-(SearchAThing.Sci.Line3D, SearchAThing.Sci.Vector3D)
  name.vb: -(Line3D, Vector3D)
- uid: SearchAThing.Sci.Line3D.LineContainsPoint(System.Double,System.Double,System.Double,System.Double,System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.LineContainsPoint(System.Double,System.Double,System.Double,System.Double,System.Boolean)
  id: LineContainsPoint(System.Double,System.Double,System.Double,System.Double,System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: LineContainsPoint(double, double, double, double, bool)
  nameWithType: Line3D.LineContainsPoint(double, double, double, double, bool)
  fullName: SearchAThing.Sci.Line3D.LineContainsPoint(double, double, double, double, bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: LineContainsPoint
    path: src/sci/Line3D.cs
    startLine: 425
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Infinite line contains point.

    Note: tol must be Constant.NormalizedLengthTolerance

    if comparing normalized vectors
  example: []
  syntax:
    content: public bool LineContainsPoint(double tol, double x, double y, double z, bool segmentMode = false)
    parameters:
    - id: tol
      type: System.Double
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    - id: segmentMode
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function LineContainsPoint(tol As Double, x As Double, y As Double, z As Double, segmentMode As Boolean = False) As Boolean
  overload: SearchAThing.Sci.Line3D.LineContainsPoint*
  nameWithType.vb: Line3D.LineContainsPoint(Double, Double, Double, Double, Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.LineContainsPoint(Double, Double, Double, Double, Boolean)
  name.vb: LineContainsPoint(Double, Double, Double, Double, Boolean)
- uid: SearchAThing.Sci.Line3D.LineContainsPoint(System.Double,SearchAThing.Sci.Vector3D,System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.LineContainsPoint(System.Double,SearchAThing.Sci.Vector3D,System.Boolean,System.Boolean)
  id: LineContainsPoint(System.Double,SearchAThing.Sci.Vector3D,System.Boolean,System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: LineContainsPoint(double, Vector3D, bool, bool)
  nameWithType: Line3D.LineContainsPoint(double, Vector3D, bool, bool)
  fullName: SearchAThing.Sci.Line3D.LineContainsPoint(double, SearchAThing.Sci.Vector3D, bool, bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: LineContainsPoint
    path: src/sci/Line3D.cs
    startLine: 431
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Infinite line contains point.
  example: []
  syntax:
    content: public bool LineContainsPoint(double tol, Vector3D p, bool segmentMode = false, bool excludeExtreme = false)
    parameters:
    - id: tol
      type: System.Double
    - id: p
      type: SearchAThing.Sci.Vector3D
    - id: segmentMode
      type: System.Boolean
    - id: excludeExtreme
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function LineContainsPoint(tol As Double, p As Vector3D, segmentMode As Boolean = False, excludeExtreme As Boolean = False) As Boolean
  overload: SearchAThing.Sci.Line3D.LineContainsPoint*
  nameWithType.vb: Line3D.LineContainsPoint(Double, Vector3D, Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.LineContainsPoint(Double, SearchAThing.Sci.Vector3D, Boolean, Boolean)
  name.vb: LineContainsPoint(Double, Vector3D, Boolean, Boolean)
- uid: SearchAThing.Sci.Line3D.SegmentContainsPoint(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.SegmentContainsPoint(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  id: SegmentContainsPoint(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: SegmentContainsPoint(double, Vector3D, bool)
  nameWithType: Line3D.SegmentContainsPoint(double, Vector3D, bool)
  fullName: SearchAThing.Sci.Line3D.SegmentContainsPoint(double, SearchAThing.Sci.Vector3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SegmentContainsPoint
    path: src/sci/Line3D.cs
    startLine: 485
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Finite segment contains point.

    Note: tol must be Constant.NormalizedLengthTolerance

    if comparing normalized vectors
  example: []
  syntax:
    content: public bool SegmentContainsPoint(double tol, Vector3D p, bool excludeExtreme = false)
    parameters:
    - id: tol
      type: System.Double
    - id: p
      type: SearchAThing.Sci.Vector3D
    - id: excludeExtreme
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function SegmentContainsPoint(tol As Double, p As Vector3D, excludeExtreme As Boolean = False) As Boolean
  overload: SearchAThing.Sci.Line3D.SegmentContainsPoint*
  nameWithType.vb: Line3D.SegmentContainsPoint(Double, Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.SegmentContainsPoint(Double, SearchAThing.Sci.Vector3D, Boolean)
  name.vb: SegmentContainsPoint(Double, Vector3D, Boolean)
- uid: SearchAThing.Sci.Line3D.SegmentContainsPoint(System.Double,System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Line3D.SegmentContainsPoint(System.Double,System.Double,System.Double,System.Double)
  id: SegmentContainsPoint(System.Double,System.Double,System.Double,System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: SegmentContainsPoint(double, double, double, double)
  nameWithType: Line3D.SegmentContainsPoint(double, double, double, double)
  fullName: SearchAThing.Sci.Line3D.SegmentContainsPoint(double, double, double, double)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SegmentContainsPoint
    path: src/sci/Line3D.cs
    startLine: 493
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Finite segment contains point.

    Note: tol must be Constant.NormalizedLengthTolerance

    if comparing normalized vectors
  example: []
  syntax:
    content: public bool SegmentContainsPoint(double tol, double x, double y, double z)
    parameters:
    - id: tol
      type: System.Double
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    return:
      type: System.Boolean
    content.vb: Public Function SegmentContainsPoint(tol As Double, x As Double, y As Double, z As Double) As Boolean
  overload: SearchAThing.Sci.Line3D.SegmentContainsPoint*
  nameWithType.vb: Line3D.SegmentContainsPoint(Double, Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Line3D.SegmentContainsPoint(Double, Double, Double, Double)
  name.vb: SegmentContainsPoint(Double, Double, Double, Double)
- uid: SearchAThing.Sci.Line3D.SemiLineContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.SemiLineContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  id: SemiLineContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: SemiLineContainsPoint(double, Vector3D)
  nameWithType: Line3D.SemiLineContainsPoint(double, Vector3D)
  fullName: SearchAThing.Sci.Line3D.SemiLineContainsPoint(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SemiLineContainsPoint
    path: src/sci/Line3D.cs
    startLine: 501
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if semiline From-To(inf) contains given point
  example: []
  syntax:
    content: public bool SemiLineContainsPoint(double tol, Vector3D p)
    parameters:
    - id: tol
      type: System.Double
      description: len tolerance
    - id: p
      type: SearchAThing.Sci.Vector3D
      description: point to verify is it on semiline
    return:
      type: System.Boolean
    content.vb: Public Function SemiLineContainsPoint(tol As Double, p As Vector3D) As Boolean
  overload: SearchAThing.Sci.Line3D.SemiLineContainsPoint*
  nameWithType.vb: Line3D.SemiLineContainsPoint(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.SemiLineContainsPoint(Double, SearchAThing.Sci.Vector3D)
  name.vb: SemiLineContainsPoint(Double, Vector3D)
- uid: SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.LineIntersectBehavior)
  commentId: M:SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.LineIntersectBehavior)
  id: Intersect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.LineIntersectBehavior)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Intersect(double, Line3D, LineIntersectBehavior)
  nameWithType: Line3D.Intersect(double, Line3D, LineIntersectBehavior)
  fullName: SearchAThing.Sci.Line3D.Intersect(double, SearchAThing.Sci.Line3D, SearchAThing.Sci.LineIntersectBehavior)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Line3D.cs
    startLine: 510
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Find intersection point between this and other line using given tolerance.

    Returns null if no intersection, otherwise it returns a point on

    the shortest segment ( the one that's perpendicular to either lines )

    based on given behavior ( default midpoint ).
  example: []
  syntax:
    content: public Vector3D? Intersect(double tol, Line3D other, LineIntersectBehavior behavior = LineIntersectBehavior.MidPoint)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Line3D
    - id: behavior
      type: SearchAThing.Sci.LineIntersectBehavior
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Intersect(tol As Double, other As Line3D, behavior As LineIntersectBehavior = LineIntersectBehavior.MidPoint) As Vector3D
  overload: SearchAThing.Sci.Line3D.Intersect*
  nameWithType.vb: Line3D.Intersect(Double, Line3D, LineIntersectBehavior)
  fullName.vb: SearchAThing.Sci.Line3D.Intersect(Double, SearchAThing.Sci.Line3D, SearchAThing.Sci.LineIntersectBehavior)
  name.vb: Intersect(Double, Line3D, LineIntersectBehavior)
- uid: SearchAThing.Sci.Line3D.ApparentIntersect(SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Line3D.ApparentIntersect(SearchAThing.Sci.Line3D)
  id: ApparentIntersect(SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: ApparentIntersect(Line3D)
  nameWithType: Line3D.ApparentIntersect(Line3D)
  fullName: SearchAThing.Sci.Line3D.ApparentIntersect(SearchAThing.Sci.Line3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ApparentIntersect
    path: src/sci/Line3D.cs
    startLine: 541
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Find apparent intersection between this and given other line

    returning (shortest) segment perpendicular to either lines or null if lines parallels.

    This method will used from Intersect to find intersection between lines when

    perpendicular segment length not exceed given length tolerance.
  remarks: >-
    [unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Line3D/Line3DTest_0001.cs)

    ![image](../src/test/Line3D/Line3DTest_0001.png)
  example: []
  syntax:
    content: public Line3D? ApparentIntersect(Line3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.Line3D
      description: other 3d line
    return:
      type: SearchAThing.Sci.Line3D
      description: Perp segment from(on this), to(on other).
    content.vb: Public Function ApparentIntersect(other As Line3D) As Line3D
  overload: SearchAThing.Sci.Line3D.ApparentIntersect*
- uid: SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean)
  id: Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Intersect(double, Line3D, bool, bool)
  nameWithType: Line3D.Intersect(double, Line3D, bool, bool)
  fullName: SearchAThing.Sci.Line3D.Intersect(double, SearchAThing.Sci.Line3D, bool, bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Line3D.cs
    startLine: 646
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Intersects two lines with arbitrary segment mode for each.
  example: []
  syntax:
    content: public Vector3D? Intersect(double tol, Line3D other, bool thisSegment, bool otherSegment)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Line3D
    - id: thisSegment
      type: System.Boolean
    - id: otherSegment
      type: System.Boolean
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Intersect(tol As Double, other As Line3D, thisSegment As Boolean, otherSegment As Boolean) As Vector3D
  overload: SearchAThing.Sci.Line3D.Intersect*
  nameWithType.vb: Line3D.Intersect(Double, Line3D, Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.Intersect(Double, SearchAThing.Sci.Line3D, Boolean, Boolean)
  name.vb: Intersect(Double, Line3D, Boolean, Boolean)
- uid: SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  commentId: M:SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  id: Intersect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Intersect(double, Line3D, GeomSegmentMode, GeomSegmentMode)
  nameWithType: Line3D.Intersect(double, Line3D, GeomSegmentMode, GeomSegmentMode)
  fullName: SearchAThing.Sci.Line3D.Intersect(double, SearchAThing.Sci.Line3D, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Line3D.cs
    startLine: 660
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Intersects two lines with arbitrary segment mode for each.
  example: []
  syntax:
    content: public Vector3D? Intersect(double tol, Line3D other, GeomSegmentMode thisSegmentMode, GeomSegmentMode otherSegmentMode)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Line3D
    - id: thisSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
    - id: otherSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Intersect(tol As Double, other As Line3D, thisSegmentMode As GeomSegmentMode, otherSegmentMode As GeomSegmentMode) As Vector3D
  overload: SearchAThing.Sci.Line3D.Intersect*
  nameWithType.vb: Line3D.Intersect(Double, Line3D, GeomSegmentMode, GeomSegmentMode)
  fullName.vb: SearchAThing.Sci.Line3D.Intersect(Double, SearchAThing.Sci.Line3D, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  name.vb: Intersect(Double, Line3D, GeomSegmentMode, GeomSegmentMode)
- uid: SearchAThing.Sci.Line3D.Perpendicular(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.Perpendicular(System.Double,SearchAThing.Sci.Vector3D)
  id: Perpendicular(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Perpendicular(double, Vector3D)
  nameWithType: Line3D.Perpendicular(double, Vector3D)
  fullName: SearchAThing.Sci.Line3D.Perpendicular(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Perpendicular
    path: src/sci/Line3D.cs
    startLine: 682
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Build a perpendicular vector to this one starting from the given point p.
  example: []
  syntax:
    content: public Line3D? Perpendicular(double tol, Vector3D p)
    parameters:
    - id: tol
      type: System.Double
    - id: p
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function Perpendicular(tol As Double, p As Vector3D) As Line3D
  overload: SearchAThing.Sci.Line3D.Perpendicular*
  nameWithType.vb: Line3D.Perpendicular(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.Perpendicular(Double, SearchAThing.Sci.Vector3D)
  name.vb: Perpendicular(Double, Vector3D)
- uid: SearchAThing.Sci.Line3D.Colinear(System.Double,SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Line3D.Colinear(System.Double,SearchAThing.Sci.Line3D)
  id: Colinear(System.Double,SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Colinear(double, Line3D)
  nameWithType: Line3D.Colinear(double, Line3D)
  fullName: SearchAThing.Sci.Line3D.Colinear(double, SearchAThing.Sci.Line3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Colinear
    path: src/sci/Line3D.cs
    startLine: 691
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public bool Colinear(double tol, Line3D other)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Line3D
    return:
      type: System.Boolean
    content.vb: Public Function Colinear(tol As Double, other As Line3D) As Boolean
  overload: SearchAThing.Sci.Line3D.Colinear*
  nameWithType.vb: Line3D.Colinear(Double, Line3D)
  fullName.vb: SearchAThing.Sci.Line3D.Colinear(Double, SearchAThing.Sci.Line3D)
  name.vb: Colinear(Double, Line3D)
- uid: SearchAThing.Sci.Line3D.IsParallelTo(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  commentId: M:SearchAThing.Sci.Line3D.IsParallelTo(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  id: IsParallelTo(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: IsParallelTo(double, CoordinateSystem3D)
  nameWithType: Line3D.IsParallelTo(double, CoordinateSystem3D)
  fullName: SearchAThing.Sci.Line3D.IsParallelTo(double, SearchAThing.Sci.CoordinateSystem3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: IsParallelTo
    path: src/sci/Line3D.cs
    startLine: 696
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public bool IsParallelTo(double tol, CoordinateSystem3D cs)
    parameters:
    - id: tol
      type: System.Double
    - id: cs
      type: SearchAThing.Sci.CoordinateSystem3D
    return:
      type: System.Boolean
    content.vb: Public Function IsParallelTo(tol As Double, cs As CoordinateSystem3D) As Boolean
  overload: SearchAThing.Sci.Line3D.IsParallelTo*
  nameWithType.vb: Line3D.IsParallelTo(Double, CoordinateSystem3D)
  fullName.vb: SearchAThing.Sci.Line3D.IsParallelTo(Double, SearchAThing.Sci.CoordinateSystem3D)
  name.vb: IsParallelTo(Double, CoordinateSystem3D)
- uid: SearchAThing.Sci.Line3D.IsParallelTo(System.Double,SearchAThing.Sci.Plane3D)
  commentId: M:SearchAThing.Sci.Line3D.IsParallelTo(System.Double,SearchAThing.Sci.Plane3D)
  id: IsParallelTo(System.Double,SearchAThing.Sci.Plane3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: IsParallelTo(double, Plane3D)
  nameWithType: Line3D.IsParallelTo(double, Plane3D)
  fullName: SearchAThing.Sci.Line3D.IsParallelTo(double, SearchAThing.Sci.Plane3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: IsParallelTo
    path: src/sci/Line3D.cs
    startLine: 704
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public bool IsParallelTo(double tol, Plane3D plane)
    parameters:
    - id: tol
      type: System.Double
    - id: plane
      type: SearchAThing.Sci.Plane3D
    return:
      type: System.Boolean
    content.vb: Public Function IsParallelTo(tol As Double, plane As Plane3D) As Boolean
  overload: SearchAThing.Sci.Line3D.IsParallelTo*
  nameWithType.vb: Line3D.IsParallelTo(Double, Plane3D)
  fullName.vb: SearchAThing.Sci.Line3D.IsParallelTo(Double, SearchAThing.Sci.Plane3D)
  name.vb: IsParallelTo(Double, Plane3D)
- uid: SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  commentId: M:SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  id: Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Intersect(double, CoordinateSystem3D)
  nameWithType: Line3D.Intersect(double, CoordinateSystem3D)
  fullName: SearchAThing.Sci.Line3D.Intersect(double, SearchAThing.Sci.CoordinateSystem3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Line3D.cs
    startLine: 710
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    returns null if this line is parallel to the cs xy plane,

    the intersection point otherwise
  example: []
  syntax:
    content: public Vector3D? Intersect(double tol, CoordinateSystem3D cs)
    parameters:
    - id: tol
      type: System.Double
    - id: cs
      type: SearchAThing.Sci.CoordinateSystem3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Intersect(tol As Double, cs As CoordinateSystem3D) As Vector3D
  overload: SearchAThing.Sci.Line3D.Intersect*
  nameWithType.vb: Line3D.Intersect(Double, CoordinateSystem3D)
  fullName.vb: SearchAThing.Sci.Line3D.Intersect(Double, SearchAThing.Sci.CoordinateSystem3D)
  name.vb: Intersect(Double, CoordinateSystem3D)
- uid: SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Plane3D)
  commentId: M:SearchAThing.Sci.Line3D.Intersect(System.Double,SearchAThing.Sci.Plane3D)
  id: Intersect(System.Double,SearchAThing.Sci.Plane3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Intersect(double, Plane3D)
  nameWithType: Line3D.Intersect(double, Plane3D)
  fullName: SearchAThing.Sci.Line3D.Intersect(double, SearchAThing.Sci.Plane3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Line3D.cs
    startLine: 732
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    returns null if this line is parallel to the plane,

    the intersection point otherwise
  example: []
  syntax:
    content: public Vector3D? Intersect(double tol, Plane3D plane)
    parameters:
    - id: tol
      type: System.Double
    - id: plane
      type: SearchAThing.Sci.Plane3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Intersect(tol As Double, plane As Plane3D) As Vector3D
  overload: SearchAThing.Sci.Line3D.Intersect*
  nameWithType.vb: Line3D.Intersect(Double, Plane3D)
  fullName.vb: SearchAThing.Sci.Line3D.Intersect(Double, SearchAThing.Sci.Plane3D)
  name.vb: Intersect(Double, Plane3D)
- uid: SearchAThing.Sci.Line3D.RotateAboutAxis(SearchAThing.Sci.Line3D,System.Double)
  commentId: M:SearchAThing.Sci.Line3D.RotateAboutAxis(SearchAThing.Sci.Line3D,System.Double)
  id: RotateAboutAxis(SearchAThing.Sci.Line3D,System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: RotateAboutAxis(Line3D, double)
  nameWithType: Line3D.RotateAboutAxis(Line3D, double)
  fullName: SearchAThing.Sci.Line3D.RotateAboutAxis(SearchAThing.Sci.Line3D, double)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAboutAxis
    path: src/sci/Line3D.cs
    startLine: 737
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: rotate this segment about given axis
  example: []
  syntax:
    content: public Line3D RotateAboutAxis(Line3D axisSegment, double angleRad)
    parameters:
    - id: axisSegment
      type: SearchAThing.Sci.Line3D
    - id: angleRad
      type: System.Double
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function RotateAboutAxis(axisSegment As Line3D, angleRad As Double) As Line3D
  overload: SearchAThing.Sci.Line3D.RotateAboutAxis*
  nameWithType.vb: Line3D.RotateAboutAxis(Line3D, Double)
  fullName.vb: SearchAThing.Sci.Line3D.RotateAboutAxis(SearchAThing.Sci.Line3D, Double)
  name.vb: RotateAboutAxis(Line3D, Double)
- uid: SearchAThing.Sci.Line3D.SetLength(System.Double)
  commentId: M:SearchAThing.Sci.Line3D.SetLength(System.Double)
  id: SetLength(System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: SetLength(double)
  nameWithType: Line3D.SetLength(double)
  fullName: SearchAThing.Sci.Line3D.SetLength(double)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SetLength
    path: src/sci/Line3D.cs
    startLine: 743
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: resize this segment to a new one with same From
  example: []
  syntax:
    content: public Line3D SetLength(double len)
    parameters:
    - id: len
      type: System.Double
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function SetLength(len As Double) As Line3D
  overload: SearchAThing.Sci.Line3D.SetLength*
  nameWithType.vb: Line3D.SetLength(Double)
  fullName.vb: SearchAThing.Sci.Line3D.SetLength(Double)
  name.vb: SetLength(Double)
- uid: SearchAThing.Sci.Line3D.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.Move(SearchAThing.Sci.Vector3D)
  id: Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Move(Vector3D)
  nameWithType: Line3D.Move(Vector3D)
  fullName: SearchAThing.Sci.Line3D.Move(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Move
    path: src/sci/Line3D.cs
    startLine: 750
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: move this segment of given delta
  example: []
  syntax:
    content: public override Geometry Move(Vector3D delta)
    parameters:
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Geometry
    content.vb: Public Overrides Function Move(delta As Vector3D) As Geometry
  overridden: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  overload: SearchAThing.Sci.Line3D.Move*
- uid: SearchAThing.Sci.Line3D.MoveMidpoint(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.MoveMidpoint(SearchAThing.Sci.Vector3D)
  id: MoveMidpoint(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: MoveMidpoint(Vector3D)
  nameWithType: Line3D.MoveMidpoint(Vector3D)
  fullName: SearchAThing.Sci.Line3D.MoveMidpoint(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: MoveMidpoint
    path: src/sci/Line3D.cs
    startLine: 758
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Move this segment midpoint to the given coord
  example: []
  syntax:
    content: public Line3D MoveMidpoint(Vector3D newMidpoint)
    parameters:
    - id: newMidpoint
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function MoveMidpoint(newMidpoint As Vector3D) As Line3D
  overload: SearchAThing.Sci.Line3D.MoveMidpoint*
- uid: SearchAThing.Sci.Line3D.EnsureFrom(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.EnsureFrom(System.Double,SearchAThing.Sci.Vector3D)
  id: EnsureFrom(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: EnsureFrom(double, Vector3D)
  nameWithType: Line3D.EnsureFrom(double, Vector3D)
  fullName: SearchAThing.Sci.Line3D.EnsureFrom(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EnsureFrom
    path: src/sci/Line3D.cs
    startLine: 771
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    if this segment from matches the given point returns this;

    if this segment to matches the given point return this with from,to swapped;

    precondition: this segment must have from or to equals given from
  example: []
  syntax:
    content: public Line3D EnsureFrom(double tol, Vector3D ptFromDesired)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: ptFromDesired
      type: SearchAThing.Sci.Vector3D
      description: ''
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function EnsureFrom(tol As Double, ptFromDesired As Vector3D) As Line3D
  overload: SearchAThing.Sci.Line3D.EnsureFrom*
  nameWithType.vb: Line3D.EnsureFrom(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.EnsureFrom(Double, SearchAThing.Sci.Vector3D)
  name.vb: EnsureFrom(Double, Vector3D)
- uid: SearchAThing.Sci.Line3D.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Line3D.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  id: Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Offset(double, Vector3D, double)
  nameWithType: Line3D.Offset(double, Vector3D, double)
  fullName: SearchAThing.Sci.Line3D.Offset(double, SearchAThing.Sci.Vector3D, double)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Offset
    path: src/sci/Line3D.cs
    startLine: 782
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create offseted line toward refPt for given offset
  example: []
  syntax:
    content: public override Edge Offset(double tol, Vector3D refPt, double offset)
    parameters:
    - id: tol
      type: System.Double
    - id: refPt
      type: SearchAThing.Sci.Vector3D
    - id: offset
      type: System.Double
    return:
      type: SearchAThing.Sci.Edge
    content.vb: Public Overrides Function Offset(tol As Double, refPt As Vector3D, offset As Double) As Edge
  overridden: SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  overload: SearchAThing.Sci.Line3D.Offset*
  nameWithType.vb: Line3D.Offset(Double, Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Line3D.Offset(Double, SearchAThing.Sci.Vector3D, Double)
  name.vb: Offset(Double, Vector3D, Double)
- uid: SearchAThing.Sci.Line3D.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  id: MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: MoveEnd(double, EdgeEnd, Vector3D)
  nameWithType: Line3D.MoveEnd(double, EdgeEnd, Vector3D)
  fullName: SearchAThing.Sci.Line3D.MoveEnd(double, SearchAThing.Sci.EdgeEnd, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: MoveEnd
    path: src/sci/Line3D.cs
    startLine: 798
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    extends edge endpoint toward new given one.        

    returns null if edge can't extends toward new given end.
  example: []
  syntax:
    content: public override Edge? MoveEnd(double tol, EdgeEnd end, Vector3D newEnd)
    parameters:
    - id: tol
      type: System.Double
    - id: end
      type: SearchAThing.Sci.EdgeEnd
    - id: newEnd
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Edge
    content.vb: Public Overrides Function MoveEnd(tol As Double, [end] As EdgeEnd, newEnd As Vector3D) As Edge
  overridden: SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  overload: SearchAThing.Sci.Line3D.MoveEnd*
  nameWithType.vb: Line3D.MoveEnd(Double, EdgeEnd, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.MoveEnd(Double, SearchAThing.Sci.EdgeEnd, SearchAThing.Sci.Vector3D)
  name.vb: MoveEnd(Double, EdgeEnd, Vector3D)
- uid: SearchAThing.Sci.Line3D.CadScript
  commentId: P:SearchAThing.Sci.Line3D.CadScript
  id: CadScript
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: CadScript
  nameWithType: Line3D.CadScript
  fullName: SearchAThing.Sci.Line3D.CadScript
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CadScript
    path: src/sci/Line3D.cs
    startLine: 828
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string CadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CadScript As String
  overload: SearchAThing.Sci.Line3D.CadScript*
- uid: SearchAThing.Sci.Line3D.QCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.QCadScript(System.Boolean)
  id: QCadScript(System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: QCadScript(bool)
  nameWithType: Line3D.QCadScript(bool)
  fullName: SearchAThing.Sci.Line3D.QCadScript(bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: QCadScript
    path: src/sci/Line3D.cs
    startLine: 834
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: 2d qcad script representation ( vscode watch using var,nq )
  example: []
  syntax:
    content: public override string QCadScript(bool final = true)
    parameters:
    - id: final
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Overrides Function QCadScript(final As Boolean = True) As String
  overridden: SearchAThing.Sci.Edge.QCadScript(System.Boolean)
  overload: SearchAThing.Sci.Line3D.QCadScript*
  nameWithType.vb: Line3D.QCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.QCadScript(Boolean)
  name.vb: QCadScript(Boolean)
- uid: SearchAThing.Sci.Line3D.ProgeCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Line3D.ProgeCadScript(System.Boolean)
  id: ProgeCadScript(System.Boolean)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: ProgeCadScript(bool)
  nameWithType: Line3D.ProgeCadScript(bool)
  fullName: SearchAThing.Sci.Line3D.ProgeCadScript(bool)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ProgeCadScript
    path: src/sci/Line3D.cs
    startLine: 837
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override string ProgeCadScript(bool final = true)
    parameters:
    - id: final
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Overrides Function ProgeCadScript(final As Boolean = True) As String
  overridden: SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
  overload: SearchAThing.Sci.Line3D.ProgeCadScript*
  nameWithType.vb: Line3D.ProgeCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Line3D.ProgeCadScript(Boolean)
  name.vb: ProgeCadScript(Boolean)
- uid: SearchAThing.Sci.Line3D.A0QCadScript
  commentId: P:SearchAThing.Sci.Line3D.A0QCadScript
  id: A0QCadScript
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: A0QCadScript
  nameWithType: Line3D.A0QCadScript
  fullName: SearchAThing.Sci.Line3D.A0QCadScript
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: A0QCadScript
    path: src/sci/Line3D.cs
    startLine: 840
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string A0QCadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property A0QCadScript As String
  overload: SearchAThing.Sci.Line3D.A0QCadScript*
- uid: SearchAThing.Sci.Line3D.A0ProgeCadScript
  commentId: P:SearchAThing.Sci.Line3D.A0ProgeCadScript
  id: A0ProgeCadScript
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: A0ProgeCadScript
  nameWithType: Line3D.A0ProgeCadScript
  fullName: SearchAThing.Sci.Line3D.A0ProgeCadScript
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: A0ProgeCadScript
    path: src/sci/Line3D.cs
    startLine: 842
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string A0ProgeCadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property A0ProgeCadScript As String
  overload: SearchAThing.Sci.Line3D.A0ProgeCadScript*
- uid: SearchAThing.Sci.Line3D.ToStringTol(System.Double)
  commentId: M:SearchAThing.Sci.Line3D.ToStringTol(System.Double)
  id: ToStringTol(System.Double)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: ToStringTol(double)
  nameWithType: Line3D.ToStringTol(double)
  fullName: SearchAThing.Sci.Line3D.ToStringTol(double)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToStringTol
    path: src/sci/Line3D.cs
    startLine: 847
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: hash string with given tolerance
  example: []
  syntax:
    content: public string ToStringTol(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: System.String
    content.vb: Public Function ToStringTol(tol As Double) As String
  overload: SearchAThing.Sci.Line3D.ToStringTol*
  nameWithType.vb: Line3D.ToStringTol(Double)
  fullName.vb: SearchAThing.Sci.Line3D.ToStringTol(Double)
  name.vb: ToStringTol(Double)
- uid: SearchAThing.Sci.Line3D.ToString
  commentId: M:SearchAThing.Sci.Line3D.ToString
  id: ToString
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Line3D.ToString()
  fullName: SearchAThing.Sci.Line3D.ToString()
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Line3D.cs
    startLine: 867
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    build an invariant string representation w/3 digits

    (f.x, f.y, f.z)-(t.x, t.y, t.z) L=len Δ=(v.x, v.y, v.z)
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SearchAThing.Sci.Line3D.ToString*
- uid: SearchAThing.Sci.Line3D.ToString(System.Int32)
  commentId: M:SearchAThing.Sci.Line3D.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: ToString(int)
  nameWithType: Line3D.ToString(int)
  fullName: SearchAThing.Sci.Line3D.ToString(int)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Line3D.cs
    startLine: 873
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    build an invariant string representation w/given digits

    (f.x, f.y, f.z)-(t.x, t.y, t.z) L=len Δ=(v.x, v.y, v.z)
  example: []
  syntax:
    content: public override string ToString(int digits = 3)
    parameters:
    - id: digits
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Overrides Function ToString(digits As Integer = 3) As String
  overridden: SearchAThing.Sci.Edge.ToString(System.Int32)
  overload: SearchAThing.Sci.Line3D.ToString*
  nameWithType.vb: Line3D.ToString(Integer)
  fullName.vb: SearchAThing.Sci.Line3D.ToString(Integer)
  name.vb: ToString(Integer)
- uid: SearchAThing.Sci.Line3D.Normalized
  commentId: M:SearchAThing.Sci.Line3D.Normalized
  id: Normalized
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Normalized()
  nameWithType: Line3D.Normalized()
  fullName: SearchAThing.Sci.Line3D.Normalized()
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Normalized
    path: src/sci/Line3D.cs
    startLine: 879
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a segment with same from and vector normalized
  example: []
  syntax:
    content: public Line3D Normalized()
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function Normalized() As Line3D
  overload: SearchAThing.Sci.Line3D.Normalized*
- uid: SearchAThing.Sci.Line3D.Swapped
  commentId: P:SearchAThing.Sci.Line3D.Swapped
  id: Swapped
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Swapped
  nameWithType: Line3D.Swapped
  fullName: SearchAThing.Sci.Line3D.Swapped
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Swapped
    path: src/sci/Line3D.cs
    startLine: 884
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return segment with swapped from,to
  example: []
  syntax:
    content: public Line3D Swapped { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public ReadOnly Property Swapped As Line3D
  overload: SearchAThing.Sci.Line3D.Swapped*
- uid: SearchAThing.Sci.Line3D.Inverted
  commentId: P:SearchAThing.Sci.Line3D.Inverted
  id: Inverted
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Inverted
  nameWithType: Line3D.Inverted
  fullName: SearchAThing.Sci.Line3D.Inverted
  type: Property
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Inverted
    path: src/sci/Line3D.cs
    startLine: 889
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return inverted segment
  example: []
  syntax:
    content: public Line3D Inverted { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public ReadOnly Property Inverted As Line3D
  overload: SearchAThing.Sci.Line3D.Inverted*
- uid: SearchAThing.Sci.Line3D.Bisect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Line3D.Bisect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  id: Bisect(System.Double,SearchAThing.Sci.Line3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Bisect(double, Line3D, Vector3D?)
  nameWithType: Line3D.Bisect(double, Line3D, Vector3D?)
  fullName: SearchAThing.Sci.Line3D.Bisect(double, SearchAThing.Sci.Line3D, SearchAThing.Sci.Vector3D?)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Bisect
    path: src/sci/Line3D.cs
    startLine: 902
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    returns bisect of two given segment/lines

    ( if given segment not share nodes but intesects returned bisect start from ip )

    bisect choosen will be the one between this and other withing shortest angle


    if two given lines are parallel and parallelRotationAxis is given then

    bisect results as this segment rotated PI/2 about given axis using To as rotcenter
  example: []
  syntax:
    content: public Line3D? Bisect(double tol, Line3D other, Vector3D? parallelRotationAxis = null)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: other
      type: SearchAThing.Sci.Line3D
      description: ''
    - id: parallelRotationAxis
      type: SearchAThing.Sci.Vector3D
      description: ''
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function Bisect(tol As Double, other As Line3D, parallelRotationAxis As Vector3D = Nothing) As Line3D
  overload: SearchAThing.Sci.Line3D.Bisect*
  nameWithType.vb: Line3D.Bisect(Double, Line3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Line3D.Bisect(Double, SearchAThing.Sci.Line3D, SearchAThing.Sci.Vector3D)
  name.vb: Bisect(Double, Line3D, Vector3D)
- uid: SearchAThing.Sci.Line3D.Transform(System.Numerics.Matrix4x4)
  commentId: M:SearchAThing.Sci.Line3D.Transform(System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Matrix4x4)
  parent: SearchAThing.Sci.Line3D
  langs:
  - csharp
  - vb
  name: Transform(Matrix4x4)
  nameWithType: Line3D.Transform(Matrix4x4)
  fullName: SearchAThing.Sci.Line3D.Transform(System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/sci/Line3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Transform
    path: src/sci/Line3D.cs
    startLine: 927
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Line3D Transform(Matrix4x4 transform)
    parameters:
    - id: transform
      type: System.Numerics.Matrix4x4
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function Transform(transform As Matrix4x4) As Line3D
  overload: SearchAThing.Sci.Line3D.Transform*
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SearchAThing.Sci.Geometry
  commentId: T:SearchAThing.Sci.Geometry
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Geometry.html
  name: Geometry
  nameWithType: Geometry
  fullName: SearchAThing.Sci.Geometry
- uid: SearchAThing.Sci.Edge
  commentId: T:SearchAThing.Sci.Edge
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Edge.html
  name: Edge
  nameWithType: Edge
  fullName: SearchAThing.Sci.Edge
- uid: SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
  commentId: M:SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
  parent: SearchAThing.Sci.Edge
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CopyFrom_SearchAThing_Sci_Edge_
  name: CopyFrom(Edge)
  nameWithType: Edge.CopyFrom(Edge)
  fullName: SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
    name: CopyFrom
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CopyFrom_SearchAThing_Sci_Edge_
  - name: (
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
    name: CopyFrom
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CopyFrom_SearchAThing_Sci_Edge_
  - name: (
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
- uid: SearchAThing.Sci.Edge.Sense
  commentId: P:SearchAThing.Sci.Edge.Sense
  parent: SearchAThing.Sci.Edge
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Sense
  name: Sense
  nameWithType: Edge.Sense
  fullName: SearchAThing.Sci.Edge.Sense
- uid: SearchAThing.Sci.Edge.SGeomFrom
  commentId: P:SearchAThing.Sci.Edge.SGeomFrom
  parent: SearchAThing.Sci.Edge
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_SGeomFrom
  name: SGeomFrom
  nameWithType: Edge.SGeomFrom
  fullName: SearchAThing.Sci.Edge.SGeomFrom
- uid: SearchAThing.Sci.Edge.SGeomTo
  commentId: P:SearchAThing.Sci.Edge.SGeomTo
  parent: SearchAThing.Sci.Edge
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_SGeomTo
  name: SGeomTo
  nameWithType: Edge.SGeomTo
  fullName: SearchAThing.Sci.Edge.SGeomTo
- uid: SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_OtherEndpoint_System_Double_SearchAThing_Sci_Vector3D_
  name: OtherEndpoint(double, Vector3D)
  nameWithType: Edge.OtherEndpoint(double, Vector3D)
  fullName: SearchAThing.Sci.Edge.OtherEndpoint(double, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.OtherEndpoint(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.OtherEndpoint(Double, SearchAThing.Sci.Vector3D)
  name.vb: OtherEndpoint(Double, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
    name: OtherEndpoint
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_OtherEndpoint_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
    name: OtherEndpoint
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_OtherEndpoint_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: EndpointMatches(double, Vector3D, Vector3D)
  nameWithType: Edge.EndpointMatches(double, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Edge.EndpointMatches(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.EndpointMatches(Double, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.EndpointMatches(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: EndpointMatches(Double, Vector3D, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
    name: EndpointMatches
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
    name: EndpointMatches
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_
  name: EndpointMatches(double, Vector3D)
  nameWithType: Edge.EndpointMatches(double, Vector3D)
  fullName: SearchAThing.Sci.Edge.EndpointMatches(double, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.EndpointMatches(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.EndpointMatches(Double, SearchAThing.Sci.Vector3D)
  name.vb: EndpointMatches(Double, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
    name: EndpointMatches
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
    name: EndpointMatches
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
  commentId: M:SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CheckSense_System_Double_SearchAThing_Sci_Edge_
  name: CheckSense(double, Edge)
  nameWithType: Edge.CheckSense(double, Edge)
  fullName: SearchAThing.Sci.Edge.CheckSense(double, SearchAThing.Sci.Edge)
  nameWithType.vb: Edge.CheckSense(Double, Edge)
  fullName.vb: SearchAThing.Sci.Edge.CheckSense(Double, SearchAThing.Sci.Edge)
  name.vb: CheckSense(Double, Edge)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
    name: CheckSense
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CheckSense_System_Double_SearchAThing_Sci_Edge_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
    name: CheckSense
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CheckSense_System_Double_SearchAThing_Sci_Edge_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
- uid: SearchAThing.Sci.Geometry.GeomType
  commentId: P:SearchAThing.Sci.Geometry.GeomType
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomType
  name: GeomType
  nameWithType: Geometry.GeomType
  fullName: SearchAThing.Sci.Geometry.GeomType
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SearchAThing.Sci.Line3D.SearchAThing.Sci.Ext.ToDxfLine
  commentId: M:SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.Ext
  definition: SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
  href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToDxfLine_SearchAThing_Sci_Line3D_
  name: ToDxfLine(Line3D)
  nameWithType: Ext.ToDxfLine(Line3D)
  fullName: SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
    name: ToDxfLine
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToDxfLine_SearchAThing_Sci_Line3D_
  - name: (
  - uid: SearchAThing.Sci.Line3D
    name: Line3D
    href: SearchAThing.Sci.Line3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
    name: ToDxfLine
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToDxfLine_SearchAThing_Sci_Line3D_
  - name: (
  - uid: SearchAThing.Sci.Line3D
    name: Line3D
    href: SearchAThing.Sci.Line3D.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
  href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToDxfLine_SearchAThing_Sci_Line3D_
  name: ToDxfLine(Line3D)
  nameWithType: Ext.ToDxfLine(Line3D)
  fullName: SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
    name: ToDxfLine
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToDxfLine_SearchAThing_Sci_Line3D_
  - name: (
  - uid: SearchAThing.Sci.Line3D
    name: Line3D
    href: SearchAThing.Sci.Line3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Ext.ToDxfLine(SearchAThing.Sci.Line3D)
    name: ToDxfLine
    href: SearchAThing.Sci.Ext.html#SearchAThing_Sci_Ext_ToDxfLine_SearchAThing_Sci_Line3D_
  - name: (
  - uid: SearchAThing.Sci.Line3D
    name: Line3D
    href: SearchAThing.Sci.Line3D.html
  - name: )
- uid: SearchAThing.Sci.Ext
  commentId: T:SearchAThing.Sci.Ext
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Ext.html
  name: Ext
  nameWithType: Ext
  fullName: SearchAThing.Sci.Ext
- uid: SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EdgeContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  name: EdgeContainsPoint(double, Vector3D)
  nameWithType: Edge.EdgeContainsPoint(double, Vector3D)
  fullName: SearchAThing.Sci.Edge.EdgeContainsPoint(double, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.EdgeContainsPoint(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.EdgeContainsPoint(Double, SearchAThing.Sci.Vector3D)
  name.vb: EdgeContainsPoint(Double, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
    name: EdgeContainsPoint
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EdgeContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
    name: EdgeContainsPoint
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EdgeContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Line3D.EdgeContainsPoint*
  commentId: Overload:SearchAThing.Sci.Line3D.EdgeContainsPoint
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_EdgeContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  name: EdgeContainsPoint
  nameWithType: Line3D.EdgeContainsPoint
  fullName: SearchAThing.Sci.Line3D.EdgeContainsPoint
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  name: Split(double, IEnumerable<Vector3D>)
  nameWithType: Geometry.Split(double, IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.Geometry.Split(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  nameWithType.vb: Geometry.Split(Double, IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.Geometry.Split(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: Split(Double, IEnumerable(Of Vector3D))
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
    name: Split
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
    name: Split
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  - name: )
- uid: SearchAThing.Sci.Line3D.Split*
  commentId: Overload:SearchAThing.Sci.Line3D.Split
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  name: Split
  nameWithType: Line3D.Split
  fullName: SearchAThing.Sci.Line3D.Split
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3D>
  nameWithType: IEnumerable<Vector3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>
  nameWithType.vb: IEnumerable(Of Vector3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D)
  name.vb: IEnumerable(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Geometry>
  nameWithType: IEnumerable<Geometry>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Geometry>
  nameWithType.vb: IEnumerable(Of Geometry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Geometry)
  name.vb: IEnumerable(Of Geometry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
  commentId: M:SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Plane3D_
  name: Project(double, Plane3D)
  nameWithType: Edge.Project(double, Plane3D)
  fullName: SearchAThing.Sci.Edge.Project(double, SearchAThing.Sci.Plane3D)
  nameWithType.vb: Edge.Project(Double, Plane3D)
  fullName.vb: SearchAThing.Sci.Edge.Project(Double, SearchAThing.Sci.Plane3D)
  name.vb: Project(Double, Plane3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
    name: Project
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Plane3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Plane3D
    name: Plane3D
    href: SearchAThing.Sci.Plane3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
    name: Project
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Plane3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Plane3D
    name: Plane3D
    href: SearchAThing.Sci.Plane3D.html
  - name: )
- uid: SearchAThing.Sci.Line3D.Project*
  commentId: Overload:SearchAThing.Sci.Line3D.Project
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Project_System_Double_SearchAThing_Sci_Plane3D_
  name: Project
  nameWithType: Line3D.Project
  fullName: SearchAThing.Sci.Line3D.Project
- uid: SearchAThing.Sci.Plane3D
  commentId: T:SearchAThing.Sci.Plane3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Plane3D.html
  name: Plane3D
  nameWithType: Plane3D
  fullName: SearchAThing.Sci.Plane3D
- uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_
  name: Project(double, Vector3D, bool)
  nameWithType: Edge.Project(double, Vector3D, bool)
  fullName: SearchAThing.Sci.Edge.Project(double, SearchAThing.Sci.Vector3D, bool)
  nameWithType.vb: Edge.Project(Double, Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.Edge.Project(Double, SearchAThing.Sci.Vector3D, Boolean)
  name.vb: Project(Double, Vector3D, Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
    name: Project
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
    name: Project
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Geometry.MidPoint
  commentId: P:SearchAThing.Sci.Geometry.MidPoint
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_MidPoint
  name: MidPoint
  nameWithType: Geometry.MidPoint
  fullName: SearchAThing.Sci.Geometry.MidPoint
- uid: SearchAThing.Sci.Line3D.MidPoint*
  commentId: Overload:SearchAThing.Sci.Line3D.MidPoint
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_MidPoint
  name: MidPoint
  nameWithType: Line3D.MidPoint
  fullName: SearchAThing.Sci.Line3D.MidPoint
- uid: SearchAThing.Sci.Line3D.EdgeMove*
  commentId: Overload:SearchAThing.Sci.Line3D.EdgeMove
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_EdgeMove_SearchAThing_Sci_Vector3D_
  name: EdgeMove
  nameWithType: Line3D.EdgeMove
  fullName: SearchAThing.Sci.Line3D.EdgeMove
- uid: SearchAThing.Sci.Geometry.Copy
  commentId: M:SearchAThing.Sci.Geometry.Copy
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  name: Copy()
  nameWithType: Geometry.Copy()
  fullName: SearchAThing.Sci.Geometry.Copy()
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Copy
    name: Copy
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  - name: (
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Copy
    name: Copy
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  - name: (
  - name: )
- uid: SearchAThing.Sci.Line3D.Copy*
  commentId: Overload:SearchAThing.Sci.Line3D.Copy
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Copy
  name: Copy
  nameWithType: Line3D.Copy
  fullName: SearchAThing.Sci.Line3D.Copy
- uid: SearchAThing.Sci.Line3D.ToggleSense*
  commentId: Overload:SearchAThing.Sci.Line3D.ToggleSense
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_ToggleSense
  name: ToggleSense
  nameWithType: Line3D.ToggleSense
  fullName: SearchAThing.Sci.Line3D.ToggleSense
- uid: SearchAThing.Sci.Line3D
  commentId: T:SearchAThing.Sci.Line3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Line3D.html
  name: Line3D
  nameWithType: Line3D
  fullName: SearchAThing.Sci.Line3D
- uid: SearchAThing.Sci.Geometry.Vertexes
  commentId: P:SearchAThing.Sci.Geometry.Vertexes
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Vertexes
  name: Vertexes
  nameWithType: Geometry.Vertexes
  fullName: SearchAThing.Sci.Geometry.Vertexes
- uid: SearchAThing.Sci.Line3D.Vertexes*
  commentId: Overload:SearchAThing.Sci.Line3D.Vertexes
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Vertexes
  name: Vertexes
  nameWithType: Line3D.Vertexes
  fullName: SearchAThing.Sci.Line3D.Vertexes
- uid: SearchAThing.Sci.Geometry.GeomFrom
  commentId: P:SearchAThing.Sci.Geometry.GeomFrom
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomFrom
  name: GeomFrom
  nameWithType: Geometry.GeomFrom
  fullName: SearchAThing.Sci.Geometry.GeomFrom
- uid: SearchAThing.Sci.Line3D.GeomFrom*
  commentId: Overload:SearchAThing.Sci.Line3D.GeomFrom
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_GeomFrom
  name: GeomFrom
  nameWithType: Line3D.GeomFrom
  fullName: SearchAThing.Sci.Line3D.GeomFrom
- uid: SearchAThing.Sci.Geometry.GeomTo
  commentId: P:SearchAThing.Sci.Geometry.GeomTo
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomTo
  name: GeomTo
  nameWithType: Geometry.GeomTo
  fullName: SearchAThing.Sci.Geometry.GeomTo
- uid: SearchAThing.Sci.Line3D.GeomTo*
  commentId: Overload:SearchAThing.Sci.Line3D.GeomTo
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_GeomTo
  name: GeomTo
  nameWithType: Line3D.GeomTo
  fullName: SearchAThing.Sci.Line3D.GeomTo
- uid: SearchAThing.Sci.Geometry.Length
  commentId: P:SearchAThing.Sci.Geometry.Length
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Length
  name: Length
  nameWithType: Geometry.Length
  fullName: SearchAThing.Sci.Geometry.Length
- uid: SearchAThing.Sci.Line3D.Length*
  commentId: Overload:SearchAThing.Sci.Line3D.Length
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Length
  name: Length
  nameWithType: Line3D.Length
  fullName: SearchAThing.Sci.Line3D.Length
- uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  commentId: M:SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  name: Divide(int, bool)
  nameWithType: Geometry.Divide(int, bool)
  fullName: SearchAThing.Sci.Geometry.Divide(int, bool)
  nameWithType.vb: Geometry.Divide(Integer, Boolean)
  fullName.vb: SearchAThing.Sci.Geometry.Divide(Integer, Boolean)
  name.vb: Divide(Integer, Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
    name: Divide
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
    name: Divide
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Line3D.Divide*
  commentId: Overload:SearchAThing.Sci.Line3D.Divide
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Divide_System_Int32_System_Boolean_
  name: Divide
  nameWithType: Line3D.Divide
  fullName: SearchAThing.Sci.Line3D.Divide
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SearchAThing.Sci.Geometry.BBox(System.Double)
  commentId: M:SearchAThing.Sci.Geometry.BBox(System.Double)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  name: BBox(double)
  nameWithType: Geometry.BBox(double)
  fullName: SearchAThing.Sci.Geometry.BBox(double)
  nameWithType.vb: Geometry.BBox(Double)
  fullName.vb: SearchAThing.Sci.Geometry.BBox(Double)
  name.vb: BBox(Double)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.BBox(System.Double)
    name: BBox
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.BBox(System.Double)
    name: BBox
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: SearchAThing.Sci.Line3D.BBox*
  commentId: Overload:SearchAThing.Sci.Line3D.BBox
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_BBox_System_Double_
  name: BBox
  nameWithType: Line3D.BBox
  fullName: SearchAThing.Sci.Line3D.BBox
- uid: SearchAThing.Sci.BBox3D
  commentId: T:SearchAThing.Sci.BBox3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.BBox3D.html
  name: BBox3D
  nameWithType: BBox3D
  fullName: SearchAThing.Sci.BBox3D
- uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  commentId: M:SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  name: GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  nameWithType: Geometry.GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName: SearchAThing.Sci.Geometry.GeomIntersect(double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  nameWithType.vb: Geometry.GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName.vb: SearchAThing.Sci.Geometry.GeomIntersect(Double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  name.vb: GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
    name: GeomIntersect
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
    name: GeomIntersect
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: )
- uid: SearchAThing.Sci.Line3D.GeomIntersect*
  commentId: Overload:SearchAThing.Sci.Line3D.GeomIntersect
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  name: GeomIntersect
  nameWithType: Line3D.GeomIntersect
  fullName: SearchAThing.Sci.Line3D.GeomIntersect
- uid: SearchAThing.Sci.GeomSegmentMode
  commentId: T:SearchAThing.Sci.GeomSegmentMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.GeomSegmentMode.html
  name: GeomSegmentMode
  nameWithType: GeomSegmentMode
  fullName: SearchAThing.Sci.GeomSegmentMode
- uid: SearchAThing.Sci.Geometry.DxfEntity
  commentId: P:SearchAThing.Sci.Geometry.DxfEntity
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_DxfEntity
  name: DxfEntity
  nameWithType: Geometry.DxfEntity
  fullName: SearchAThing.Sci.Geometry.DxfEntity
- uid: SearchAThing.Sci.Line3D.DxfEntity*
  commentId: Overload:SearchAThing.Sci.Line3D.DxfEntity
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_DxfEntity
  name: DxfEntity
  nameWithType: Line3D.DxfEntity
  fullName: SearchAThing.Sci.Line3D.DxfEntity
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  isExternal: true
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
- uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  commentId: M:SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  name: GeomEquals(double, Geometry, bool)
  nameWithType: Geometry.GeomEquals(double, Geometry, bool)
  fullName: SearchAThing.Sci.Geometry.GeomEquals(double, SearchAThing.Sci.Geometry, bool)
  nameWithType.vb: Geometry.GeomEquals(Double, Geometry, Boolean)
  fullName.vb: SearchAThing.Sci.Geometry.GeomEquals(Double, SearchAThing.Sci.Geometry, Boolean)
  name.vb: GeomEquals(Double, Geometry, Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
    name: GeomEquals
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
    name: GeomEquals
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Line3D.GeomEquals*
  commentId: Overload:SearchAThing.Sci.Line3D.GeomEquals
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  name: GeomEquals
  nameWithType: Line3D.GeomEquals
  fullName: SearchAThing.Sci.Line3D.GeomEquals
- uid: SearchAThing.Sci.Line3D.From*
  commentId: Overload:SearchAThing.Sci.Line3D.From
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_From
  name: From
  nameWithType: Line3D.From
  fullName: SearchAThing.Sci.Line3D.From
- uid: SearchAThing.Sci.Line3D.V*
  commentId: Overload:SearchAThing.Sci.Line3D.V
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_V
  name: V
  nameWithType: Line3D.V
  fullName: SearchAThing.Sci.Line3D.V
- uid: SearchAThing.Sci.Line3D.To*
  commentId: Overload:SearchAThing.Sci.Line3D.To
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_To
  name: To
  nameWithType: Line3D.To
  fullName: SearchAThing.Sci.Line3D.To
- uid: SearchAThing.Sci.Line3D.Dir*
  commentId: Overload:SearchAThing.Sci.Line3D.Dir
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Dir
  name: Dir
  nameWithType: Line3D.Dir
  fullName: SearchAThing.Sci.Line3D.Dir
- uid: SearchAThing.Sci.Line3D.DisambiguatedPoints*
  commentId: Overload:SearchAThing.Sci.Line3D.DisambiguatedPoints
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_DisambiguatedPoints
  name: DisambiguatedPoints
  nameWithType: Line3D.DisambiguatedPoints
  fullName: SearchAThing.Sci.Line3D.DisambiguatedPoints
- uid: SearchAThing.Sci.Line3D.Points*
  commentId: Overload:SearchAThing.Sci.Line3D.Points
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Points
  name: Points
  nameWithType: Line3D.Points
  fullName: SearchAThing.Sci.Line3D.Points
- uid: SearchAThing.Sci.Line3D.#ctor*
  commentId: Overload:SearchAThing.Sci.Line3D.#ctor
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D__ctor_SearchAThing_Sci_Line3D_
  name: Line3D
  nameWithType: Line3D.Line3D
  fullName: SearchAThing.Sci.Line3D.Line3D
  nameWithType.vb: Line3D.New
  fullName.vb: SearchAThing.Sci.Line3D.New
  name.vb: New
- uid: SearchAThing.Sci.Line3DConstructMode
  commentId: T:SearchAThing.Sci.Line3DConstructMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Line3DConstructMode.html
  name: Line3DConstructMode
  nameWithType: Line3DConstructMode
  fullName: SearchAThing.Sci.Line3DConstructMode
- uid: SearchAThing.Sci.Line3D.EqualsTol*
  commentId: Overload:SearchAThing.Sci.Line3D.EqualsTol
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_EqualsTol_System_Double_SearchAThing_Sci_Line3D_System_Boolean_
  name: EqualsTol
  nameWithType: Line3D.EqualsTol
  fullName: SearchAThing.Sci.Line3D.EqualsTol
- uid: SearchAThing.Sci.Line3D.CommonPoint*
  commentId: Overload:SearchAThing.Sci.Line3D.CommonPoint
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_CommonPoint_System_Double_SearchAThing_Sci_Line3D_
  name: CommonPoint
  nameWithType: Line3D.CommonPoint
  fullName: SearchAThing.Sci.Line3D.CommonPoint
- uid: SearchAThing.Sci.Line3D.Reverse*
  commentId: Overload:SearchAThing.Sci.Line3D.Reverse
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Reverse
  name: Reverse
  nameWithType: Line3D.Reverse
  fullName: SearchAThing.Sci.Line3D.Reverse
- uid: SearchAThing.Sci.Line3D.Scale*
  commentId: Overload:SearchAThing.Sci.Line3D.Scale
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Scale_SearchAThing_Sci_Vector3D_System_Double_
  name: Scale
  nameWithType: Line3D.Scale
  fullName: SearchAThing.Sci.Line3D.Scale
- uid: SearchAThing.Sci.Line3D.op_Multiply*
  commentId: Overload:SearchAThing.Sci.Line3D.op_Multiply
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_op_Multiply_System_Double_SearchAThing_Sci_Line3D_
  name: operator *
  nameWithType: Line3D.operator *
  fullName: SearchAThing.Sci.Line3D.operator *
  nameWithType.vb: Line3D.*
  fullName.vb: SearchAThing.Sci.Line3D.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Line3D.op_Multiply*
    name: '*'
    href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_op_Multiply_System_Double_SearchAThing_Sci_Line3D_
- uid: SearchAThing.Sci.Line3D.op_Addition*
  commentId: Overload:SearchAThing.Sci.Line3D.op_Addition
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_op_Addition_SearchAThing_Sci_Line3D_SearchAThing_Sci_Vector3D_
  name: operator +
  nameWithType: Line3D.operator +
  fullName: SearchAThing.Sci.Line3D.operator +
  nameWithType.vb: Line3D.+
  fullName.vb: SearchAThing.Sci.Line3D.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Line3D.op_Addition*
    name: +
    href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_op_Addition_SearchAThing_Sci_Line3D_SearchAThing_Sci_Vector3D_
- uid: SearchAThing.Sci.Line3D.op_Subtraction*
  commentId: Overload:SearchAThing.Sci.Line3D.op_Subtraction
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_op_Subtraction_SearchAThing_Sci_Line3D_SearchAThing_Sci_Vector3D_
  name: operator -
  nameWithType: Line3D.operator -
  fullName: SearchAThing.Sci.Line3D.operator -
  nameWithType.vb: Line3D.-
  fullName.vb: SearchAThing.Sci.Line3D.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Line3D.op_Subtraction*
    name: '-'
    href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_op_Subtraction_SearchAThing_Sci_Line3D_SearchAThing_Sci_Vector3D_
- uid: SearchAThing.Sci.Line3D.LineContainsPoint*
  commentId: Overload:SearchAThing.Sci.Line3D.LineContainsPoint
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_LineContainsPoint_System_Double_System_Double_System_Double_System_Double_System_Boolean_
  name: LineContainsPoint
  nameWithType: Line3D.LineContainsPoint
  fullName: SearchAThing.Sci.Line3D.LineContainsPoint
- uid: SearchAThing.Sci.Line3D.SegmentContainsPoint*
  commentId: Overload:SearchAThing.Sci.Line3D.SegmentContainsPoint
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_SegmentContainsPoint_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_
  name: SegmentContainsPoint
  nameWithType: Line3D.SegmentContainsPoint
  fullName: SearchAThing.Sci.Line3D.SegmentContainsPoint
- uid: SearchAThing.Sci.Line3D.SemiLineContainsPoint*
  commentId: Overload:SearchAThing.Sci.Line3D.SemiLineContainsPoint
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_SemiLineContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  name: SemiLineContainsPoint
  nameWithType: Line3D.SemiLineContainsPoint
  fullName: SearchAThing.Sci.Line3D.SemiLineContainsPoint
- uid: SearchAThing.Sci.Line3D.Intersect*
  commentId: Overload:SearchAThing.Sci.Line3D.Intersect
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Intersect_System_Double_SearchAThing_Sci_Line3D_SearchAThing_Sci_LineIntersectBehavior_
  name: Intersect
  nameWithType: Line3D.Intersect
  fullName: SearchAThing.Sci.Line3D.Intersect
- uid: SearchAThing.Sci.LineIntersectBehavior
  commentId: T:SearchAThing.Sci.LineIntersectBehavior
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.LineIntersectBehavior.html
  name: LineIntersectBehavior
  nameWithType: LineIntersectBehavior
  fullName: SearchAThing.Sci.LineIntersectBehavior
- uid: SearchAThing.Sci.Line3D.ApparentIntersect*
  commentId: Overload:SearchAThing.Sci.Line3D.ApparentIntersect
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_ApparentIntersect_SearchAThing_Sci_Line3D_
  name: ApparentIntersect
  nameWithType: Line3D.ApparentIntersect
  fullName: SearchAThing.Sci.Line3D.ApparentIntersect
- uid: SearchAThing.Sci.Line3D.Perpendicular*
  commentId: Overload:SearchAThing.Sci.Line3D.Perpendicular
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Perpendicular_System_Double_SearchAThing_Sci_Vector3D_
  name: Perpendicular
  nameWithType: Line3D.Perpendicular
  fullName: SearchAThing.Sci.Line3D.Perpendicular
- uid: SearchAThing.Sci.Line3D.Colinear*
  commentId: Overload:SearchAThing.Sci.Line3D.Colinear
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Colinear_System_Double_SearchAThing_Sci_Line3D_
  name: Colinear
  nameWithType: Line3D.Colinear
  fullName: SearchAThing.Sci.Line3D.Colinear
- uid: SearchAThing.Sci.Line3D.IsParallelTo*
  commentId: Overload:SearchAThing.Sci.Line3D.IsParallelTo
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_IsParallelTo_System_Double_SearchAThing_Sci_CoordinateSystem3D_
  name: IsParallelTo
  nameWithType: Line3D.IsParallelTo
  fullName: SearchAThing.Sci.Line3D.IsParallelTo
- uid: SearchAThing.Sci.CoordinateSystem3D
  commentId: T:SearchAThing.Sci.CoordinateSystem3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.CoordinateSystem3D.html
  name: CoordinateSystem3D
  nameWithType: CoordinateSystem3D
  fullName: SearchAThing.Sci.CoordinateSystem3D
- uid: SearchAThing.Sci.Line3D.RotateAboutAxis*
  commentId: Overload:SearchAThing.Sci.Line3D.RotateAboutAxis
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_RotateAboutAxis_SearchAThing_Sci_Line3D_System_Double_
  name: RotateAboutAxis
  nameWithType: Line3D.RotateAboutAxis
  fullName: SearchAThing.Sci.Line3D.RotateAboutAxis
- uid: SearchAThing.Sci.Line3D.SetLength*
  commentId: Overload:SearchAThing.Sci.Line3D.SetLength
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_SetLength_System_Double_
  name: SetLength
  nameWithType: Line3D.SetLength
  fullName: SearchAThing.Sci.Line3D.SetLength
- uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  name: Move(Vector3D)
  nameWithType: Geometry.Move(Vector3D)
  fullName: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
    name: Move
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
    name: Move
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Line3D.Move*
  commentId: Overload:SearchAThing.Sci.Line3D.Move
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Move_SearchAThing_Sci_Vector3D_
  name: Move
  nameWithType: Line3D.Move
  fullName: SearchAThing.Sci.Line3D.Move
- uid: SearchAThing.Sci.Line3D.MoveMidpoint*
  commentId: Overload:SearchAThing.Sci.Line3D.MoveMidpoint
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_MoveMidpoint_SearchAThing_Sci_Vector3D_
  name: MoveMidpoint
  nameWithType: Line3D.MoveMidpoint
  fullName: SearchAThing.Sci.Line3D.MoveMidpoint
- uid: SearchAThing.Sci.Line3D.EnsureFrom*
  commentId: Overload:SearchAThing.Sci.Line3D.EnsureFrom
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_EnsureFrom_System_Double_SearchAThing_Sci_Vector3D_
  name: EnsureFrom
  nameWithType: Line3D.EnsureFrom
  fullName: SearchAThing.Sci.Line3D.EnsureFrom
- uid: SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Offset_System_Double_SearchAThing_Sci_Vector3D_System_Double_
  name: Offset(double, Vector3D, double)
  nameWithType: Edge.Offset(double, Vector3D, double)
  fullName: SearchAThing.Sci.Edge.Offset(double, SearchAThing.Sci.Vector3D, double)
  nameWithType.vb: Edge.Offset(Double, Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Edge.Offset(Double, SearchAThing.Sci.Vector3D, Double)
  name.vb: Offset(Double, Vector3D, Double)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
    name: Offset
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Offset_System_Double_SearchAThing_Sci_Vector3D_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
    name: Offset
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Offset_System_Double_SearchAThing_Sci_Vector3D_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: SearchAThing.Sci.Line3D.Offset*
  commentId: Overload:SearchAThing.Sci.Line3D.Offset
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Offset_System_Double_SearchAThing_Sci_Vector3D_System_Double_
  name: Offset
  nameWithType: Line3D.Offset
  fullName: SearchAThing.Sci.Line3D.Offset
- uid: SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_MoveEnd_System_Double_SearchAThing_Sci_EdgeEnd_SearchAThing_Sci_Vector3D_
  name: MoveEnd(double, EdgeEnd, Vector3D)
  nameWithType: Edge.MoveEnd(double, EdgeEnd, Vector3D)
  fullName: SearchAThing.Sci.Edge.MoveEnd(double, SearchAThing.Sci.EdgeEnd, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.MoveEnd(Double, EdgeEnd, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.MoveEnd(Double, SearchAThing.Sci.EdgeEnd, SearchAThing.Sci.Vector3D)
  name.vb: MoveEnd(Double, EdgeEnd, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
    name: MoveEnd
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_MoveEnd_System_Double_SearchAThing_Sci_EdgeEnd_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.EdgeEnd
    name: EdgeEnd
    href: SearchAThing.Sci.EdgeEnd.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
    name: MoveEnd
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_MoveEnd_System_Double_SearchAThing_Sci_EdgeEnd_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.EdgeEnd
    name: EdgeEnd
    href: SearchAThing.Sci.EdgeEnd.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Line3D.MoveEnd*
  commentId: Overload:SearchAThing.Sci.Line3D.MoveEnd
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_MoveEnd_System_Double_SearchAThing_Sci_EdgeEnd_SearchAThing_Sci_Vector3D_
  name: MoveEnd
  nameWithType: Line3D.MoveEnd
  fullName: SearchAThing.Sci.Line3D.MoveEnd
- uid: SearchAThing.Sci.EdgeEnd
  commentId: T:SearchAThing.Sci.EdgeEnd
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.EdgeEnd.html
  name: EdgeEnd
  nameWithType: EdgeEnd
  fullName: SearchAThing.Sci.EdgeEnd
- uid: SearchAThing.Sci.Line3D.CadScript*
  commentId: Overload:SearchAThing.Sci.Line3D.CadScript
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_CadScript
  name: CadScript
  nameWithType: Line3D.CadScript
  fullName: SearchAThing.Sci.Line3D.CadScript
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SearchAThing.Sci.Edge.QCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Edge.QCadScript(System.Boolean)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_QCadScript_System_Boolean_
  name: QCadScript(bool)
  nameWithType: Edge.QCadScript(bool)
  fullName: SearchAThing.Sci.Edge.QCadScript(bool)
  nameWithType.vb: Edge.QCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Edge.QCadScript(Boolean)
  name.vb: QCadScript(Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.QCadScript(System.Boolean)
    name: QCadScript
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_QCadScript_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.QCadScript(System.Boolean)
    name: QCadScript
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_QCadScript_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Line3D.QCadScript*
  commentId: Overload:SearchAThing.Sci.Line3D.QCadScript
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_QCadScript_System_Boolean_
  name: QCadScript
  nameWithType: Line3D.QCadScript
  fullName: SearchAThing.Sci.Line3D.QCadScript
- uid: SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ProgeCadScript_System_Boolean_
  name: ProgeCadScript(bool)
  nameWithType: Edge.ProgeCadScript(bool)
  fullName: SearchAThing.Sci.Edge.ProgeCadScript(bool)
  nameWithType.vb: Edge.ProgeCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Edge.ProgeCadScript(Boolean)
  name.vb: ProgeCadScript(Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
    name: ProgeCadScript
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ProgeCadScript_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
    name: ProgeCadScript
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ProgeCadScript_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Line3D.ProgeCadScript*
  commentId: Overload:SearchAThing.Sci.Line3D.ProgeCadScript
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_ProgeCadScript_System_Boolean_
  name: ProgeCadScript
  nameWithType: Line3D.ProgeCadScript
  fullName: SearchAThing.Sci.Line3D.ProgeCadScript
- uid: SearchAThing.Sci.Line3D.A0QCadScript*
  commentId: Overload:SearchAThing.Sci.Line3D.A0QCadScript
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_A0QCadScript
  name: A0QCadScript
  nameWithType: Line3D.A0QCadScript
  fullName: SearchAThing.Sci.Line3D.A0QCadScript
- uid: SearchAThing.Sci.Line3D.A0ProgeCadScript*
  commentId: Overload:SearchAThing.Sci.Line3D.A0ProgeCadScript
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_A0ProgeCadScript
  name: A0ProgeCadScript
  nameWithType: Line3D.A0ProgeCadScript
  fullName: SearchAThing.Sci.Line3D.A0ProgeCadScript
- uid: SearchAThing.Sci.Line3D.ToStringTol*
  commentId: Overload:SearchAThing.Sci.Line3D.ToStringTol
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_ToStringTol_System_Double_
  name: ToStringTol
  nameWithType: Line3D.ToStringTol
  fullName: SearchAThing.Sci.Line3D.ToStringTol
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SearchAThing.Sci.Line3D.ToString*
  commentId: Overload:SearchAThing.Sci.Line3D.ToString
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_ToString
  name: ToString
  nameWithType: Line3D.ToString
  fullName: SearchAThing.Sci.Line3D.ToString
- uid: SearchAThing.Sci.Edge.ToString(System.Int32)
  commentId: M:SearchAThing.Sci.Edge.ToString(System.Int32)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ToString_System_Int32_
  name: ToString(int)
  nameWithType: Edge.ToString(int)
  fullName: SearchAThing.Sci.Edge.ToString(int)
  nameWithType.vb: Edge.ToString(Integer)
  fullName.vb: SearchAThing.Sci.Edge.ToString(Integer)
  name.vb: ToString(Integer)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.ToString(System.Int32)
    name: ToString
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ToString_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.ToString(System.Int32)
    name: ToString
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ToString_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SearchAThing.Sci.Line3D.Normalized*
  commentId: Overload:SearchAThing.Sci.Line3D.Normalized
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Normalized
  name: Normalized
  nameWithType: Line3D.Normalized
  fullName: SearchAThing.Sci.Line3D.Normalized
- uid: SearchAThing.Sci.Line3D.Swapped*
  commentId: Overload:SearchAThing.Sci.Line3D.Swapped
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Swapped
  name: Swapped
  nameWithType: Line3D.Swapped
  fullName: SearchAThing.Sci.Line3D.Swapped
- uid: SearchAThing.Sci.Line3D.Inverted*
  commentId: Overload:SearchAThing.Sci.Line3D.Inverted
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Inverted
  name: Inverted
  nameWithType: Line3D.Inverted
  fullName: SearchAThing.Sci.Line3D.Inverted
- uid: SearchAThing.Sci.Line3D.Bisect*
  commentId: Overload:SearchAThing.Sci.Line3D.Bisect
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Bisect_System_Double_SearchAThing_Sci_Line3D_SearchAThing_Sci_Vector3D_
  name: Bisect
  nameWithType: Line3D.Bisect
  fullName: SearchAThing.Sci.Line3D.Bisect
- uid: SearchAThing.Sci.Line3D.Transform*
  commentId: Overload:SearchAThing.Sci.Line3D.Transform
  href: SearchAThing.Sci.Line3D.html#SearchAThing_Sci_Line3D_Transform_System_Numerics_Matrix4x4_
  name: Transform
  nameWithType: Line3D.Transform
  fullName: SearchAThing.Sci.Line3D.Transform
- uid: System.Numerics.Matrix4x4
  commentId: T:System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.matrix4x4
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
