### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.BBox3D
  commentId: T:SearchAThing.Sci.BBox3D
  id: BBox3D
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.BBox3D.#ctor
  - SearchAThing.Sci.BBox3D.#ctor(SearchAThing.Sci.BBox3D)
  - SearchAThing.Sci.BBox3D.#ctor(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.BBox3D.#ctor(System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  - SearchAThing.Sci.BBox3D.AddMargin(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.BBox3D.ApplyUnion(SearchAThing.Sci.Vector3D[])
  - SearchAThing.Sci.BBox3D.ApplyUnion(System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  - SearchAThing.Sci.BBox3D.CadScript
  - SearchAThing.Sci.BBox3D.Clear
  - SearchAThing.Sci.BBox3D.Contains(System.Double,SearchAThing.Sci.BBox3D,System.Boolean,System.Boolean)
  - SearchAThing.Sci.BBox3D.Contains(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.BBox3D.Contains2D(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.BBox3D.Coords2D
  - SearchAThing.Sci.BBox3D.Coords3D
  - SearchAThing.Sci.BBox3D.DrawCuboid(netDxf.DxfObject,netDxf.Tables.Layer)
  - SearchAThing.Sci.BBox3D.Empty
  - SearchAThing.Sci.BBox3D.EqualsTol(System.Double,SearchAThing.Sci.BBox3D)
  - SearchAThing.Sci.BBox3D.Faces(System.Double)
  - SearchAThing.Sci.BBox3D.Intersect(System.Double,SearchAThing.Sci.Line3D)
  - SearchAThing.Sci.BBox3D.IsEmpty
  - SearchAThing.Sci.BBox3D.Max
  - SearchAThing.Sci.BBox3D.Middle
  - SearchAThing.Sci.BBox3D.Min
  - SearchAThing.Sci.BBox3D.Points
  - SearchAThing.Sci.BBox3D.Scale(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.BBox3D.Scale(System.Double)
  - SearchAThing.Sci.BBox3D.Size
  - SearchAThing.Sci.BBox3D.ToFace3DList
  - SearchAThing.Sci.BBox3D.ToString
  - SearchAThing.Sci.BBox3D.Union(SearchAThing.Sci.BBox3D)
  - SearchAThing.Sci.BBox3D.Union(SearchAThing.Sci.Vector3D)
  langs:
  - csharp
  - vb
  name: BBox3D
  nameWithType: BBox3D
  fullName: SearchAThing.Sci.BBox3D
  type: Class
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BBox3D
    path: src/sci/BBox3D.cs
    startLine: 7
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Bounding Box.

    Initially empty, each added point will increase the extension if min or max exceed actual bbox limits.

    It works within wcs.
  example: []
  syntax:
    content: public class BBox3D
    content.vb: Public Class BBox3D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: SearchAThing.Sci.BBox3D.Empty
  commentId: P:SearchAThing.Sci.BBox3D.Empty
  id: Empty
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: BBox3D.Empty
  fullName: SearchAThing.Sci.BBox3D.Empty
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Empty
    path: src/sci/BBox3D.cs
    startLine: 12
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static BBox3D Empty { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.BBox3D
    content.vb: Public Shared ReadOnly Property Empty As BBox3D
  overload: SearchAThing.Sci.BBox3D.Empty*
- uid: SearchAThing.Sci.BBox3D.IsEmpty
  commentId: P:SearchAThing.Sci.BBox3D.IsEmpty
  id: IsEmpty
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: BBox3D.IsEmpty
  fullName: SearchAThing.Sci.BBox3D.IsEmpty
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: IsEmpty
    path: src/sci/BBox3D.cs
    startLine: 17
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if bbox empty
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: SearchAThing.Sci.BBox3D.IsEmpty*
- uid: SearchAThing.Sci.BBox3D.Min
  commentId: P:SearchAThing.Sci.BBox3D.Min
  id: Min
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: BBox3D.Min
  fullName: SearchAThing.Sci.BBox3D.Min
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Min
    path: src/sci/BBox3D.cs
    startLine: 23
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Min coord of bbox resulting by all inserted points
  example: []
  syntax:
    content: public Vector3D Min { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Property Min As Vector3D
  overload: SearchAThing.Sci.BBox3D.Min*
- uid: SearchAThing.Sci.BBox3D.Max
  commentId: P:SearchAThing.Sci.BBox3D.Max
  id: Max
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: BBox3D.Max
  fullName: SearchAThing.Sci.BBox3D.Max
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Max
    path: src/sci/BBox3D.cs
    startLine: 40
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Max coord of bbox resulting by all inserted points
  example: []
  syntax:
    content: public Vector3D Max { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Property Max As Vector3D
  overload: SearchAThing.Sci.BBox3D.Max*
- uid: SearchAThing.Sci.BBox3D.Middle
  commentId: P:SearchAThing.Sci.BBox3D.Middle
  id: Middle
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Middle
  nameWithType: BBox3D.Middle
  fullName: SearchAThing.Sci.BBox3D.Middle
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Middle
    path: src/sci/BBox3D.cs
    startLine: 58
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: middle point of bbox = (Min+Max)/2 ( Zero if empty )
  example: []
  syntax:
    content: public Vector3D Middle { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
      description: middle point of bbox
    content.vb: Public ReadOnly Property Middle As Vector3D
  overload: SearchAThing.Sci.BBox3D.Middle*
- uid: SearchAThing.Sci.BBox3D.Size
  commentId: P:SearchAThing.Sci.BBox3D.Size
  id: Size
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: BBox3D.Size
  fullName: SearchAThing.Sci.BBox3D.Size
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Size
    path: src/sci/BBox3D.cs
    startLine: 63
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Size of bbox as Max-Min point distance ( Zero if empty)
  example: []
  syntax:
    content: public Vector3D Size { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property Size As Vector3D
  overload: SearchAThing.Sci.BBox3D.Size*
- uid: SearchAThing.Sci.BBox3D.Coords2D
  commentId: P:SearchAThing.Sci.BBox3D.Coords2D
  id: Coords2D
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Coords2D
  nameWithType: BBox3D.Coords2D
  fullName: SearchAThing.Sci.BBox3D.Coords2D
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Coords2D
    path: src/sci/BBox3D.cs
    startLine: 68
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a 4 point bbox coords for 2D using Z=Min.Z
  example: []
  syntax:
    content: public IEnumerable<Vector3D> Coords2D { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public ReadOnly Property Coords2D As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.BBox3D.Coords2D*
- uid: SearchAThing.Sci.BBox3D.Coords3D
  commentId: P:SearchAThing.Sci.BBox3D.Coords3D
  id: Coords3D
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Coords3D
  nameWithType: BBox3D.Coords3D
  fullName: SearchAThing.Sci.BBox3D.Coords3D
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Coords3D
    path: src/sci/BBox3D.cs
    startLine: 82
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build 8 coords 3d of current bbox
  example: []
  syntax:
    content: public IEnumerable<Vector3D> Coords3D { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public ReadOnly Property Coords3D As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.BBox3D.Coords3D*
- uid: SearchAThing.Sci.BBox3D.#ctor
  commentId: M:SearchAThing.Sci.BBox3D.#ctor
  id: '#ctor'
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: BBox3D()
  nameWithType: BBox3D.BBox3D()
  fullName: SearchAThing.Sci.BBox3D.BBox3D()
  type: Constructor
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/BBox3D.cs
    startLine: 107
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: construct empy bbox
  example: []
  syntax:
    content: public BBox3D()
    content.vb: Public Sub New()
  overload: SearchAThing.Sci.BBox3D.#ctor*
  nameWithType.vb: BBox3D.New()
  fullName.vb: SearchAThing.Sci.BBox3D.New()
  name.vb: New()
- uid: SearchAThing.Sci.BBox3D.#ctor(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.BBox3D.#ctor(SearchAThing.Sci.Vector3D,System.Double)
  id: '#ctor(SearchAThing.Sci.Vector3D,System.Double)'
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: BBox3D(Vector3D, double)
  nameWithType: BBox3D.BBox3D(Vector3D, double)
  fullName: SearchAThing.Sci.BBox3D.BBox3D(SearchAThing.Sci.Vector3D, double)
  type: Constructor
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/BBox3D.cs
    startLine: 114
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: construct bbox that contains pt at center and with given radius
  example: []
  syntax:
    content: public BBox3D(Vector3D pt, double radius)
    parameters:
    - id: pt
      type: SearchAThing.Sci.Vector3D
    - id: radius
      type: System.Double
    content.vb: Public Sub New(pt As Vector3D, radius As Double)
  overload: SearchAThing.Sci.BBox3D.#ctor*
  nameWithType.vb: BBox3D.New(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.BBox3D.New(SearchAThing.Sci.Vector3D, Double)
  name.vb: New(Vector3D, Double)
- uid: SearchAThing.Sci.BBox3D.Scale(System.Double)
  commentId: M:SearchAThing.Sci.BBox3D.Scale(System.Double)
  id: Scale(System.Double)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Scale(double)
  nameWithType: BBox3D.Scale(double)
  fullName: SearchAThing.Sci.BBox3D.Scale(double)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Scale
    path: src/sci/BBox3D.cs
    startLine: 134
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scale all bbox points Min,Max respect to the center
  example: []
  syntax:
    content: public BBox3D Scale(double factor)
    parameters:
    - id: factor
      type: System.Double
      description: scale factor
    return:
      type: SearchAThing.Sci.BBox3D
      description: new bbox scaled
    content.vb: Public Function Scale(factor As Double) As BBox3D
  overload: SearchAThing.Sci.BBox3D.Scale*
  nameWithType.vb: BBox3D.Scale(Double)
  fullName.vb: SearchAThing.Sci.BBox3D.Scale(Double)
  name.vb: Scale(Double)
- uid: SearchAThing.Sci.BBox3D.Scale(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.BBox3D.Scale(SearchAThing.Sci.Vector3D)
  id: Scale(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Scale(Vector3D)
  nameWithType: BBox3D.Scale(Vector3D)
  fullName: SearchAThing.Sci.BBox3D.Scale(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Scale
    path: src/sci/BBox3D.cs
    startLine: 150
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scale all bbox points Min,Max respect to the center
  example: []
  syntax:
    content: public BBox3D Scale(Vector3D factor)
    parameters:
    - id: factor
      type: SearchAThing.Sci.Vector3D
      description: scale factor
    return:
      type: SearchAThing.Sci.BBox3D
      description: new bbox scaled
    content.vb: Public Function Scale(factor As Vector3D) As BBox3D
  overload: SearchAThing.Sci.BBox3D.Scale*
- uid: SearchAThing.Sci.BBox3D.#ctor(System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.BBox3D.#ctor(System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  id: '#ctor(System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})'
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: BBox3D(IEnumerable<Vector3D>)
  nameWithType: BBox3D.BBox3D(IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.BBox3D.BBox3D(System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  type: Constructor
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/BBox3D.cs
    startLine: 165
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: construct bbox with given points
  example: []
  syntax:
    content: public BBox3D(IEnumerable<Vector3D> pts)
    parameters:
    - id: pts
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: points to add to the bbox
    content.vb: Public Sub New(pts As IEnumerable(Of Vector3D))
  overload: SearchAThing.Sci.BBox3D.#ctor*
  nameWithType.vb: BBox3D.New(IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.BBox3D.New(System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: New(IEnumerable(Of Vector3D))
- uid: SearchAThing.Sci.BBox3D.ApplyUnion(SearchAThing.Sci.Vector3D[])
  commentId: M:SearchAThing.Sci.BBox3D.ApplyUnion(SearchAThing.Sci.Vector3D[])
  id: ApplyUnion(SearchAThing.Sci.Vector3D[])
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: ApplyUnion(params Vector3D[])
  nameWithType: BBox3D.ApplyUnion(params Vector3D[])
  fullName: SearchAThing.Sci.BBox3D.ApplyUnion(params SearchAThing.Sci.Vector3D[])
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ApplyUnion
    path: src/sci/BBox3D.cs
    startLine: 174
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: add given points to current bbox with side effects
  example: []
  syntax:
    content: public void ApplyUnion(params Vector3D[] pts)
    parameters:
    - id: pts
      type: SearchAThing.Sci.Vector3D[]
      description: points to add
    content.vb: Public Sub ApplyUnion(ParamArray pts As Vector3D())
  overload: SearchAThing.Sci.BBox3D.ApplyUnion*
  nameWithType.vb: BBox3D.ApplyUnion(ParamArray Vector3D())
  fullName.vb: SearchAThing.Sci.BBox3D.ApplyUnion(ParamArray SearchAThing.Sci.Vector3D())
  name.vb: ApplyUnion(ParamArray Vector3D())
- uid: SearchAThing.Sci.BBox3D.ApplyUnion(System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.BBox3D.ApplyUnion(System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  id: ApplyUnion(System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: ApplyUnion(IEnumerable<Vector3D>)
  nameWithType: BBox3D.ApplyUnion(IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.BBox3D.ApplyUnion(System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ApplyUnion
    path: src/sci/BBox3D.cs
    startLine: 183
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: add given points to current bbox with side effects
  example: []
  syntax:
    content: public void ApplyUnion(IEnumerable<Vector3D> pts)
    parameters:
    - id: pts
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: points to add
    content.vb: Public Sub ApplyUnion(pts As IEnumerable(Of Vector3D))
  overload: SearchAThing.Sci.BBox3D.ApplyUnion*
  nameWithType.vb: BBox3D.ApplyUnion(IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.BBox3D.ApplyUnion(System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: ApplyUnion(IEnumerable(Of Vector3D))
- uid: SearchAThing.Sci.BBox3D.Clear
  commentId: M:SearchAThing.Sci.BBox3D.Clear
  id: Clear
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BBox3D.Clear()
  fullName: SearchAThing.Sci.BBox3D.Clear()
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Clear
    path: src/sci/BBox3D.cs
    startLine: 228
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: reset to empty bbox
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: SearchAThing.Sci.BBox3D.Clear*
- uid: SearchAThing.Sci.BBox3D.#ctor(SearchAThing.Sci.BBox3D)
  commentId: M:SearchAThing.Sci.BBox3D.#ctor(SearchAThing.Sci.BBox3D)
  id: '#ctor(SearchAThing.Sci.BBox3D)'
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: BBox3D(BBox3D)
  nameWithType: BBox3D.BBox3D(BBox3D)
  fullName: SearchAThing.Sci.BBox3D.BBox3D(SearchAThing.Sci.BBox3D)
  type: Constructor
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/BBox3D.cs
    startLine: 237
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: construct a copy of bbox
  example: []
  syntax:
    content: public BBox3D(BBox3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.BBox3D
      description: source bbox
    content.vb: Public Sub New(other As BBox3D)
  overload: SearchAThing.Sci.BBox3D.#ctor*
  nameWithType.vb: BBox3D.New(BBox3D)
  fullName.vb: SearchAThing.Sci.BBox3D.New(SearchAThing.Sci.BBox3D)
  name.vb: New(BBox3D)
- uid: SearchAThing.Sci.BBox3D.Union(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.BBox3D.Union(SearchAThing.Sci.Vector3D)
  id: Union(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Union(Vector3D)
  nameWithType: BBox3D.Union(Vector3D)
  fullName: SearchAThing.Sci.BBox3D.Union(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Union
    path: src/sci/BBox3D.cs
    startLine: 251
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: union of this bbox with given point
  example: []
  syntax:
    content: public BBox3D Union(Vector3D p)
    parameters:
    - id: p
      type: SearchAThing.Sci.Vector3D
      description: point to add to this bbox copy
    return:
      type: SearchAThing.Sci.BBox3D
      description: new bbox with given point added to
    content.vb: Public Function Union(p As Vector3D) As BBox3D
  overload: SearchAThing.Sci.BBox3D.Union*
- uid: SearchAThing.Sci.BBox3D.Union(SearchAThing.Sci.BBox3D)
  commentId: M:SearchAThing.Sci.BBox3D.Union(SearchAThing.Sci.BBox3D)
  id: Union(SearchAThing.Sci.BBox3D)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Union(BBox3D)
  nameWithType: BBox3D.Union(BBox3D)
  fullName: SearchAThing.Sci.BBox3D.Union(SearchAThing.Sci.BBox3D)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Union
    path: src/sci/BBox3D.cs
    startLine: 265
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: union of this bbox with another
  example: []
  syntax:
    content: public BBox3D Union(BBox3D other)
    parameters:
    - id: other
      type: SearchAThing.Sci.BBox3D
      description: other bbox to add to this
    return:
      type: SearchAThing.Sci.BBox3D
      description: new bbox resulting from the union of this with given other one
    content.vb: Public Function Union(other As BBox3D) As BBox3D
  overload: SearchAThing.Sci.BBox3D.Union*
- uid: SearchAThing.Sci.BBox3D.EqualsTol(System.Double,SearchAThing.Sci.BBox3D)
  commentId: M:SearchAThing.Sci.BBox3D.EqualsTol(System.Double,SearchAThing.Sci.BBox3D)
  id: EqualsTol(System.Double,SearchAThing.Sci.BBox3D)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: EqualsTol(double, BBox3D)
  nameWithType: BBox3D.EqualsTol(double, BBox3D)
  fullName: SearchAThing.Sci.BBox3D.EqualsTol(double, SearchAThing.Sci.BBox3D)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EqualsTol
    path: src/sci/BBox3D.cs
    startLine: 279
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this bbox equals to the other one
  example: []
  syntax:
    content: public bool EqualsTol(double tol, BBox3D other)
    parameters:
    - id: tol
      type: System.Double
      description: tolerance against Min, Max comparision
    - id: other
      type: SearchAThing.Sci.BBox3D
      description: other bbox to compare for equality
    return:
      type: System.Boolean
      description: true if given bbox equals this one
    content.vb: Public Function EqualsTol(tol As Double, other As BBox3D) As Boolean
  overload: SearchAThing.Sci.BBox3D.EqualsTol*
  nameWithType.vb: BBox3D.EqualsTol(Double, BBox3D)
  fullName.vb: SearchAThing.Sci.BBox3D.EqualsTol(Double, SearchAThing.Sci.BBox3D)
  name.vb: EqualsTol(Double, BBox3D)
- uid: SearchAThing.Sci.BBox3D.Contains(System.Double,SearchAThing.Sci.BBox3D,System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.BBox3D.Contains(System.Double,SearchAThing.Sci.BBox3D,System.Boolean,System.Boolean)
  id: Contains(System.Double,SearchAThing.Sci.BBox3D,System.Boolean,System.Boolean)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Contains(double, BBox3D, bool, bool)
  nameWithType: BBox3D.Contains(double, BBox3D, bool, bool)
  fullName: SearchAThing.Sci.BBox3D.Contains(double, SearchAThing.Sci.BBox3D, bool, bool)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains
    path: src/sci/BBox3D.cs
    startLine: 294
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if given other bbox contained in this
  example: []
  syntax:
    content: public bool Contains(double tol, BBox3D other, bool strictly = false, bool testZ = true)
    parameters:
    - id: tol
      type: System.Double
      description: tolerance against Min, Max comparision
    - id: other
      type: SearchAThing.Sci.BBox3D
      description: other bbox to check if contained in this
    - id: strictly
      type: System.Boolean
      description: if true it checks this bbox is stricly contained into given other
    - id: testZ
      type: System.Boolean
      description: if false min,max test of Z isn't evaluated (useful for planar entities bboxes tests)
    return:
      type: System.Boolean
      description: true if given other bbox contained in this one
    content.vb: Public Function Contains(tol As Double, other As BBox3D, strictly As Boolean = False, testZ As Boolean = True) As Boolean
  overload: SearchAThing.Sci.BBox3D.Contains*
  nameWithType.vb: BBox3D.Contains(Double, BBox3D, Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.BBox3D.Contains(Double, SearchAThing.Sci.BBox3D, Boolean, Boolean)
  name.vb: Contains(Double, BBox3D, Boolean, Boolean)
- uid: SearchAThing.Sci.BBox3D.Contains(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.BBox3D.Contains(System.Double,SearchAThing.Sci.Vector3D)
  id: Contains(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Contains(double, Vector3D)
  nameWithType: BBox3D.Contains(double, Vector3D)
  fullName: SearchAThing.Sci.BBox3D.Contains(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains
    path: src/sci/BBox3D.cs
    startLine: 324
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if given point contained in this bbox
  example: []
  syntax:
    content: public bool Contains(double tol, Vector3D p)
    parameters:
    - id: tol
      type: System.Double
      description: tolerance against Min, Max comparision
    - id: p
      type: SearchAThing.Sci.Vector3D
      description: point to check if contained in this bbox
    return:
      type: System.Boolean
      description: true if given point contained in this bbox
    content.vb: Public Function Contains(tol As Double, p As Vector3D) As Boolean
  overload: SearchAThing.Sci.BBox3D.Contains*
  nameWithType.vb: BBox3D.Contains(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.BBox3D.Contains(Double, SearchAThing.Sci.Vector3D)
  name.vb: Contains(Double, Vector3D)
- uid: SearchAThing.Sci.BBox3D.Contains2D(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.BBox3D.Contains2D(System.Double,SearchAThing.Sci.Vector3D)
  id: Contains2D(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Contains2D(double, Vector3D)
  nameWithType: BBox3D.Contains2D(double, Vector3D)
  fullName: SearchAThing.Sci.BBox3D.Contains2D(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains2D
    path: src/sci/BBox3D.cs
    startLine: 339
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if given point is contained in this bbox excluding Z evaluation
  example: []
  syntax:
    content: public bool Contains2D(double tol, Vector3D p)
    parameters:
    - id: tol
      type: System.Double
      description: tolerance against Min, Max comparision
    - id: p
      type: SearchAThing.Sci.Vector3D
      description: point to check if contained in this bbox (Z ignored)
    return:
      type: System.Boolean
      description: true if given point (Z ignored) contained in this bbox
    content.vb: Public Function Contains2D(tol As Double, p As Vector3D) As Boolean
  overload: SearchAThing.Sci.BBox3D.Contains2D*
  nameWithType.vb: BBox3D.Contains2D(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.BBox3D.Contains2D(Double, SearchAThing.Sci.Vector3D)
  name.vb: Contains2D(Double, Vector3D)
- uid: SearchAThing.Sci.BBox3D.AddMargin(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.BBox3D.AddMargin(SearchAThing.Sci.Vector3D)
  id: AddMargin(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: AddMargin(Vector3D)
  nameWithType: BBox3D.AddMargin(Vector3D)
  fullName: SearchAThing.Sci.BBox3D.AddMargin(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: AddMargin
    path: src/sci/BBox3D.cs
    startLine: 349
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create new bbox extending by subtract margin to Min and by add to Max
  example: []
  syntax:
    content: public BBox3D AddMargin(Vector3D margin)
    parameters:
    - id: margin
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.BBox3D
    content.vb: Public Function AddMargin(margin As Vector3D) As BBox3D
  overload: SearchAThing.Sci.BBox3D.AddMargin*
- uid: SearchAThing.Sci.BBox3D.ToFace3DList
  commentId: M:SearchAThing.Sci.BBox3D.ToFace3DList
  id: ToFace3DList
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: ToFace3DList()
  nameWithType: BBox3D.ToFace3DList()
  fullName: SearchAThing.Sci.BBox3D.ToFace3DList()
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToFace3DList
    path: src/sci/BBox3D.cs
    startLine: 357
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public IEnumerable<Face3D> ToFace3DList()
    return:
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.Face3D}
    content.vb: Public Function ToFace3DList() As IEnumerable(Of Face3D)
  overload: SearchAThing.Sci.BBox3D.ToFace3DList*
- uid: SearchAThing.Sci.BBox3D.CadScript
  commentId: P:SearchAThing.Sci.BBox3D.CadScript
  id: CadScript
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: CadScript
  nameWithType: BBox3D.CadScript
  fullName: SearchAThing.Sci.BBox3D.CadScript
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CadScript
    path: src/sci/BBox3D.cs
    startLine: 366
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: script to paste in cad to draw bbox
  example: []
  syntax:
    content: public string CadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CadScript As String
  overload: SearchAThing.Sci.BBox3D.CadScript*
- uid: SearchAThing.Sci.BBox3D.Points
  commentId: P:SearchAThing.Sci.BBox3D.Points
  id: Points
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Points
  nameWithType: BBox3D.Points
  fullName: SearchAThing.Sci.BBox3D.Points
  type: Property
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Points
    path: src/sci/BBox3D.cs
    startLine: 392
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    (not cached) retrieve ordered set of points for this bbox (0..4) first face (5..7) other face

    - [0] = (Min.X, Min.Y, Min.Z)

    - [1] = (Max.X, Min.Y, Min.Z)

    - [2] = (Max.X, Max.Y, Min.Z)

    - [3] = (Min.X, Max.Y, Min.Z)

    - [4] = (Min.X, Min.Y, Max.Z)

    - [5] = (Max.X, Min.Y, Max.Z)

    - [6] = (Max.X, Max.Y, Max.Z)

    - [7] = (Min.X, Max.Y, Max.Z)
  example: []
  syntax:
    content: public IReadOnlyList<Vector3D> Points { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Vector3D}
    content.vb: Public ReadOnly Property Points As IReadOnlyList(Of Vector3D)
  overload: SearchAThing.Sci.BBox3D.Points*
- uid: SearchAThing.Sci.BBox3D.Faces(System.Double)
  commentId: M:SearchAThing.Sci.BBox3D.Faces(System.Double)
  id: Faces(System.Double)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Faces(double)
  nameWithType: BBox3D.Faces(double)
  fullName: SearchAThing.Sci.BBox3D.Faces(double)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Faces
    path: src/sci/BBox3D.cs
    startLine: 415
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    retrieve 6 faces (bottom, top, left, right, front, back) of bbox.

    (see Points property documentation for vertex enumeration), faces are:

    - [0]: 0321 (bottom)

    - [1]: 4567 (top)

    - [2]: 0473 (left)

    - [3]: 1265 (right)

    - [4]: 0154 (front)

    - [5]: 2376 (back)
  example: []
  syntax:
    content: public IEnumerable<Plane3DRegion> Faces(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Plane3DRegion}
    content.vb: Public Function Faces(tol As Double) As IEnumerable(Of Plane3DRegion)
  overload: SearchAThing.Sci.BBox3D.Faces*
  nameWithType.vb: BBox3D.Faces(Double)
  fullName.vb: SearchAThing.Sci.BBox3D.Faces(Double)
  name.vb: Faces(Double)
- uid: SearchAThing.Sci.BBox3D.Intersect(System.Double,SearchAThing.Sci.Line3D)
  commentId: M:SearchAThing.Sci.BBox3D.Intersect(System.Double,SearchAThing.Sci.Line3D)
  id: Intersect(System.Double,SearchAThing.Sci.Line3D)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: Intersect(double, Line3D)
  nameWithType: BBox3D.Intersect(double, Line3D)
  fullName: SearchAThing.Sci.BBox3D.Intersect(double, SearchAThing.Sci.Line3D)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/BBox3D.cs
    startLine: 449
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: find intersection points of given ray to this bbox faces
  example: []
  syntax:
    content: public IEnumerable<Vector3D> Intersect(double tol, Line3D ray)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: ray
      type: SearchAThing.Sci.Line3D
      description: ray to test if intersect one or more of this bbox faces
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: intersection points
    content.vb: Public Function Intersect(tol As Double, ray As Line3D) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.BBox3D.Intersect*
  nameWithType.vb: BBox3D.Intersect(Double, Line3D)
  fullName.vb: SearchAThing.Sci.BBox3D.Intersect(Double, SearchAThing.Sci.Line3D)
  name.vb: Intersect(Double, Line3D)
- uid: SearchAThing.Sci.BBox3D.DrawCuboid(netDxf.DxfObject,netDxf.Tables.Layer)
  commentId: M:SearchAThing.Sci.BBox3D.DrawCuboid(netDxf.DxfObject,netDxf.Tables.Layer)
  id: DrawCuboid(netDxf.DxfObject,netDxf.Tables.Layer)
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: DrawCuboid(DxfObject, Layer?)
  nameWithType: BBox3D.DrawCuboid(DxfObject, Layer?)
  fullName: SearchAThing.Sci.BBox3D.DrawCuboid(netDxf.DxfObject, netDxf.Tables.Layer?)
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DrawCuboid
    path: src/sci/BBox3D.cs
    startLine: 460
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public IEnumerable<Face3D> DrawCuboid(DxfObject dxfObj, Layer? layer = null)
    parameters:
    - id: dxfObj
      type: netDxf.DxfObject
    - id: layer
      type: netDxf.Tables.Layer
    return:
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.Face3D}
    content.vb: Public Function DrawCuboid(dxfObj As DxfObject, layer As Layer = Nothing) As IEnumerable(Of Face3D)
  overload: SearchAThing.Sci.BBox3D.DrawCuboid*
  nameWithType.vb: BBox3D.DrawCuboid(DxfObject, Layer)
  fullName.vb: SearchAThing.Sci.BBox3D.DrawCuboid(netDxf.DxfObject, netDxf.Tables.Layer)
  name.vb: DrawCuboid(DxfObject, Layer)
- uid: SearchAThing.Sci.BBox3D.ToString
  commentId: M:SearchAThing.Sci.BBox3D.ToString
  id: ToString
  parent: SearchAThing.Sci.BBox3D
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BBox3D.ToString()
  fullName: SearchAThing.Sci.BBox3D.ToString()
  type: Method
  source:
    remote:
      path: src/sci/BBox3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/BBox3D.cs
    startLine: 472
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: stringify bbox as Max-Min=Size
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SearchAThing.Sci.BBox3D.ToString*
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.BBox3D.Empty*
  commentId: Overload:SearchAThing.Sci.BBox3D.Empty
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Empty
  name: Empty
  nameWithType: BBox3D.Empty
  fullName: SearchAThing.Sci.BBox3D.Empty
- uid: SearchAThing.Sci.BBox3D
  commentId: T:SearchAThing.Sci.BBox3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.BBox3D.html
  name: BBox3D
  nameWithType: BBox3D
  fullName: SearchAThing.Sci.BBox3D
- uid: SearchAThing.Sci.BBox3D.IsEmpty*
  commentId: Overload:SearchAThing.Sci.BBox3D.IsEmpty
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_IsEmpty
  name: IsEmpty
  nameWithType: BBox3D.IsEmpty
  fullName: SearchAThing.Sci.BBox3D.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.BBox3D.Min*
  commentId: Overload:SearchAThing.Sci.BBox3D.Min
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Min
  name: Min
  nameWithType: BBox3D.Min
  fullName: SearchAThing.Sci.BBox3D.Min
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.BBox3D.Max*
  commentId: Overload:SearchAThing.Sci.BBox3D.Max
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Max
  name: Max
  nameWithType: BBox3D.Max
  fullName: SearchAThing.Sci.BBox3D.Max
- uid: SearchAThing.Sci.BBox3D.Middle*
  commentId: Overload:SearchAThing.Sci.BBox3D.Middle
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Middle
  name: Middle
  nameWithType: BBox3D.Middle
  fullName: SearchAThing.Sci.BBox3D.Middle
- uid: SearchAThing.Sci.BBox3D.Size*
  commentId: Overload:SearchAThing.Sci.BBox3D.Size
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Size
  name: Size
  nameWithType: BBox3D.Size
  fullName: SearchAThing.Sci.BBox3D.Size
- uid: SearchAThing.Sci.BBox3D.Coords2D*
  commentId: Overload:SearchAThing.Sci.BBox3D.Coords2D
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Coords2D
  name: Coords2D
  nameWithType: BBox3D.Coords2D
  fullName: SearchAThing.Sci.BBox3D.Coords2D
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3D>
  nameWithType: IEnumerable<Vector3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>
  nameWithType.vb: IEnumerable(Of Vector3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D)
  name.vb: IEnumerable(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.BBox3D.Coords3D*
  commentId: Overload:SearchAThing.Sci.BBox3D.Coords3D
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Coords3D
  name: Coords3D
  nameWithType: BBox3D.Coords3D
  fullName: SearchAThing.Sci.BBox3D.Coords3D
- uid: SearchAThing.Sci.BBox3D.#ctor*
  commentId: Overload:SearchAThing.Sci.BBox3D.#ctor
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D__ctor
  name: BBox3D
  nameWithType: BBox3D.BBox3D
  fullName: SearchAThing.Sci.BBox3D.BBox3D
  nameWithType.vb: BBox3D.New
  fullName.vb: SearchAThing.Sci.BBox3D.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.BBox3D.Scale*
  commentId: Overload:SearchAThing.Sci.BBox3D.Scale
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Scale_System_Double_
  name: Scale
  nameWithType: BBox3D.Scale
  fullName: SearchAThing.Sci.BBox3D.Scale
- uid: SearchAThing.Sci.BBox3D.ApplyUnion*
  commentId: Overload:SearchAThing.Sci.BBox3D.ApplyUnion
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_ApplyUnion_SearchAThing_Sci_Vector3D___
  name: ApplyUnion
  nameWithType: BBox3D.ApplyUnion
  fullName: SearchAThing.Sci.BBox3D.ApplyUnion
- uid: SearchAThing.Sci.Vector3D[]
  isExternal: true
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D[]
  nameWithType: Vector3D[]
  fullName: SearchAThing.Sci.Vector3D[]
  nameWithType.vb: Vector3D()
  fullName.vb: SearchAThing.Sci.Vector3D()
  name.vb: Vector3D()
  spec.csharp:
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: (
  - name: )
- uid: SearchAThing.Sci.BBox3D.Clear*
  commentId: Overload:SearchAThing.Sci.BBox3D.Clear
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Clear
  name: Clear
  nameWithType: BBox3D.Clear
  fullName: SearchAThing.Sci.BBox3D.Clear
- uid: SearchAThing.Sci.BBox3D.Union*
  commentId: Overload:SearchAThing.Sci.BBox3D.Union
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Union_SearchAThing_Sci_Vector3D_
  name: Union
  nameWithType: BBox3D.Union
  fullName: SearchAThing.Sci.BBox3D.Union
- uid: SearchAThing.Sci.BBox3D.EqualsTol*
  commentId: Overload:SearchAThing.Sci.BBox3D.EqualsTol
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_EqualsTol_System_Double_SearchAThing_Sci_BBox3D_
  name: EqualsTol
  nameWithType: BBox3D.EqualsTol
  fullName: SearchAThing.Sci.BBox3D.EqualsTol
- uid: SearchAThing.Sci.BBox3D.Contains*
  commentId: Overload:SearchAThing.Sci.BBox3D.Contains
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Contains_System_Double_SearchAThing_Sci_BBox3D_System_Boolean_System_Boolean_
  name: Contains
  nameWithType: BBox3D.Contains
  fullName: SearchAThing.Sci.BBox3D.Contains
- uid: SearchAThing.Sci.BBox3D.Contains2D*
  commentId: Overload:SearchAThing.Sci.BBox3D.Contains2D
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Contains2D_System_Double_SearchAThing_Sci_Vector3D_
  name: Contains2D
  nameWithType: BBox3D.Contains2D
  fullName: SearchAThing.Sci.BBox3D.Contains2D
- uid: SearchAThing.Sci.BBox3D.AddMargin*
  commentId: Overload:SearchAThing.Sci.BBox3D.AddMargin
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_AddMargin_SearchAThing_Sci_Vector3D_
  name: AddMargin
  nameWithType: BBox3D.AddMargin
  fullName: SearchAThing.Sci.BBox3D.AddMargin
- uid: SearchAThing.Sci.BBox3D.ToFace3DList*
  commentId: Overload:SearchAThing.Sci.BBox3D.ToFace3DList
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_ToFace3DList
  name: ToFace3DList
  nameWithType: BBox3D.ToFace3DList
  fullName: SearchAThing.Sci.BBox3D.ToFace3DList
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.Face3D}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.Face3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Face3D>
  nameWithType: IEnumerable<Face3D>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.Face3D>
  nameWithType.vb: IEnumerable(Of Face3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.Face3D)
  name.vb: IEnumerable(Of Face3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.Face3D
    name: Face3D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Face3D
    name: Face3D
    isExternal: true
  - name: )
- uid: SearchAThing.Sci.BBox3D.CadScript*
  commentId: Overload:SearchAThing.Sci.BBox3D.CadScript
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_CadScript
  name: CadScript
  nameWithType: BBox3D.CadScript
  fullName: SearchAThing.Sci.BBox3D.CadScript
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SearchAThing.Sci.BBox3D.Points*
  commentId: Overload:SearchAThing.Sci.BBox3D.Points
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Points
  name: Points
  nameWithType: BBox3D.Points
  fullName: SearchAThing.Sci.BBox3D.Points
- uid: System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Vector3D>
  nameWithType: IReadOnlyList<Vector3D>
  fullName: System.Collections.Generic.IReadOnlyList<SearchAThing.Sci.Vector3D>
  nameWithType.vb: IReadOnlyList(Of Vector3D)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of SearchAThing.Sci.Vector3D)
  name.vb: IReadOnlyList(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.Sci.BBox3D.Faces*
  commentId: Overload:SearchAThing.Sci.BBox3D.Faces
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Faces_System_Double_
  name: Faces
  nameWithType: BBox3D.Faces
  fullName: SearchAThing.Sci.BBox3D.Faces
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Plane3DRegion}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Plane3DRegion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Plane3DRegion>
  nameWithType: IEnumerable<Plane3DRegion>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Plane3DRegion>
  nameWithType.vb: IEnumerable(Of Plane3DRegion)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Plane3DRegion)
  name.vb: IEnumerable(Of Plane3DRegion)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Plane3DRegion
    name: Plane3DRegion
    href: SearchAThing.Sci.Plane3DRegion.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Plane3DRegion
    name: Plane3DRegion
    href: SearchAThing.Sci.Plane3DRegion.html
  - name: )
- uid: SearchAThing.Sci.BBox3D.Intersect*
  commentId: Overload:SearchAThing.Sci.BBox3D.Intersect
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_Intersect_System_Double_SearchAThing_Sci_Line3D_
  name: Intersect
  nameWithType: BBox3D.Intersect
  fullName: SearchAThing.Sci.BBox3D.Intersect
- uid: SearchAThing.Sci.Line3D
  commentId: T:SearchAThing.Sci.Line3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Line3D.html
  name: Line3D
  nameWithType: Line3D
  fullName: SearchAThing.Sci.Line3D
- uid: SearchAThing.Sci.BBox3D.DrawCuboid*
  commentId: Overload:SearchAThing.Sci.BBox3D.DrawCuboid
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_DrawCuboid_netDxf_DxfObject_netDxf_Tables_Layer_
  name: DrawCuboid
  nameWithType: BBox3D.DrawCuboid
  fullName: SearchAThing.Sci.BBox3D.DrawCuboid
- uid: netDxf.DxfObject
  commentId: T:netDxf.DxfObject
  parent: netDxf
  isExternal: true
  name: DxfObject
  nameWithType: DxfObject
  fullName: netDxf.DxfObject
- uid: netDxf.Tables.Layer
  commentId: T:netDxf.Tables.Layer
  parent: netDxf.Tables
  isExternal: true
  name: Layer
  nameWithType: Layer
  fullName: netDxf.Tables.Layer
- uid: netDxf
  commentId: N:netDxf
  isExternal: true
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  isExternal: true
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Tables
    name: Tables
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Tables
    name: Tables
    isExternal: true
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SearchAThing.Sci.BBox3D.ToString*
  commentId: Overload:SearchAThing.Sci.BBox3D.ToString
  href: SearchAThing.Sci.BBox3D.html#SearchAThing_Sci_BBox3D_ToString
  name: ToString
  nameWithType: BBox3D.ToString
  fullName: SearchAThing.Sci.BBox3D.ToString
