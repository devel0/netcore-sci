### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.CoordinateSystem3D
  commentId: T:SearchAThing.Sci.CoordinateSystem3D
  id: CoordinateSystem3D
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.CoordinateSystem3DAutoEnum)
  - SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.SmartCsMode)
  - SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.CoordinateSystem3D.BaseX
  - SearchAThing.Sci.CoordinateSystem3D.BaseY
  - SearchAThing.Sci.CoordinateSystem3D.BaseZ
  - SearchAThing.Sci.CoordinateSystem3D.CadScript
  - SearchAThing.Sci.CoordinateSystem3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  - SearchAThing.Sci.CoordinateSystem3D.Equals(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  - SearchAThing.Sci.CoordinateSystem3D.FlipX
  - SearchAThing.Sci.CoordinateSystem3D.FlipY
  - SearchAThing.Sci.CoordinateSystem3D.FlipZ
  - SearchAThing.Sci.CoordinateSystem3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  - SearchAThing.Sci.CoordinateSystem3D.IsParallelTo(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  - SearchAThing.Sci.CoordinateSystem3D.Move(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.CoordinateSystem3D.Origin
  - SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Line3D,System.Double)
  - SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.CoordinateSystem3D.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.CoordinateSystem3D.Simplified
  - SearchAThing.Sci.CoordinateSystem3D.ToCadString(System.Double)
  - SearchAThing.Sci.CoordinateSystem3D.ToDxfLines(System.Double)
  - SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS(System.String)
  - SearchAThing.Sci.CoordinateSystem3D.ToString
  - SearchAThing.Sci.CoordinateSystem3D.ToString(System.Int32)
  - SearchAThing.Sci.CoordinateSystem3D.ToUCS(SearchAThing.Sci.Vector3D,System.Boolean)
  - SearchAThing.Sci.CoordinateSystem3D.ToWCS(SearchAThing.Sci.Vector3D,System.Boolean)
  - SearchAThing.Sci.CoordinateSystem3D.Transform(System.Numerics.Matrix4x4)
  - SearchAThing.Sci.CoordinateSystem3D.WCS
  - SearchAThing.Sci.CoordinateSystem3D.XY
  - SearchAThing.Sci.CoordinateSystem3D.XZ
  - SearchAThing.Sci.CoordinateSystem3D.YZ
  - SearchAThing.Sci.CoordinateSystem3D.csAutoType
  langs:
  - csharp
  - vb
  name: CoordinateSystem3D
  nameWithType: CoordinateSystem3D
  fullName: SearchAThing.Sci.CoordinateSystem3D
  type: Class
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CoordinateSystem3D
    path: src/sci/CoordinateSystem3D.cs
    startLine: 40
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    CS with origin and basex, basey, basez orthonormal vectors.

    WCS coord can be translated to this cs using ToUCS() method.

    UCS coord can be translated back to wcs using ToWCS() method.
  example: []
  syntax:
    content: public class CoordinateSystem3D
    content.vb: Public Class CoordinateSystem3D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: SearchAThing.Sci.CoordinateSystem3D.csAutoType
  commentId: P:SearchAThing.Sci.CoordinateSystem3D.csAutoType
  id: csAutoType
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: csAutoType
  nameWithType: CoordinateSystem3D.csAutoType
  fullName: SearchAThing.Sci.CoordinateSystem3D.csAutoType
  type: Property
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: csAutoType
    path: src/sci/CoordinateSystem3D.cs
    startLine: 66
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: not null if this cs basex, basey honors cs auto type rule
  example: []
  syntax:
    content: public CoordinateSystem3DAutoEnum? csAutoType { get; }
    parameters: []
    return:
      type: System.Nullable{SearchAThing.Sci.CoordinateSystem3DAutoEnum}
    content.vb: Public Property csAutoType As CoordinateSystem3DAutoEnum?
  overload: SearchAThing.Sci.CoordinateSystem3D.csAutoType*
- uid: SearchAThing.Sci.CoordinateSystem3D.Origin
  commentId: P:SearchAThing.Sci.CoordinateSystem3D.Origin
  id: Origin
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: CoordinateSystem3D.Origin
  fullName: SearchAThing.Sci.CoordinateSystem3D.Origin
  type: Property
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Origin
    path: src/sci/CoordinateSystem3D.cs
    startLine: 71
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: origin of cs where x,y,z base vectors applied
  example: []
  syntax:
    content: public Vector3D Origin { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Property Origin As Vector3D
  overload: SearchAThing.Sci.CoordinateSystem3D.Origin*
- uid: SearchAThing.Sci.CoordinateSystem3D.BaseX
  commentId: P:SearchAThing.Sci.CoordinateSystem3D.BaseX
  id: BaseX
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: BaseX
  nameWithType: CoordinateSystem3D.BaseX
  fullName: SearchAThing.Sci.CoordinateSystem3D.BaseX
  type: Property
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BaseX
    path: src/sci/CoordinateSystem3D.cs
    startLine: 76
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: cs x versor ( normalized )
  example: []
  syntax:
    content: public Vector3D BaseX { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Property BaseX As Vector3D
  overload: SearchAThing.Sci.CoordinateSystem3D.BaseX*
- uid: SearchAThing.Sci.CoordinateSystem3D.BaseY
  commentId: P:SearchAThing.Sci.CoordinateSystem3D.BaseY
  id: BaseY
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: BaseY
  nameWithType: CoordinateSystem3D.BaseY
  fullName: SearchAThing.Sci.CoordinateSystem3D.BaseY
  type: Property
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BaseY
    path: src/sci/CoordinateSystem3D.cs
    startLine: 81
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: cs y versor ( normalized )
  example: []
  syntax:
    content: public Vector3D BaseY { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Property BaseY As Vector3D
  overload: SearchAThing.Sci.CoordinateSystem3D.BaseY*
- uid: SearchAThing.Sci.CoordinateSystem3D.BaseZ
  commentId: P:SearchAThing.Sci.CoordinateSystem3D.BaseZ
  id: BaseZ
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: BaseZ
  nameWithType: CoordinateSystem3D.BaseZ
  fullName: SearchAThing.Sci.CoordinateSystem3D.BaseZ
  type: Property
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BaseZ
    path: src/sci/CoordinateSystem3D.cs
    startLine: 86
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: cs z versor ( normalized )
  example: []
  syntax:
    content: public Vector3D BaseZ { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Property BaseZ As Vector3D
  overload: SearchAThing.Sci.CoordinateSystem3D.BaseZ*
- uid: SearchAThing.Sci.CoordinateSystem3D.XY
  commentId: F:SearchAThing.Sci.CoordinateSystem3D.XY
  id: XY
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: XY
  nameWithType: CoordinateSystem3D.XY
  fullName: SearchAThing.Sci.CoordinateSystem3D.XY
  type: Field
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: XY
    path: src/sci/CoordinateSystem3D.cs
    startLine: 91
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: 'right handed XY ( Z ) : top view'
  example: []
  syntax:
    content: public static readonly CoordinateSystem3D XY
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Shared ReadOnly XY As CoordinateSystem3D
- uid: SearchAThing.Sci.CoordinateSystem3D.XZ
  commentId: F:SearchAThing.Sci.CoordinateSystem3D.XZ
  id: XZ
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: XZ
  nameWithType: CoordinateSystem3D.XZ
  fullName: SearchAThing.Sci.CoordinateSystem3D.XZ
  type: Field
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: XZ
    path: src/sci/CoordinateSystem3D.cs
    startLine: 97
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: 'right handed XZ ( -Y ) : front view'
  example: []
  syntax:
    content: public static readonly CoordinateSystem3D XZ
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Shared ReadOnly XZ As CoordinateSystem3D
- uid: SearchAThing.Sci.CoordinateSystem3D.YZ
  commentId: F:SearchAThing.Sci.CoordinateSystem3D.YZ
  id: YZ
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: YZ
  nameWithType: CoordinateSystem3D.YZ
  fullName: SearchAThing.Sci.CoordinateSystem3D.YZ
  type: Field
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: YZ
    path: src/sci/CoordinateSystem3D.cs
    startLine: 103
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: 'right handed YZ ( X ) : side view'
  example: []
  syntax:
    content: public static readonly CoordinateSystem3D YZ
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Shared ReadOnly YZ As CoordinateSystem3D
- uid: SearchAThing.Sci.CoordinateSystem3D.WCS
  commentId: F:SearchAThing.Sci.CoordinateSystem3D.WCS
  id: WCS
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: WCS
  nameWithType: CoordinateSystem3D.WCS
  fullName: SearchAThing.Sci.CoordinateSystem3D.WCS
  type: Field
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: WCS
    path: src/sci/CoordinateSystem3D.cs
    startLine: 112
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: 'world cs : basex=(1,0,0) basey=(0,1,0) basez=(0,0,1)'
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0001.cs)'
  example: []
  syntax:
    content: public static readonly CoordinateSystem3D WCS
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Shared ReadOnly WCS As CoordinateSystem3D
- uid: SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.CoordinateSystem3DAutoEnum)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.CoordinateSystem3DAutoEnum)
  id: '#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.CoordinateSystem3DAutoEnum)'
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: CoordinateSystem3D(Vector3D, Vector3D, CoordinateSystem3DAutoEnum)
  nameWithType: CoordinateSystem3D.CoordinateSystem3D(Vector3D, Vector3D, CoordinateSystem3DAutoEnum)
  fullName: SearchAThing.Sci.CoordinateSystem3D.CoordinateSystem3D(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.CoordinateSystem3DAutoEnum)
  type: Constructor
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/CoordinateSystem3D.cs
    startLine: 134
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    build coordinate system with given origin and given BaseZ on given vector normal;

    given normal will subjected to normalization;

    depending on csAutoType one or another arbitrary axis alghoritm will used to build cs from a point and a normal.
  example: []
  syntax:
    content: public CoordinateSystem3D(Vector3D o, Vector3D normal, CoordinateSystem3DAutoEnum csAutoType = CoordinateSystem3DAutoEnum.AAA)
    parameters:
    - id: o
      type: SearchAThing.Sci.Vector3D
      description: origin of cs
    - id: normal
      type: SearchAThing.Sci.Vector3D
      description: Z vector of cs
    - id: csAutoType
      type: SearchAThing.Sci.CoordinateSystem3DAutoEnum
      description: auto cs type
    content.vb: Public Sub New(o As Vector3D, normal As Vector3D, csAutoType As CoordinateSystem3DAutoEnum = CoordinateSystem3DAutoEnum.AAA)
  overload: SearchAThing.Sci.CoordinateSystem3D.#ctor*
  nameWithType.vb: CoordinateSystem3D.New(Vector3D, Vector3D, CoordinateSystem3DAutoEnum)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.New(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.CoordinateSystem3DAutoEnum)
  name.vb: New(Vector3D, Vector3D, CoordinateSystem3DAutoEnum)
- uid: SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: '#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)'
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: CoordinateSystem3D(Vector3D, Vector3D, Vector3D, Vector3D)
  nameWithType: CoordinateSystem3D.CoordinateSystem3D(Vector3D, Vector3D, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.CoordinateSystem3D.CoordinateSystem3D(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Constructor
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/CoordinateSystem3D.cs
    startLine: 191
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    construct a coordinate system with the given origin and orthonormal bases

    note that given bases MUST already normalized
  example: []
  syntax:
    content: public CoordinateSystem3D(Vector3D o, Vector3D baseX, Vector3D baseY, Vector3D baseZ)
    parameters:
    - id: o
      type: SearchAThing.Sci.Vector3D
      description: cs origin
    - id: baseX
      type: SearchAThing.Sci.Vector3D
      description: cs X base ( must already normalized )
    - id: baseY
      type: SearchAThing.Sci.Vector3D
      description: cs Y base ( must already normalized )
    - id: baseZ
      type: SearchAThing.Sci.Vector3D
      description: cs Z base ( must already normalized )
    content.vb: Public Sub New(o As Vector3D, baseX As Vector3D, baseY As Vector3D, baseZ As Vector3D)
  overload: SearchAThing.Sci.CoordinateSystem3D.#ctor*
  nameWithType.vb: CoordinateSystem3D.New(Vector3D, Vector3D, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.New(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: New(Vector3D, Vector3D, Vector3D, Vector3D)
- uid: SearchAThing.Sci.CoordinateSystem3D.Simplified
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.Simplified
  id: Simplified
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Simplified()
  nameWithType: CoordinateSystem3D.Simplified()
  fullName: SearchAThing.Sci.CoordinateSystem3D.Simplified()
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Simplified
    path: src/sci/CoordinateSystem3D.cs
    startLine: 202
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: if BaseZ matches one of XY, XZ, YZ default cs then a new cs with origin preserved but baseX, baseY, baseZ overriden will returned.
  example: []
  syntax:
    content: public CoordinateSystem3D Simplified()
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function Simplified() As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.Simplified*
- uid: SearchAThing.Sci.CoordinateSystem3D.FlipX
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.FlipX
  id: FlipX
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: FlipX()
  nameWithType: CoordinateSystem3D.FlipX()
  fullName: SearchAThing.Sci.CoordinateSystem3D.FlipX()
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: FlipX
    path: src/sci/CoordinateSystem3D.cs
    startLine: 222
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve a new cs with same origin but basex flipped (Origin, -BaseX, BaseY, -BaseZ)
  example: []
  syntax:
    content: public CoordinateSystem3D FlipX()
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function FlipX() As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.FlipX*
- uid: SearchAThing.Sci.CoordinateSystem3D.FlipY
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.FlipY
  id: FlipY
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: FlipY()
  nameWithType: CoordinateSystem3D.FlipY()
  fullName: SearchAThing.Sci.CoordinateSystem3D.FlipY()
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: FlipY
    path: src/sci/CoordinateSystem3D.cs
    startLine: 227
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve a new cs with same origin but basey flipped (Origin, BaseX, -BaseY, -BaseZ)
  example: []
  syntax:
    content: public CoordinateSystem3D FlipY()
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function FlipY() As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.FlipY*
- uid: SearchAThing.Sci.CoordinateSystem3D.FlipZ
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.FlipZ
  id: FlipZ
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: FlipZ()
  nameWithType: CoordinateSystem3D.FlipZ()
  fullName: SearchAThing.Sci.CoordinateSystem3D.FlipZ()
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: FlipZ
    path: src/sci/CoordinateSystem3D.cs
    startLine: 232
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve a new cs with same origin but basez inverted (Origin, BaseX, -BaseY, -BaseZ)
  example: []
  syntax:
    content: public CoordinateSystem3D FlipZ()
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function FlipZ() As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.FlipZ*
- uid: SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.SmartCsMode)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.SmartCsMode)
  id: '#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.SmartCsMode)'
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: CoordinateSystem3D(Vector3D, Vector3D, Vector3D, SmartCsMode)
  nameWithType: CoordinateSystem3D.CoordinateSystem3D(Vector3D, Vector3D, Vector3D, SmartCsMode)
  fullName: SearchAThing.Sci.CoordinateSystem3D.CoordinateSystem3D(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.SmartCsMode)
  type: Constructor
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/CoordinateSystem3D.cs
    startLine: 241
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Construct a right-hand coordinate system with the given origin and two vector ( not required to be normalized, nor orthogonal ).
  example: []
  syntax:
    content: public CoordinateSystem3D(Vector3D o, Vector3D v1, Vector3D v2, SmartCsMode mode = SmartCsMode.X_YQ)
    parameters:
    - id: o
      type: SearchAThing.Sci.Vector3D
      description: cs origin
    - id: v1
      type: SearchAThing.Sci.Vector3D
      description: first vector
    - id: v2
      type: SearchAThing.Sci.Vector3D
      description: second vector
    - id: mode
      type: SearchAThing.Sci.SmartCsMode
      description: specify how to consider first and second vector to build the cs
    content.vb: Public Sub New(o As Vector3D, v1 As Vector3D, v2 As Vector3D, mode As SmartCsMode = SmartCsMode.X_YQ)
  overload: SearchAThing.Sci.CoordinateSystem3D.#ctor*
  nameWithType.vb: CoordinateSystem3D.New(Vector3D, Vector3D, Vector3D, SmartCsMode)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.New(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.SmartCsMode)
  name.vb: New(Vector3D, Vector3D, Vector3D, SmartCsMode)
- uid: SearchAThing.Sci.CoordinateSystem3D.ToUCS(SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.ToUCS(SearchAThing.Sci.Vector3D,System.Boolean)
  id: ToUCS(SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: ToUCS(Vector3D, bool)
  nameWithType: CoordinateSystem3D.ToUCS(Vector3D, bool)
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToUCS(SearchAThing.Sci.Vector3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToUCS
    path: src/sci/CoordinateSystem3D.cs
    startLine: 284
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Transform wcs point to given cs
  example: []
  syntax:
    content: public Vector3D ToUCS(Vector3D p, bool evalCSOrigin = true)
    parameters:
    - id: p
      type: SearchAThing.Sci.Vector3D
      description: wcs point
    - id: evalCSOrigin
      type: System.Boolean
      description: if true CS origin will subtracted from wcs point before transform
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function ToUCS(p As Vector3D, evalCSOrigin As Boolean = True) As Vector3D
  overload: SearchAThing.Sci.CoordinateSystem3D.ToUCS*
  nameWithType.vb: CoordinateSystem3D.ToUCS(Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.ToUCS(SearchAThing.Sci.Vector3D, Boolean)
  name.vb: ToUCS(Vector3D, Boolean)
- uid: SearchAThing.Sci.CoordinateSystem3D.ToWCS(SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.ToWCS(SearchAThing.Sci.Vector3D,System.Boolean)
  id: ToWCS(SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: ToWCS(Vector3D, bool)
  nameWithType: CoordinateSystem3D.ToWCS(Vector3D, bool)
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToWCS(SearchAThing.Sci.Vector3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToWCS
    path: src/sci/CoordinateSystem3D.cs
    startLine: 296
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: transform ucs point to wcs
  example: []
  syntax:
    content: public Vector3D ToWCS(Vector3D p, bool evalCSOrigin = true)
    parameters:
    - id: p
      type: SearchAThing.Sci.Vector3D
      description: ucs point
    - id: evalCSOrigin
      type: System.Boolean
      description: if true CS origin will added after transform
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function ToWCS(p As Vector3D, evalCSOrigin As Boolean = True) As Vector3D
  overload: SearchAThing.Sci.CoordinateSystem3D.ToWCS*
  nameWithType.vb: CoordinateSystem3D.ToWCS(Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.ToWCS(SearchAThing.Sci.Vector3D, Boolean)
  name.vb: ToWCS(Vector3D, Boolean)
- uid: SearchAThing.Sci.CoordinateSystem3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  id: Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Contains(double, Vector3D, bool)
  nameWithType: CoordinateSystem3D.Contains(double, Vector3D, bool)
  fullName: SearchAThing.Sci.CoordinateSystem3D.Contains(double, SearchAThing.Sci.Vector3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains
    path: src/sci/CoordinateSystem3D.cs
    startLine: 310
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: verify if this cs XY plane contains given wcs point
  example: []
  syntax:
    content: public bool Contains(double tol, Vector3D point, bool evalCSOrigin = true)
    parameters:
    - id: tol
      type: System.Double
      description: calc tolerance
    - id: point
      type: SearchAThing.Sci.Vector3D
      description: point to verify
    - id: evalCSOrigin
      type: System.Boolean
      description: if true CS origin will subtracted before transform test
    return:
      type: System.Boolean
      description: true if point contained in cs, else otherwise
    content.vb: Public Function Contains(tol As Double, point As Vector3D, evalCSOrigin As Boolean = True) As Boolean
  overload: SearchAThing.Sci.CoordinateSystem3D.Contains*
  nameWithType.vb: CoordinateSystem3D.Contains(Double, Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.Contains(Double, SearchAThing.Sci.Vector3D, Boolean)
  name.vb: Contains(Double, Vector3D, Boolean)
- uid: SearchAThing.Sci.CoordinateSystem3D.Equals(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.Equals(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  id: Equals(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Equals(double, CoordinateSystem3D)
  nameWithType: CoordinateSystem3D.Equals(double, CoordinateSystem3D)
  fullName: SearchAThing.Sci.CoordinateSystem3D.Equals(double, SearchAThing.Sci.CoordinateSystem3D)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Equals
    path: src/sci/CoordinateSystem3D.cs
    startLine: 322
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: verify is this cs is equals to otherByLayer ( same origin, x, y, z base vectors )
  remarks: '[unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Vector3D/Vector3DTest_0001.cs)'
  example: []
  syntax:
    content: public bool Equals(double tol, CoordinateSystem3D other)
    parameters:
    - id: tol
      type: System.Double
      description: calc tolerance ( for origin check )
    - id: other
      type: SearchAThing.Sci.CoordinateSystem3D
      description: cs to check equality against
    return:
      type: System.Boolean
      description: true if this cs equals the given on, false otherwise
    content.vb: Public Function Equals(tol As Double, other As CoordinateSystem3D) As Boolean
  overload: SearchAThing.Sci.CoordinateSystem3D.Equals*
  nameWithType.vb: CoordinateSystem3D.Equals(Double, CoordinateSystem3D)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.Equals(Double, SearchAThing.Sci.CoordinateSystem3D)
  name.vb: Equals(Double, CoordinateSystem3D)
- uid: SearchAThing.Sci.CoordinateSystem3D.IsParallelTo(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.IsParallelTo(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  id: IsParallelTo(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: IsParallelTo(double, CoordinateSystem3D)
  nameWithType: CoordinateSystem3D.IsParallelTo(double, CoordinateSystem3D)
  fullName: SearchAThing.Sci.CoordinateSystem3D.IsParallelTo(double, SearchAThing.Sci.CoordinateSystem3D)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: IsParallelTo
    path: src/sci/CoordinateSystem3D.cs
    startLine: 331
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this cs have Z base parallel to the other given cs
  example: []
  syntax:
    content: public bool IsParallelTo(double tol, CoordinateSystem3D other)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.CoordinateSystem3D
    return:
      type: System.Boolean
    content.vb: Public Function IsParallelTo(tol As Double, other As CoordinateSystem3D) As Boolean
  overload: SearchAThing.Sci.CoordinateSystem3D.IsParallelTo*
  nameWithType.vb: CoordinateSystem3D.IsParallelTo(Double, CoordinateSystem3D)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.IsParallelTo(Double, SearchAThing.Sci.CoordinateSystem3D)
  name.vb: IsParallelTo(Double, CoordinateSystem3D)
- uid: SearchAThing.Sci.CoordinateSystem3D.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.Move(SearchAThing.Sci.Vector3D)
  id: Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Move(Vector3D)
  nameWithType: CoordinateSystem3D.Move(Vector3D)
  fullName: SearchAThing.Sci.CoordinateSystem3D.Move(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Move
    path: src/sci/CoordinateSystem3D.cs
    startLine: 336
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return another cs with origin translated
  example: []
  syntax:
    content: public CoordinateSystem3D Move(Vector3D delta)
    parameters:
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function Move(delta As Vector3D) As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.Move*
- uid: SearchAThing.Sci.CoordinateSystem3D.Transform(System.Numerics.Matrix4x4)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.Transform(System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Matrix4x4)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Transform(Matrix4x4)
  nameWithType: CoordinateSystem3D.Transform(Matrix4x4)
  fullName: SearchAThing.Sci.CoordinateSystem3D.Transform(System.Numerics.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Transform
    path: src/sci/CoordinateSystem3D.cs
    startLine: 342
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create transformed CS by given transformation matrix
  example: []
  syntax:
    content: public CoordinateSystem3D Transform(Matrix4x4 m)
    parameters:
    - id: m
      type: System.Numerics.Matrix4x4
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function Transform(m As Matrix4x4) As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.Transform*
- uid: SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Line3D,System.Double)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Line3D,System.Double)
  id: Rotate(SearchAThing.Sci.Line3D,System.Double)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Rotate(Line3D, double)
  nameWithType: CoordinateSystem3D.Rotate(Line3D, double)
  fullName: SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Line3D, double)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Rotate
    path: src/sci/CoordinateSystem3D.cs
    startLine: 354
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return another cs rotated respect given axis
  example: []
  syntax:
    content: public CoordinateSystem3D Rotate(Line3D axis, double angleRad)
    parameters:
    - id: axis
      type: SearchAThing.Sci.Line3D
    - id: angleRad
      type: System.Double
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function Rotate(axis As Line3D, angleRad As Double) As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.Rotate*
  nameWithType.vb: CoordinateSystem3D.Rotate(Line3D, Double)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Line3D, Double)
  name.vb: Rotate(Line3D, Double)
- uid: SearchAThing.Sci.CoordinateSystem3D.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: RotateAs(double, Vector3D, Vector3D)
  nameWithType: CoordinateSystem3D.RotateAs(double, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.CoordinateSystem3D.RotateAs(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAs
    path: src/sci/CoordinateSystem3D.cs
    startLine: 370
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return another cs rotated as from goes toward to
  example: []
  syntax:
    content: public CoordinateSystem3D RotateAs(double tol, Vector3D from, Vector3D to)
    parameters:
    - id: tol
      type: System.Double
    - id: from
      type: SearchAThing.Sci.Vector3D
    - id: to
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function RotateAs(tol As Double, from As Vector3D, [to] As Vector3D) As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.RotateAs*
  nameWithType.vb: CoordinateSystem3D.RotateAs(Double, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.RotateAs(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: RotateAs(Double, Vector3D, Vector3D)
- uid: SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Vector3D,System.Double)
  id: Rotate(SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Rotate(Vector3D, double)
  nameWithType: CoordinateSystem3D.Rotate(Vector3D, double)
  fullName: SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Vector3D, double)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Rotate
    path: src/sci/CoordinateSystem3D.cs
    startLine: 386
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return another cs with same origin and base vector rotated about given vector
  example: []
  syntax:
    content: public CoordinateSystem3D Rotate(Vector3D vectorAxis, double angleRad)
    parameters:
    - id: vectorAxis
      type: SearchAThing.Sci.Vector3D
    - id: angleRad
      type: System.Double
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Function Rotate(vectorAxis As Vector3D, angleRad As Double) As CoordinateSystem3D
  overload: SearchAThing.Sci.CoordinateSystem3D.Rotate*
  nameWithType.vb: CoordinateSystem3D.Rotate(Vector3D, Double)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.Rotate(SearchAThing.Sci.Vector3D, Double)
  name.vb: Rotate(Vector3D, Double)
- uid: SearchAThing.Sci.CoordinateSystem3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  id: Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: Intersect(double, CoordinateSystem3D)
  nameWithType: CoordinateSystem3D.Intersect(double, CoordinateSystem3D)
  fullName: SearchAThing.Sci.CoordinateSystem3D.Intersect(double, SearchAThing.Sci.CoordinateSystem3D)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/CoordinateSystem3D.cs
    startLine: 399
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return intersect line between two cs xy planes
  example: []
  syntax:
    content: public Line3D? Intersect(double tol, CoordinateSystem3D other)
    parameters:
    - id: tol
      type: System.Double
      description: len tolernace
    - id: other
      type: SearchAThing.Sci.CoordinateSystem3D
      description: other cs
    return:
      type: SearchAThing.Sci.Line3D
      description: null if cs parallel to the given other
    content.vb: Public Function Intersect(tol As Double, other As CoordinateSystem3D) As Line3D
  overload: SearchAThing.Sci.CoordinateSystem3D.Intersect*
  nameWithType.vb: CoordinateSystem3D.Intersect(Double, CoordinateSystem3D)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.Intersect(Double, SearchAThing.Sci.CoordinateSystem3D)
  name.vb: Intersect(Double, CoordinateSystem3D)
- uid: SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS(System.String)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS(System.String)
  id: ToDxfUCS(System.String)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: ToDxfUCS(string)
  nameWithType: CoordinateSystem3D.ToDxfUCS(string)
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS(string)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToDxfUCS
    path: src/sci/CoordinateSystem3D.cs
    startLine: 417
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public UCS ToDxfUCS(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: netDxf.Tables.UCS
    content.vb: Public Function ToDxfUCS(name As String) As UCS
  overload: SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS*
  nameWithType.vb: CoordinateSystem3D.ToDxfUCS(String)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS(String)
  name.vb: ToDxfUCS(String)
- uid: SearchAThing.Sci.CoordinateSystem3D.ToDxfLines(System.Double)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.ToDxfLines(System.Double)
  id: ToDxfLines(System.Double)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: ToDxfLines(double)
  nameWithType: CoordinateSystem3D.ToDxfLines(double)
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToDxfLines(double)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToDxfLines
    path: src/sci/CoordinateSystem3D.cs
    startLine: 422
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve a set of 3 dxf line (RED:x, GREEN:y, BLUE:z) representing CS
  example: []
  syntax:
    content: public IEnumerable<EntityObject> ToDxfLines(double len = 1)
    parameters:
    - id: len
      type: System.Double
    return:
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
    content.vb: Public Function ToDxfLines(len As Double = 1) As IEnumerable(Of EntityObject)
  overload: SearchAThing.Sci.CoordinateSystem3D.ToDxfLines*
  nameWithType.vb: CoordinateSystem3D.ToDxfLines(Double)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.ToDxfLines(Double)
  name.vb: ToDxfLines(Double)
- uid: SearchAThing.Sci.CoordinateSystem3D.ToString(System.Int32)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: ToString(int)
  nameWithType: CoordinateSystem3D.ToString(int)
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToString(int)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/CoordinateSystem3D.cs
    startLine: 433
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: debug string
  example: []
  syntax:
    content: public string ToString(int digits)
    parameters:
    - id: digits
      type: System.Int32
    return:
      type: System.String
      description: formatted representation of cs origin, x, y, z
    content.vb: Public Function ToString(digits As Integer) As String
  overload: SearchAThing.Sci.CoordinateSystem3D.ToString*
  nameWithType.vb: CoordinateSystem3D.ToString(Integer)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.ToString(Integer)
  name.vb: ToString(Integer)
- uid: SearchAThing.Sci.CoordinateSystem3D.ToString
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.ToString
  id: ToString
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CoordinateSystem3D.ToString()
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToString()
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/CoordinateSystem3D.cs
    startLine: 435
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SearchAThing.Sci.CoordinateSystem3D.ToString*
- uid: SearchAThing.Sci.CoordinateSystem3D.ToCadString(System.Double)
  commentId: M:SearchAThing.Sci.CoordinateSystem3D.ToCadString(System.Double)
  id: ToCadString(System.Double)
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: ToCadString(double)
  nameWithType: CoordinateSystem3D.ToCadString(double)
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToCadString(double)
  type: Method
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToCadString
    path: src/sci/CoordinateSystem3D.cs
    startLine: 442
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: script to paste in cad to draw cs rgb mode ( x=red, y=green, z=blue )
  example: []
  syntax:
    content: public string ToCadString(double axisLen)
    parameters:
    - id: axisLen
      type: System.Double
      description: length of x,y,z axes
    return:
      type: System.String
      description: cad script
    content.vb: Public Function ToCadString(axisLen As Double) As String
  overload: SearchAThing.Sci.CoordinateSystem3D.ToCadString*
  nameWithType.vb: CoordinateSystem3D.ToCadString(Double)
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.ToCadString(Double)
  name.vb: ToCadString(Double)
- uid: SearchAThing.Sci.CoordinateSystem3D.CadScript
  commentId: P:SearchAThing.Sci.CoordinateSystem3D.CadScript
  id: CadScript
  parent: SearchAThing.Sci.CoordinateSystem3D
  langs:
  - csharp
  - vb
  name: CadScript
  nameWithType: CoordinateSystem3D.CadScript
  fullName: SearchAThing.Sci.CoordinateSystem3D.CadScript
  type: Property
  source:
    remote:
      path: src/sci/CoordinateSystem3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CadScript
    path: src/sci/CoordinateSystem3D.cs
    startLine: 464
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: script to paste in cad ( axis length = 1 )
  example: []
  syntax:
    content: public string CadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property CadScript As String
  overload: SearchAThing.Sci.CoordinateSystem3D.CadScript*
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.CoordinateSystem3D.csAutoType*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.csAutoType
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_csAutoType
  name: csAutoType
  nameWithType: CoordinateSystem3D.csAutoType
  fullName: SearchAThing.Sci.CoordinateSystem3D.csAutoType
- uid: System.Nullable{SearchAThing.Sci.CoordinateSystem3DAutoEnum}
  commentId: T:System.Nullable{SearchAThing.Sci.CoordinateSystem3DAutoEnum}
  parent: System
  definition: System.Nullable`1
  href: SearchAThing.Sci.CoordinateSystem3DAutoEnum.html
  name: CoordinateSystem3DAutoEnum?
  nameWithType: CoordinateSystem3DAutoEnum?
  fullName: SearchAThing.Sci.CoordinateSystem3DAutoEnum?
  spec.csharp:
  - uid: SearchAThing.Sci.CoordinateSystem3DAutoEnum
    name: CoordinateSystem3DAutoEnum
    href: SearchAThing.Sci.CoordinateSystem3DAutoEnum.html
  - name: '?'
  spec.vb:
  - uid: SearchAThing.Sci.CoordinateSystem3DAutoEnum
    name: CoordinateSystem3DAutoEnum
    href: SearchAThing.Sci.CoordinateSystem3DAutoEnum.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.Sci.CoordinateSystem3D.Origin*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.Origin
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_Origin
  name: Origin
  nameWithType: CoordinateSystem3D.Origin
  fullName: SearchAThing.Sci.CoordinateSystem3D.Origin
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.CoordinateSystem3D.BaseX*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.BaseX
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_BaseX
  name: BaseX
  nameWithType: CoordinateSystem3D.BaseX
  fullName: SearchAThing.Sci.CoordinateSystem3D.BaseX
- uid: SearchAThing.Sci.CoordinateSystem3D.BaseY*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.BaseY
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_BaseY
  name: BaseY
  nameWithType: CoordinateSystem3D.BaseY
  fullName: SearchAThing.Sci.CoordinateSystem3D.BaseY
- uid: SearchAThing.Sci.CoordinateSystem3D.BaseZ*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.BaseZ
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_BaseZ
  name: BaseZ
  nameWithType: CoordinateSystem3D.BaseZ
  fullName: SearchAThing.Sci.CoordinateSystem3D.BaseZ
- uid: SearchAThing.Sci.CoordinateSystem3D
  commentId: T:SearchAThing.Sci.CoordinateSystem3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.CoordinateSystem3D.html
  name: CoordinateSystem3D
  nameWithType: CoordinateSystem3D
  fullName: SearchAThing.Sci.CoordinateSystem3D
- uid: SearchAThing.Sci.CoordinateSystem3D.#ctor*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.#ctor
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D__ctor_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_SearchAThing_Sci_CoordinateSystem3DAutoEnum_
  name: CoordinateSystem3D
  nameWithType: CoordinateSystem3D.CoordinateSystem3D
  fullName: SearchAThing.Sci.CoordinateSystem3D.CoordinateSystem3D
  nameWithType.vb: CoordinateSystem3D.New
  fullName.vb: SearchAThing.Sci.CoordinateSystem3D.New
  name.vb: New
- uid: SearchAThing.Sci.CoordinateSystem3DAutoEnum
  commentId: T:SearchAThing.Sci.CoordinateSystem3DAutoEnum
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.CoordinateSystem3DAutoEnum.html
  name: CoordinateSystem3DAutoEnum
  nameWithType: CoordinateSystem3DAutoEnum
  fullName: SearchAThing.Sci.CoordinateSystem3DAutoEnum
- uid: SearchAThing.Sci.CoordinateSystem3D.Simplified*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.Simplified
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_Simplified
  name: Simplified
  nameWithType: CoordinateSystem3D.Simplified
  fullName: SearchAThing.Sci.CoordinateSystem3D.Simplified
- uid: SearchAThing.Sci.CoordinateSystem3D.FlipX*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.FlipX
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_FlipX
  name: FlipX
  nameWithType: CoordinateSystem3D.FlipX
  fullName: SearchAThing.Sci.CoordinateSystem3D.FlipX
- uid: SearchAThing.Sci.CoordinateSystem3D.FlipY*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.FlipY
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_FlipY
  name: FlipY
  nameWithType: CoordinateSystem3D.FlipY
  fullName: SearchAThing.Sci.CoordinateSystem3D.FlipY
- uid: SearchAThing.Sci.CoordinateSystem3D.FlipZ*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.FlipZ
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_FlipZ
  name: FlipZ
  nameWithType: CoordinateSystem3D.FlipZ
  fullName: SearchAThing.Sci.CoordinateSystem3D.FlipZ
- uid: SearchAThing.Sci.SmartCsMode
  commentId: T:SearchAThing.Sci.SmartCsMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.SmartCsMode.html
  name: SmartCsMode
  nameWithType: SmartCsMode
  fullName: SearchAThing.Sci.SmartCsMode
- uid: SearchAThing.Sci.CoordinateSystem3D.ToUCS*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.ToUCS
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_ToUCS_SearchAThing_Sci_Vector3D_System_Boolean_
  name: ToUCS
  nameWithType: CoordinateSystem3D.ToUCS
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToUCS
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.CoordinateSystem3D.ToWCS*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.ToWCS
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_ToWCS_SearchAThing_Sci_Vector3D_System_Boolean_
  name: ToWCS
  nameWithType: CoordinateSystem3D.ToWCS
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToWCS
- uid: SearchAThing.Sci.CoordinateSystem3D.Contains*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.Contains
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_Contains_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_
  name: Contains
  nameWithType: CoordinateSystem3D.Contains
  fullName: SearchAThing.Sci.CoordinateSystem3D.Contains
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.CoordinateSystem3D.Equals*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.Equals
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_Equals_System_Double_SearchAThing_Sci_CoordinateSystem3D_
  name: Equals
  nameWithType: CoordinateSystem3D.Equals
  fullName: SearchAThing.Sci.CoordinateSystem3D.Equals
- uid: SearchAThing.Sci.CoordinateSystem3D.IsParallelTo*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.IsParallelTo
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_IsParallelTo_System_Double_SearchAThing_Sci_CoordinateSystem3D_
  name: IsParallelTo
  nameWithType: CoordinateSystem3D.IsParallelTo
  fullName: SearchAThing.Sci.CoordinateSystem3D.IsParallelTo
- uid: SearchAThing.Sci.CoordinateSystem3D.Move*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.Move
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_Move_SearchAThing_Sci_Vector3D_
  name: Move
  nameWithType: CoordinateSystem3D.Move
  fullName: SearchAThing.Sci.CoordinateSystem3D.Move
- uid: SearchAThing.Sci.CoordinateSystem3D.Transform*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.Transform
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_Transform_System_Numerics_Matrix4x4_
  name: Transform
  nameWithType: CoordinateSystem3D.Transform
  fullName: SearchAThing.Sci.CoordinateSystem3D.Transform
- uid: System.Numerics.Matrix4x4
  commentId: T:System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.matrix4x4
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: System.Numerics.Matrix4x4
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: SearchAThing.Sci.CoordinateSystem3D.Rotate*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.Rotate
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_Rotate_SearchAThing_Sci_Line3D_System_Double_
  name: Rotate
  nameWithType: CoordinateSystem3D.Rotate
  fullName: SearchAThing.Sci.CoordinateSystem3D.Rotate
- uid: SearchAThing.Sci.Line3D
  commentId: T:SearchAThing.Sci.Line3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Line3D.html
  name: Line3D
  nameWithType: Line3D
  fullName: SearchAThing.Sci.Line3D
- uid: SearchAThing.Sci.CoordinateSystem3D.RotateAs*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.RotateAs
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_RotateAs_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: RotateAs
  nameWithType: CoordinateSystem3D.RotateAs
  fullName: SearchAThing.Sci.CoordinateSystem3D.RotateAs
- uid: SearchAThing.Sci.CoordinateSystem3D.Intersect*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.Intersect
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_Intersect_System_Double_SearchAThing_Sci_CoordinateSystem3D_
  name: Intersect
  nameWithType: CoordinateSystem3D.Intersect
  fullName: SearchAThing.Sci.CoordinateSystem3D.Intersect
- uid: SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_ToDxfUCS_System_String_
  name: ToDxfUCS
  nameWithType: CoordinateSystem3D.ToDxfUCS
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToDxfUCS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: netDxf.Tables.UCS
  commentId: T:netDxf.Tables.UCS
  parent: netDxf.Tables
  isExternal: true
  name: UCS
  nameWithType: UCS
  fullName: netDxf.Tables.UCS
- uid: netDxf.Tables
  commentId: N:netDxf.Tables
  isExternal: true
  name: netDxf.Tables
  nameWithType: netDxf.Tables
  fullName: netDxf.Tables
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Tables
    name: Tables
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Tables
    name: Tables
    isExternal: true
- uid: SearchAThing.Sci.CoordinateSystem3D.ToDxfLines*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.ToDxfLines
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_ToDxfLines_System_Double_
  name: ToDxfLines
  nameWithType: CoordinateSystem3D.ToDxfLines
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToDxfLines
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.EntityObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<EntityObject>
  nameWithType: IEnumerable<EntityObject>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.EntityObject>
  nameWithType.vb: IEnumerable(Of EntityObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.EntityObject)
  name.vb: IEnumerable(Of EntityObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.EntityObject
    name: EntityObject
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.CoordinateSystem3D.ToString*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.ToString
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_ToString_System_Int32_
  name: ToString
  nameWithType: CoordinateSystem3D.ToString
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToString
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SearchAThing.Sci.CoordinateSystem3D.ToCadString*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.ToCadString
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_ToCadString_System_Double_
  name: ToCadString
  nameWithType: CoordinateSystem3D.ToCadString
  fullName: SearchAThing.Sci.CoordinateSystem3D.ToCadString
- uid: SearchAThing.Sci.CoordinateSystem3D.CadScript*
  commentId: Overload:SearchAThing.Sci.CoordinateSystem3D.CadScript
  href: SearchAThing.Sci.CoordinateSystem3D.html#SearchAThing_Sci_CoordinateSystem3D_CadScript
  name: CadScript
  nameWithType: CoordinateSystem3D.CadScript
  fullName: SearchAThing.Sci.CoordinateSystem3D.CadScript
