### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Face
  commentId: T:SearchAThing.Sci.Face
  id: Face
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Face.#ctor(SearchAThing.Sci.Loop)
  - SearchAThing.Sci.Face.#ctor(SearchAThing.Sci.Plane3D,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Loop})
  - SearchAThing.Sci.Face.Area
  - SearchAThing.Sci.Face.Boolean(System.Double,SearchAThing.Sci.Face,SearchAThing.Sci.Face.BooleanMode,netDxf.DxfDocument)
  - SearchAThing.Sci.Face.Contains(System.Double,SearchAThing.Sci.Edge,System.Boolean,SearchAThing.Sci.LoopContainsEdgeMode)
  - SearchAThing.Sci.Face.DxfEntities(System.Double)
  - SearchAThing.Sci.Face.Loops
  - SearchAThing.Sci.Face.Move(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Face.Overlap(System.Double,SearchAThing.Sci.Edge)
  - SearchAThing.Sci.Face.Plane
  - SearchAThing.Sci.Face.Project(System.Double,SearchAThing.Sci.Plane3D)
  - SearchAThing.Sci.Face.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Face.ToHatch(System.Double,netDxf.Entities.HatchPattern,System.Boolean)
  - SearchAThing.Sci.Face.ToString
  langs:
  - csharp
  - vb
  name: Face
  nameWithType: Face
  fullName: SearchAThing.Sci.Face
  type: Class
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Face
    path: src/sci/Face.cs
    startLine: 5
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Planar face with one (outer) or more loops (inners)
  example: []
  syntax:
    content: public class Face
    content.vb: Public Class Face
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: SearchAThing.Sci.Face.Plane
  commentId: P:SearchAThing.Sci.Face.Plane
  id: Plane
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Plane
  nameWithType: Face.Plane
  fullName: SearchAThing.Sci.Face.Plane
  type: Property
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Plane
    path: src/sci/Face.cs
    startLine: 7
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Plane3D Plane { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Plane3D
    content.vb: Public Property Plane As Plane3D
  overload: SearchAThing.Sci.Face.Plane*
- uid: SearchAThing.Sci.Face.Loops
  commentId: P:SearchAThing.Sci.Face.Loops
  id: Loops
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Loops
  nameWithType: Face.Loops
  fullName: SearchAThing.Sci.Face.Loops
  type: Property
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Loops
    path: src/sci/Face.cs
    startLine: 9
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public IReadOnlyList<Loop> Loops { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Loop}
    content.vb: Public Property Loops As IReadOnlyList(Of [Loop])
  overload: SearchAThing.Sci.Face.Loops*
- uid: SearchAThing.Sci.Face.#ctor(SearchAThing.Sci.Plane3D,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Loop})
  commentId: M:SearchAThing.Sci.Face.#ctor(SearchAThing.Sci.Plane3D,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Loop})
  id: '#ctor(SearchAThing.Sci.Plane3D,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Loop})'
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Face(Plane3D, IEnumerable<Loop>)
  nameWithType: Face.Face(Plane3D, IEnumerable<Loop>)
  fullName: SearchAThing.Sci.Face.Face(SearchAThing.Sci.Plane3D, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Loop>)
  type: Constructor
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Face.cs
    startLine: 16
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: planar face with outer and optional inner loops
  example: []
  syntax:
    content: public Face(Plane3D plane, IEnumerable<Loop> loops)
    parameters:
    - id: plane
      type: SearchAThing.Sci.Plane3D
      description: plane where loop lies
    - id: loops
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Loop}
      description: loops ( first is the outer )
    content.vb: Public Sub New(plane As Plane3D, loops As IEnumerable(Of [Loop]))
  overload: SearchAThing.Sci.Face.#ctor*
  nameWithType.vb: Face.New(Plane3D, IEnumerable(Of Loop))
  fullName.vb: SearchAThing.Sci.Face.New(SearchAThing.Sci.Plane3D, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Loop))
  name.vb: New(Plane3D, IEnumerable(Of Loop))
- uid: SearchAThing.Sci.Face.#ctor(SearchAThing.Sci.Loop)
  commentId: M:SearchAThing.Sci.Face.#ctor(SearchAThing.Sci.Loop)
  id: '#ctor(SearchAThing.Sci.Loop)'
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Face(Loop)
  nameWithType: Face.Face(Loop)
  fullName: SearchAThing.Sci.Face.Face(SearchAThing.Sci.Loop)
  type: Constructor
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Face.cs
    startLine: 25
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a face with given outer loop
  example: []
  syntax:
    content: public Face(Loop loop)
    parameters:
    - id: loop
      type: SearchAThing.Sci.Loop
    content.vb: Public Sub New([loop] As [Loop])
  overload: SearchAThing.Sci.Face.#ctor*
  nameWithType.vb: Face.New(Loop)
  fullName.vb: SearchAThing.Sci.Face.New(SearchAThing.Sci.Loop)
  name.vb: New(Loop)
- uid: SearchAThing.Sci.Face.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Face.Move(SearchAThing.Sci.Vector3D)
  id: Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Move(Vector3D)
  nameWithType: Face.Move(Vector3D)
  fullName: SearchAThing.Sci.Face.Move(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Move
    path: src/sci/Face.cs
    startLine: 34
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return new face translated of given delta
  example: []
  syntax:
    content: public Face Move(Vector3D delta)
    parameters:
    - id: delta
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Face
    content.vb: Public Function Move(delta As Vector3D) As Face
  overload: SearchAThing.Sci.Face.Move*
- uid: SearchAThing.Sci.Face.Area
  commentId: P:SearchAThing.Sci.Face.Area
  id: Area
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Area
  nameWithType: Face.Area
  fullName: SearchAThing.Sci.Face.Area
  type: Property
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Area
    path: src/sci/Face.cs
    startLine: 42
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: (cached) area of face ( outer loop area - inner loops area )
  example: []
  syntax:
    content: public double Area { get; }
    parameters: []
    return:
      type: System.Double
      description: ''
    content.vb: Public ReadOnly Property Area As Double
  overload: SearchAThing.Sci.Face.Area*
- uid: SearchAThing.Sci.Face.Boolean(System.Double,SearchAThing.Sci.Face,SearchAThing.Sci.Face.BooleanMode,netDxf.DxfDocument)
  commentId: M:SearchAThing.Sci.Face.Boolean(System.Double,SearchAThing.Sci.Face,SearchAThing.Sci.Face.BooleanMode,netDxf.DxfDocument)
  id: Boolean(System.Double,SearchAThing.Sci.Face,SearchAThing.Sci.Face.BooleanMode,netDxf.DxfDocument)
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Boolean(double, Face, BooleanMode, DxfDocument?)
  nameWithType: Face.Boolean(double, Face, Face.BooleanMode, DxfDocument?)
  fullName: SearchAThing.Sci.Face.Boolean(double, SearchAThing.Sci.Face, SearchAThing.Sci.Face.BooleanMode, netDxf.DxfDocument?)
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Boolean
    path: src/sci/Face.cs
    startLine: 140
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    boolean operation with this and other loops.

    precondition: must coplanar
  example: []
  syntax:
    content: public IEnumerable<Face> Boolean(double tol, Face other, Face.BooleanMode mode = BooleanMode.Intersect, DxfDocument? debugDxf = null)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Face
    - id: mode
      type: SearchAThing.Sci.Face.BooleanMode
    - id: debugDxf
      type: netDxf.DxfDocument
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Face}
    content.vb: Public Function [Boolean](tol As Double, other As Face, mode As Face.BooleanMode = BooleanMode.Intersect, debugDxf As DxfDocument = Nothing) As IEnumerable(Of Face)
  overload: SearchAThing.Sci.Face.Boolean*
  nameWithType.vb: Face.Boolean(Double, Face, Face.BooleanMode, DxfDocument)
  fullName.vb: SearchAThing.Sci.Face.Boolean(Double, SearchAThing.Sci.Face, SearchAThing.Sci.Face.BooleanMode, netDxf.DxfDocument)
  name.vb: Boolean(Double, Face, BooleanMode, DxfDocument)
- uid: SearchAThing.Sci.Face.Contains(System.Double,SearchAThing.Sci.Edge,System.Boolean,SearchAThing.Sci.LoopContainsEdgeMode)
  commentId: M:SearchAThing.Sci.Face.Contains(System.Double,SearchAThing.Sci.Edge,System.Boolean,SearchAThing.Sci.LoopContainsEdgeMode)
  id: Contains(System.Double,SearchAThing.Sci.Edge,System.Boolean,SearchAThing.Sci.LoopContainsEdgeMode)
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Contains(double, Edge, bool, LoopContainsEdgeMode)
  nameWithType: Face.Contains(double, Edge, bool, LoopContainsEdgeMode)
  fullName: SearchAThing.Sci.Face.Contains(double, SearchAThing.Sci.Edge, bool, SearchAThing.Sci.LoopContainsEdgeMode)
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains
    path: src/sci/Face.cs
    startLine: 1013
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if given edge is contained into this face
  example: []
  syntax:
    content: public bool Contains(double tol, Edge edge, bool evalOnlyOuter, LoopContainsEdgeMode mode = LoopContainsEdgeMode.InsideExcludedPerimeter)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: edge
      type: SearchAThing.Sci.Edge
      description: edge to test
    - id: evalOnlyOuter
      type: System.Boolean
      description: if true and edge is contained into and inner the test returns false
    - id: mode
      type: SearchAThing.Sci.LoopContainsEdgeMode
      description: type of contains test
    return:
      type: System.Boolean
    content.vb: Public Function Contains(tol As Double, edge As Edge, evalOnlyOuter As Boolean, mode As LoopContainsEdgeMode = LoopContainsEdgeMode.InsideExcludedPerimeter) As Boolean
  overload: SearchAThing.Sci.Face.Contains*
  nameWithType.vb: Face.Contains(Double, Edge, Boolean, LoopContainsEdgeMode)
  fullName.vb: SearchAThing.Sci.Face.Contains(Double, SearchAThing.Sci.Edge, Boolean, SearchAThing.Sci.LoopContainsEdgeMode)
  name.vb: Contains(Double, Edge, Boolean, LoopContainsEdgeMode)
- uid: SearchAThing.Sci.Face.Overlap(System.Double,SearchAThing.Sci.Edge)
  commentId: M:SearchAThing.Sci.Face.Overlap(System.Double,SearchAThing.Sci.Edge)
  id: Overlap(System.Double,SearchAThing.Sci.Edge)
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Overlap(double, Edge)
  nameWithType: Face.Overlap(double, Edge)
  fullName: SearchAThing.Sci.Face.Overlap(double, SearchAThing.Sci.Edge)
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Overlap
    path: src/sci/Face.cs
    startLine: 1032
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: test if edge overlap any of loop edges of this face
  example: []
  syntax:
    content: public bool Overlap(double tol, Edge edge)
    parameters:
    - id: tol
      type: System.Double
    - id: edge
      type: SearchAThing.Sci.Edge
    return:
      type: System.Boolean
    content.vb: Public Function Overlap(tol As Double, edge As Edge) As Boolean
  overload: SearchAThing.Sci.Face.Overlap*
  nameWithType.vb: Face.Overlap(Double, Edge)
  fullName.vb: SearchAThing.Sci.Face.Overlap(Double, SearchAThing.Sci.Edge)
  name.vb: Overlap(Double, Edge)
- uid: SearchAThing.Sci.Face.DxfEntities(System.Double)
  commentId: M:SearchAThing.Sci.Face.DxfEntities(System.Double)
  id: DxfEntities(System.Double)
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: DxfEntities(double)
  nameWithType: Face.DxfEntities(double)
  fullName: SearchAThing.Sci.Face.DxfEntities(double)
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DxfEntities
    path: src/sci/Face.cs
    startLine: 1048
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public IEnumerable<Polyline2D> DxfEntities(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: System.Collections.Generic.IEnumerable{netDxf.Entities.Polyline2D}
    content.vb: Public Function DxfEntities(tol As Double) As IEnumerable(Of Polyline2D)
  overload: SearchAThing.Sci.Face.DxfEntities*
  nameWithType.vb: Face.DxfEntities(Double)
  fullName.vb: SearchAThing.Sci.Face.DxfEntities(Double)
  name.vb: DxfEntities(Double)
- uid: SearchAThing.Sci.Face.ToHatch(System.Double,netDxf.Entities.HatchPattern,System.Boolean)
  commentId: M:SearchAThing.Sci.Face.ToHatch(System.Double,netDxf.Entities.HatchPattern,System.Boolean)
  id: ToHatch(System.Double,netDxf.Entities.HatchPattern,System.Boolean)
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: ToHatch(double, HatchPattern, bool)
  nameWithType: Face.ToHatch(double, HatchPattern, bool)
  fullName: SearchAThing.Sci.Face.ToHatch(double, netDxf.Entities.HatchPattern, bool)
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToHatch
    path: src/sci/Face.cs
    startLine: 1053
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create hatch with outer and inner boundaries
  example: []
  syntax:
    content: public Hatch? ToHatch(double tol, HatchPattern pattern, bool associative = true)
    parameters:
    - id: tol
      type: System.Double
    - id: pattern
      type: netDxf.Entities.HatchPattern
    - id: associative
      type: System.Boolean
    return:
      type: netDxf.Entities.Hatch
    content.vb: Public Function ToHatch(tol As Double, pattern As HatchPattern, associative As Boolean = True) As Hatch
  overload: SearchAThing.Sci.Face.ToHatch*
  nameWithType.vb: Face.ToHatch(Double, HatchPattern, Boolean)
  fullName.vb: SearchAThing.Sci.Face.ToHatch(Double, netDxf.Entities.HatchPattern, Boolean)
  name.vb: ToHatch(Double, HatchPattern, Boolean)
- uid: SearchAThing.Sci.Face.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Face.RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: RotateAs(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: RotateAs(double, Vector3D, Vector3D)
  nameWithType: Face.RotateAs(double, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Face.RotateAs(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: RotateAs
    path: src/sci/Face.cs
    startLine: 1070
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: rotate cs and edges like point from rotate toward to
  example: []
  syntax:
    content: public Face RotateAs(double tol, Vector3D from, Vector3D to)
    parameters:
    - id: tol
      type: System.Double
    - id: from
      type: SearchAThing.Sci.Vector3D
    - id: to
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Face
    content.vb: Public Function RotateAs(tol As Double, from As Vector3D, [to] As Vector3D) As Face
  overload: SearchAThing.Sci.Face.RotateAs*
  nameWithType.vb: Face.RotateAs(Double, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Face.RotateAs(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: RotateAs(Double, Vector3D, Vector3D)
- uid: SearchAThing.Sci.Face.Project(System.Double,SearchAThing.Sci.Plane3D)
  commentId: M:SearchAThing.Sci.Face.Project(System.Double,SearchAThing.Sci.Plane3D)
  id: Project(System.Double,SearchAThing.Sci.Plane3D)
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: Project(double, Plane3D)
  nameWithType: Face.Project(double, Plane3D)
  fullName: SearchAThing.Sci.Face.Project(double, SearchAThing.Sci.Plane3D)
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Project
    path: src/sci/Face.cs
    startLine: 1113
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: project this face edges to the given projection plane
  example: []
  syntax:
    content: public Face Project(double tol, Plane3D prjPlane)
    parameters:
    - id: tol
      type: System.Double
    - id: prjPlane
      type: SearchAThing.Sci.Plane3D
    return:
      type: SearchAThing.Sci.Face
    content.vb: Public Function Project(tol As Double, prjPlane As Plane3D) As Face
  overload: SearchAThing.Sci.Face.Project*
  nameWithType.vb: Face.Project(Double, Plane3D)
  fullName.vb: SearchAThing.Sci.Face.Project(Double, SearchAThing.Sci.Plane3D)
  name.vb: Project(Double, Plane3D)
- uid: SearchAThing.Sci.Face.ToString
  commentId: M:SearchAThing.Sci.Face.ToString
  id: ToString
  parent: SearchAThing.Sci.Face
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Face.ToString()
  fullName: SearchAThing.Sci.Face.ToString()
  type: Method
  source:
    remote:
      path: src/sci/Face.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Face.cs
    startLine: 1133
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SearchAThing.Sci.Face.ToString*
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.Face.Plane*
  commentId: Overload:SearchAThing.Sci.Face.Plane
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_Plane
  name: Plane
  nameWithType: Face.Plane
  fullName: SearchAThing.Sci.Face.Plane
- uid: SearchAThing.Sci.Plane3D
  commentId: T:SearchAThing.Sci.Plane3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Plane3D.html
  name: Plane3D
  nameWithType: Plane3D
  fullName: SearchAThing.Sci.Plane3D
- uid: SearchAThing.Sci.Face.Loops*
  commentId: Overload:SearchAThing.Sci.Face.Loops
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_Loops
  name: Loops
  nameWithType: Face.Loops
  fullName: SearchAThing.Sci.Face.Loops
- uid: System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Loop}
  commentId: T:System.Collections.Generic.IReadOnlyList{SearchAThing.Sci.Loop}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Loop>
  nameWithType: IReadOnlyList<Loop>
  fullName: System.Collections.Generic.IReadOnlyList<SearchAThing.Sci.Loop>
  nameWithType.vb: IReadOnlyList(Of Loop)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of SearchAThing.Sci.Loop)
  name.vb: IReadOnlyList(Of Loop)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: SearchAThing.Sci.Loop
    name: Loop
    href: SearchAThing.Sci.Loop.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Loop
    name: Loop
    href: SearchAThing.Sci.Loop.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.Face.#ctor*
  commentId: Overload:SearchAThing.Sci.Face.#ctor
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face__ctor_SearchAThing_Sci_Plane3D_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Loop__
  name: Face
  nameWithType: Face.Face
  fullName: SearchAThing.Sci.Face.Face
  nameWithType.vb: Face.New
  fullName.vb: SearchAThing.Sci.Face.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Loop}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Loop}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Loop>
  nameWithType: IEnumerable<Loop>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Loop>
  nameWithType.vb: IEnumerable(Of Loop)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Loop)
  name.vb: IEnumerable(Of Loop)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Loop
    name: Loop
    href: SearchAThing.Sci.Loop.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Loop
    name: Loop
    href: SearchAThing.Sci.Loop.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SearchAThing.Sci.Loop
  commentId: T:SearchAThing.Sci.Loop
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Loop.html
  name: Loop
  nameWithType: Loop
  fullName: SearchAThing.Sci.Loop
- uid: SearchAThing.Sci.Face.Move*
  commentId: Overload:SearchAThing.Sci.Face.Move
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_Move_SearchAThing_Sci_Vector3D_
  name: Move
  nameWithType: Face.Move
  fullName: SearchAThing.Sci.Face.Move
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.Face
  commentId: T:SearchAThing.Sci.Face
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Face.html
  name: Face
  nameWithType: Face
  fullName: SearchAThing.Sci.Face
- uid: SearchAThing.Sci.Face.Area*
  commentId: Overload:SearchAThing.Sci.Face.Area
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_Area
  name: Area
  nameWithType: Face.Area
  fullName: SearchAThing.Sci.Face.Area
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.Face.Boolean*
  commentId: Overload:SearchAThing.Sci.Face.Boolean
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_Boolean_System_Double_SearchAThing_Sci_Face_SearchAThing_Sci_Face_BooleanMode_netDxf_DxfDocument_
  name: Boolean
  nameWithType: Face.Boolean
  fullName: SearchAThing.Sci.Face.Boolean
- uid: SearchAThing.Sci.Face.BooleanMode
  commentId: T:SearchAThing.Sci.Face.BooleanMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Face.html
  name: Face.BooleanMode
  nameWithType: Face.BooleanMode
  fullName: SearchAThing.Sci.Face.BooleanMode
  spec.csharp:
  - uid: SearchAThing.Sci.Face
    name: Face
    href: SearchAThing.Sci.Face.html
  - name: .
  - uid: SearchAThing.Sci.Face.BooleanMode
    name: BooleanMode
    href: SearchAThing.Sci.Face.BooleanMode.html
  spec.vb:
  - uid: SearchAThing.Sci.Face
    name: Face
    href: SearchAThing.Sci.Face.html
  - name: .
  - uid: SearchAThing.Sci.Face.BooleanMode
    name: BooleanMode
    href: SearchAThing.Sci.Face.BooleanMode.html
- uid: netDxf.DxfDocument
  commentId: T:netDxf.DxfDocument
  parent: netDxf
  isExternal: true
  name: DxfDocument
  nameWithType: DxfDocument
  fullName: netDxf.DxfDocument
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Face}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Face}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Face>
  nameWithType: IEnumerable<Face>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Face>
  nameWithType.vb: IEnumerable(Of Face)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Face)
  name.vb: IEnumerable(Of Face)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Face
    name: Face
    href: SearchAThing.Sci.Face.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Face
    name: Face
    href: SearchAThing.Sci.Face.html
  - name: )
- uid: netDxf
  commentId: N:netDxf
  isExternal: true
  name: netDxf
  nameWithType: netDxf
  fullName: netDxf
- uid: SearchAThing.Sci.Face.Contains*
  commentId: Overload:SearchAThing.Sci.Face.Contains
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_Contains_System_Double_SearchAThing_Sci_Edge_System_Boolean_SearchAThing_Sci_LoopContainsEdgeMode_
  name: Contains
  nameWithType: Face.Contains
  fullName: SearchAThing.Sci.Face.Contains
- uid: SearchAThing.Sci.Edge
  commentId: T:SearchAThing.Sci.Edge
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Edge.html
  name: Edge
  nameWithType: Edge
  fullName: SearchAThing.Sci.Edge
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.LoopContainsEdgeMode
  commentId: T:SearchAThing.Sci.LoopContainsEdgeMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.LoopContainsEdgeMode.html
  name: LoopContainsEdgeMode
  nameWithType: LoopContainsEdgeMode
  fullName: SearchAThing.Sci.LoopContainsEdgeMode
- uid: SearchAThing.Sci.Face.Overlap*
  commentId: Overload:SearchAThing.Sci.Face.Overlap
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_Overlap_System_Double_SearchAThing_Sci_Edge_
  name: Overlap
  nameWithType: Face.Overlap
  fullName: SearchAThing.Sci.Face.Overlap
- uid: SearchAThing.Sci.Face.DxfEntities*
  commentId: Overload:SearchAThing.Sci.Face.DxfEntities
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_DxfEntities_System_Double_
  name: DxfEntities
  nameWithType: Face.DxfEntities
  fullName: SearchAThing.Sci.Face.DxfEntities
- uid: System.Collections.Generic.IEnumerable{netDxf.Entities.Polyline2D}
  commentId: T:System.Collections.Generic.IEnumerable{netDxf.Entities.Polyline2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Polyline2D>
  nameWithType: IEnumerable<Polyline2D>
  fullName: System.Collections.Generic.IEnumerable<netDxf.Entities.Polyline2D>
  nameWithType.vb: IEnumerable(Of Polyline2D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of netDxf.Entities.Polyline2D)
  name.vb: IEnumerable(Of Polyline2D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: netDxf.Entities.Polyline2D
    name: Polyline2D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: netDxf.Entities.Polyline2D
    name: Polyline2D
    isExternal: true
  - name: )
- uid: SearchAThing.Sci.Face.ToHatch*
  commentId: Overload:SearchAThing.Sci.Face.ToHatch
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_ToHatch_System_Double_netDxf_Entities_HatchPattern_System_Boolean_
  name: ToHatch
  nameWithType: Face.ToHatch
  fullName: SearchAThing.Sci.Face.ToHatch
- uid: netDxf.Entities.HatchPattern
  commentId: T:netDxf.Entities.HatchPattern
  parent: netDxf.Entities
  isExternal: true
  name: HatchPattern
  nameWithType: HatchPattern
  fullName: netDxf.Entities.HatchPattern
- uid: netDxf.Entities.Hatch
  commentId: T:netDxf.Entities.Hatch
  parent: netDxf.Entities
  isExternal: true
  name: Hatch
  nameWithType: Hatch
  fullName: netDxf.Entities.Hatch
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  isExternal: true
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
- uid: SearchAThing.Sci.Face.RotateAs*
  commentId: Overload:SearchAThing.Sci.Face.RotateAs
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_RotateAs_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: RotateAs
  nameWithType: Face.RotateAs
  fullName: SearchAThing.Sci.Face.RotateAs
- uid: SearchAThing.Sci.Face.Project*
  commentId: Overload:SearchAThing.Sci.Face.Project
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_Project_System_Double_SearchAThing_Sci_Plane3D_
  name: Project
  nameWithType: Face.Project
  fullName: SearchAThing.Sci.Face.Project
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SearchAThing.Sci.Face.ToString*
  commentId: Overload:SearchAThing.Sci.Face.ToString
  href: SearchAThing.Sci.Face.html#SearchAThing_Sci_Face_ToString
  name: ToString
  nameWithType: Face.ToString
  fullName: SearchAThing.Sci.Face.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
