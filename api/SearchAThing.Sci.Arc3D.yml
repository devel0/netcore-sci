### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Arc3D
  commentId: T:SearchAThing.Sci.Arc3D
  id: Arc3D
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.Arc3D)
  - SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.CoordinateSystem3D,System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Arc3D.#ctor(System.Double,SearchAThing.Sci.CoordinateSystem3D,System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Arc3D.#ctor(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Arc3D.A0ProgeCadScript
  - SearchAThing.Sci.Arc3D.A0QCadScript
  - SearchAThing.Sci.Arc3D.Angle
  - SearchAThing.Sci.Arc3D.AngleEnd
  - SearchAThing.Sci.Arc3D.AngleEndDeg
  - SearchAThing.Sci.Arc3D.AngleStart
  - SearchAThing.Sci.Arc3D.AngleStartDeg
  - SearchAThing.Sci.Arc3D.BBox(System.Double)
  - SearchAThing.Sci.Arc3D.Bulge(System.Double)
  - SearchAThing.Sci.Arc3D.CS
  - SearchAThing.Sci.Arc3D.Center
  - SearchAThing.Sci.Arc3D.CentreOfMass(System.Double@)
  - SearchAThing.Sci.Arc3D.ChordTriangleArea
  - SearchAThing.Sci.Arc3D.CircularSectorArea
  - SearchAThing.Sci.Arc3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  - SearchAThing.Sci.Arc3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean,System.Boolean)
  - SearchAThing.Sci.Arc3D.Copy
  - SearchAThing.Sci.Arc3D.Discretize(System.Double)
  - SearchAThing.Sci.Arc3D.Divide(System.Int32,System.Boolean)
  - SearchAThing.Sci.Arc3D.DxfEntity
  - SearchAThing.Sci.Arc3D.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Arc3D.EqualsTol(System.Double,SearchAThing.Sci.Arc3D)
  - SearchAThing.Sci.Arc3D.From
  - SearchAThing.Sci.Arc3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  - SearchAThing.Sci.Arc3D.GeomFrom
  - SearchAThing.Sci.Arc3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  - SearchAThing.Sci.Arc3D.GeomTo
  - SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Arc3D,System.Boolean)
  - SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D,System.Boolean,System.Boolean)
  - SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean)
  - SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean,System.Boolean)
  - SearchAThing.Sci.Arc3D.Length
  - SearchAThing.Sci.Arc3D.MidPoint
  - SearchAThing.Sci.Arc3D.Move(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Arc3D.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Arc3D.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Arc3D.Perpendicular(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Arc3D.ProgeCadScript(System.Boolean)
  - SearchAThing.Sci.Arc3D.Project(System.Double,SearchAThing.Sci.Plane3D)
  - SearchAThing.Sci.Arc3D.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  - SearchAThing.Sci.Arc3D.PtAngle(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Arc3D.PtAtAngle(System.Double)
  - SearchAThing.Sci.Arc3D.QCadScript(System.Boolean)
  - SearchAThing.Sci.Arc3D.Radius
  - SearchAThing.Sci.Arc3D.Segment
  - SearchAThing.Sci.Arc3D.SegmentArea
  - SearchAThing.Sci.Arc3D.SensedAngleEnd
  - SearchAThing.Sci.Arc3D.SensedAngleEndDeg
  - SearchAThing.Sci.Arc3D.SensedAngleStart
  - SearchAThing.Sci.Arc3D.SensedAngleStartDeg
  - SearchAThing.Sci.Arc3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  - SearchAThing.Sci.Arc3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D},System.Boolean)
  - SearchAThing.Sci.Arc3D.To
  - SearchAThing.Sci.Arc3D.ToCircle3D(System.Double)
  - SearchAThing.Sci.Arc3D.ToString
  - SearchAThing.Sci.Arc3D.ToString(System.Int32)
  - SearchAThing.Sci.Arc3D.ToggleSense
  - SearchAThing.Sci.Arc3D.Vertexes
  langs:
  - csharp
  - vb
  name: Arc3D
  nameWithType: Arc3D
  fullName: SearchAThing.Sci.Arc3D
  type: Class
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Arc3D
    path: src/sci/Arc3D.cs
    startLine: 72
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    base geometry for arc 3d entities.


    the CS origin is the Center of the arc.

    the CS basex, basey forms the arc plane.


    angles start, end are normalized [0,2pi) measured as angle from the basex

    right-hand rotating around cs basez.

    the arc coverage goes from the angle start point toward angle end point

    right-hand rotating arond cs basez.


    while the CS right hand rule allow to know the effective arc coverage

    Sense information allow to know the effective edge orientation.
  example: []
  syntax:
    content: 'public class Arc3D : Edge'
    content.vb: Public Class Arc3D Inherits Edge
  inheritance:
  - System.Object
  - SearchAThing.Sci.Geometry
  - SearchAThing.Sci.Edge
  derivedClasses:
  - SearchAThing.Sci.Circle3D
  inheritedMembers:
  - SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
  - SearchAThing.Sci.Edge.Sense
  - SearchAThing.Sci.Edge.SGeomFrom
  - SearchAThing.Sci.Edge.SGeomTo
  - SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
  - SearchAThing.Sci.Geometry.GeomType
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: SearchAThing.Sci.Arc3D.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Arc3D.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  id: EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: EdgeContainsPoint(double, Vector3D)
  nameWithType: Arc3D.EdgeContainsPoint(double, Vector3D)
  fullName: SearchAThing.Sci.Arc3D.EdgeContainsPoint(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EdgeContainsPoint
    path: src/sci/Arc3D.cs
    startLine: 77
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: States if edge contains given point on its perimeter
  example: []
  syntax:
    content: public override bool EdgeContainsPoint(double tol, Vector3D pt)
    parameters:
    - id: tol
      type: System.Double
    - id: pt
      type: SearchAThing.Sci.Vector3D
    return:
      type: System.Boolean
    content.vb: Public Overrides Function EdgeContainsPoint(tol As Double, pt As Vector3D) As Boolean
  overridden: SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  overload: SearchAThing.Sci.Arc3D.EdgeContainsPoint*
  nameWithType.vb: Arc3D.EdgeContainsPoint(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Arc3D.EdgeContainsPoint(Double, SearchAThing.Sci.Vector3D)
  name.vb: EdgeContainsPoint(Double, Vector3D)
- uid: SearchAThing.Sci.Arc3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.Arc3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  id: Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Split(double, IEnumerable<Vector3D>)
  nameWithType: Arc3D.Split(double, IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.Arc3D.Split(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Split
    path: src/sci/Arc3D.cs
    startLine: 87
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    returns this arc splitted by break points maintaining order from, to as this Start, End angle.

    precondition: breaks must lie on the arc angle range
  example: []
  syntax:
    content: public override IEnumerable<Geometry> Split(double tol, IEnumerable<Vector3D> breaks)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: breaks
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
      description: ''
    content.vb: Public Overrides Function Split(tol As Double, breaks As IEnumerable(Of Vector3D)) As IEnumerable(Of Geometry)
  overridden: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  overload: SearchAThing.Sci.Arc3D.Split*
  nameWithType.vb: Arc3D.Split(Double, IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.Arc3D.Split(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: Split(Double, IEnumerable(Of Vector3D))
- uid: SearchAThing.Sci.Arc3D.MidPoint
  commentId: P:SearchAThing.Sci.Arc3D.MidPoint
  id: MidPoint
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: MidPoint
  nameWithType: Arc3D.MidPoint
  fullName: SearchAThing.Sci.Arc3D.MidPoint
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: MidPoint
    path: src/sci/Arc3D.cs
    startLine: 130
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: mid point eval as arc point at angle start + arc angle/2
  example: []
  syntax:
    content: public override Vector3D MidPoint { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Overrides ReadOnly Property MidPoint As Vector3D
  overridden: SearchAThing.Sci.Geometry.MidPoint
  overload: SearchAThing.Sci.Arc3D.MidPoint*
- uid: SearchAThing.Sci.Arc3D.QCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.QCadScript(System.Boolean)
  id: QCadScript(System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: QCadScript(bool)
  nameWithType: Arc3D.QCadScript(bool)
  fullName: SearchAThing.Sci.Arc3D.QCadScript(bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: QCadScript
    path: src/sci/Arc3D.cs
    startLine: 132
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: qcad 2d script
  example: []
  syntax:
    content: public override string QCadScript(bool final = true)
    parameters:
    - id: final
      type: System.Boolean
      description: adds QQ command
    return:
      type: System.String
    content.vb: Public Overrides Function QCadScript(final As Boolean = True) As String
  overridden: SearchAThing.Sci.Edge.QCadScript(System.Boolean)
  overload: SearchAThing.Sci.Arc3D.QCadScript*
  nameWithType.vb: Arc3D.QCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.QCadScript(Boolean)
  name.vb: QCadScript(Boolean)
- uid: SearchAThing.Sci.Arc3D.ProgeCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.ProgeCadScript(System.Boolean)
  id: ProgeCadScript(System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: ProgeCadScript(bool)
  nameWithType: Arc3D.ProgeCadScript(bool)
  fullName: SearchAThing.Sci.Arc3D.ProgeCadScript(bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ProgeCadScript
    path: src/sci/Arc3D.cs
    startLine: 135
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override string ProgeCadScript(bool final = true)
    parameters:
    - id: final
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Overrides Function ProgeCadScript(final As Boolean = True) As String
  overridden: SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
  overload: SearchAThing.Sci.Arc3D.ProgeCadScript*
  nameWithType.vb: Arc3D.ProgeCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.ProgeCadScript(Boolean)
  name.vb: ProgeCadScript(Boolean)
- uid: SearchAThing.Sci.Arc3D.A0QCadScript
  commentId: P:SearchAThing.Sci.Arc3D.A0QCadScript
  id: A0QCadScript
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: A0QCadScript
  nameWithType: Arc3D.A0QCadScript
  fullName: SearchAThing.Sci.Arc3D.A0QCadScript
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: A0QCadScript
    path: src/sci/Arc3D.cs
    startLine: 138
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string A0QCadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property A0QCadScript As String
  overload: SearchAThing.Sci.Arc3D.A0QCadScript*
- uid: SearchAThing.Sci.Arc3D.A0ProgeCadScript
  commentId: P:SearchAThing.Sci.Arc3D.A0ProgeCadScript
  id: A0ProgeCadScript
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: A0ProgeCadScript
  nameWithType: Arc3D.A0ProgeCadScript
  fullName: SearchAThing.Sci.Arc3D.A0ProgeCadScript
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: A0ProgeCadScript
    path: src/sci/Arc3D.cs
    startLine: 140
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public string A0ProgeCadScript { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property A0ProgeCadScript As String
  overload: SearchAThing.Sci.Arc3D.A0ProgeCadScript*
- uid: SearchAThing.Sci.Arc3D.Project(System.Double,SearchAThing.Sci.Plane3D)
  commentId: M:SearchAThing.Sci.Arc3D.Project(System.Double,SearchAThing.Sci.Plane3D)
  id: Project(System.Double,SearchAThing.Sci.Plane3D)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Project(double, Plane3D)
  nameWithType: Arc3D.Project(double, Plane3D)
  fullName: SearchAThing.Sci.Arc3D.Project(double, SearchAThing.Sci.Plane3D)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Project
    path: src/sci/Arc3D.cs
    startLine: 145
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: project this arc to given projection plane
  example: []
  syntax:
    content: public override Edge Project(double tol, Plane3D prjPlane)
    parameters:
    - id: tol
      type: System.Double
    - id: prjPlane
      type: SearchAThing.Sci.Plane3D
    return:
      type: SearchAThing.Sci.Edge
    content.vb: Public Overrides Function Project(tol As Double, prjPlane As Plane3D) As Edge
  overridden: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
  overload: SearchAThing.Sci.Arc3D.Project*
  nameWithType.vb: Arc3D.Project(Double, Plane3D)
  fullName.vb: SearchAThing.Sci.Arc3D.Project(Double, SearchAThing.Sci.Plane3D)
  name.vb: Project(Double, Plane3D)
- uid: SearchAThing.Sci.Arc3D.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Arc3D.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  id: Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Offset(double, Vector3D, double)
  nameWithType: Arc3D.Offset(double, Vector3D, double)
  fullName: SearchAThing.Sci.Arc3D.Offset(double, SearchAThing.Sci.Vector3D, double)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Offset
    path: src/sci/Arc3D.cs
    startLine: 155
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create offseted arc toward refPt for given offset.
  example: []
  syntax:
    content: public override Edge Offset(double tol, Vector3D refPt, double offset)
    parameters:
    - id: tol
      type: System.Double
    - id: refPt
      type: SearchAThing.Sci.Vector3D
    - id: offset
      type: System.Double
    return:
      type: SearchAThing.Sci.Edge
    content.vb: Public Overrides Function Offset(tol As Double, refPt As Vector3D, offset As Double) As Edge
  overridden: SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  overload: SearchAThing.Sci.Arc3D.Offset*
  nameWithType.vb: Arc3D.Offset(Double, Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Arc3D.Offset(Double, SearchAThing.Sci.Vector3D, Double)
  name.vb: Offset(Double, Vector3D, Double)
- uid: SearchAThing.Sci.Arc3D.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Arc3D.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  id: MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: MoveEnd(double, EdgeEnd, Vector3D)
  nameWithType: Arc3D.MoveEnd(double, EdgeEnd, Vector3D)
  fullName: SearchAThing.Sci.Arc3D.MoveEnd(double, SearchAThing.Sci.EdgeEnd, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: MoveEnd
    path: src/sci/Arc3D.cs
    startLine: 173
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    extends edge endpoint toward new given one.        

    returns null if edge can't extends toward new given end.
  example: []
  syntax:
    content: public override Edge? MoveEnd(double tol, EdgeEnd end, Vector3D newEnd)
    parameters:
    - id: tol
      type: System.Double
    - id: end
      type: SearchAThing.Sci.EdgeEnd
    - id: newEnd
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Edge
    content.vb: Public Overrides Function MoveEnd(tol As Double, [end] As EdgeEnd, newEnd As Vector3D) As Edge
  overridden: SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  overload: SearchAThing.Sci.Arc3D.MoveEnd*
  nameWithType.vb: Arc3D.MoveEnd(Double, EdgeEnd, Vector3D)
  fullName.vb: SearchAThing.Sci.Arc3D.MoveEnd(Double, SearchAThing.Sci.EdgeEnd, SearchAThing.Sci.Vector3D)
  name.vb: MoveEnd(Double, EdgeEnd, Vector3D)
- uid: SearchAThing.Sci.Arc3D.Copy
  commentId: M:SearchAThing.Sci.Arc3D.Copy
  id: Copy
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: Arc3D.Copy()
  fullName: SearchAThing.Sci.Arc3D.Copy()
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Copy
    path: src/sci/Arc3D.cs
    startLine: 208
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create copy of this geometry.
  remarks: it's required to call base.CopyFrom(other) to ensure geometry properties to be copied.
  example: []
  syntax:
    content: public override Geometry Copy()
    return:
      type: SearchAThing.Sci.Geometry
    content.vb: Public Overrides Function Copy() As Geometry
  overridden: SearchAThing.Sci.Geometry.Copy
  overload: SearchAThing.Sci.Arc3D.Copy*
- uid: SearchAThing.Sci.Arc3D.ToggleSense
  commentId: M:SearchAThing.Sci.Arc3D.ToggleSense
  id: ToggleSense
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: ToggleSense()
  nameWithType: Arc3D.ToggleSense()
  fullName: SearchAThing.Sci.Arc3D.ToggleSense()
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToggleSense
    path: src/sci/Arc3D.cs
    startLine: 213
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Arc3D ToggleSense()
    return:
      type: SearchAThing.Sci.Arc3D
    content.vb: Public Function ToggleSense() As Arc3D
  overload: SearchAThing.Sci.Arc3D.ToggleSense*
- uid: SearchAThing.Sci.Arc3D.Vertexes
  commentId: P:SearchAThing.Sci.Arc3D.Vertexes
  id: Vertexes
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Vertexes
  nameWithType: Arc3D.Vertexes
  fullName: SearchAThing.Sci.Arc3D.Vertexes
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Vertexes
    path: src/sci/Arc3D.cs
    startLine: 215
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: vertexes of this geom ( can be 1 for points, 2 for line/arc/circles )
  example: []
  syntax:
    content: public override IEnumerable<Vector3D> Vertexes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Overrides ReadOnly Property Vertexes As IEnumerable(Of Vector3D)
  overridden: SearchAThing.Sci.Geometry.Vertexes
  overload: SearchAThing.Sci.Arc3D.Vertexes*
- uid: SearchAThing.Sci.Arc3D.GeomFrom
  commentId: P:SearchAThing.Sci.Arc3D.GeomFrom
  id: GeomFrom
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: GeomFrom
  nameWithType: Arc3D.GeomFrom
  fullName: SearchAThing.Sci.Arc3D.GeomFrom
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomFrom
    path: src/sci/Arc3D.cs
    startLine: 224
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: start point
  example: []
  syntax:
    content: public override Vector3D GeomFrom { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Overrides ReadOnly Property GeomFrom As Vector3D
  overridden: SearchAThing.Sci.Geometry.GeomFrom
  overload: SearchAThing.Sci.Arc3D.GeomFrom*
- uid: SearchAThing.Sci.Arc3D.GeomTo
  commentId: P:SearchAThing.Sci.Arc3D.GeomTo
  id: GeomTo
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: GeomTo
  nameWithType: Arc3D.GeomTo
  fullName: SearchAThing.Sci.Arc3D.GeomTo
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomTo
    path: src/sci/Arc3D.cs
    startLine: 226
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: end point
  example: []
  syntax:
    content: public override Vector3D GeomTo { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Overrides ReadOnly Property GeomTo As Vector3D
  overridden: SearchAThing.Sci.Geometry.GeomTo
  overload: SearchAThing.Sci.Arc3D.GeomTo*
- uid: SearchAThing.Sci.Arc3D.Length
  commentId: P:SearchAThing.Sci.Arc3D.Length
  id: Length
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Arc3D.Length
  fullName: SearchAThing.Sci.Arc3D.Length
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Length
    path: src/sci/Arc3D.cs
    startLine: 233
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Length of Arc from start to end
  example: []
  syntax:
    content: public override double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overrides ReadOnly Property Length As Double
  overridden: SearchAThing.Sci.Geometry.Length
  overload: SearchAThing.Sci.Arc3D.Length*
- uid: SearchAThing.Sci.Arc3D.Divide(System.Int32,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Divide(System.Int32,System.Boolean)
  id: Divide(System.Int32,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Divide(int, bool)
  nameWithType: Arc3D.Divide(int, bool)
  fullName: SearchAThing.Sci.Arc3D.Divide(int, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Divide
    path: src/sci/Arc3D.cs
    startLine: 247
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    split arc into pieces and retrieve split points

    ///
  example: []
  syntax:
    content: public override IEnumerable<Vector3D> Divide(int cnt, bool include_endpoints = false)
    parameters:
    - id: cnt
      type: System.Int32
      description: nr of piece
    - id: include_endpoints
      type: System.Boolean
      description: if true returns also boundary points
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Overrides Function Divide(cnt As Integer, include_endpoints As Boolean = False) As IEnumerable(Of Vector3D)
  overridden: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  overload: SearchAThing.Sci.Arc3D.Divide*
  nameWithType.vb: Arc3D.Divide(Integer, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Divide(Integer, Boolean)
  name.vb: Divide(Integer, Boolean)
- uid: SearchAThing.Sci.Arc3D.BBox(System.Double)
  commentId: M:SearchAThing.Sci.Arc3D.BBox(System.Double)
  id: BBox(System.Double)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: BBox(double)
  nameWithType: Arc3D.BBox(double)
  fullName: SearchAThing.Sci.Arc3D.BBox(double)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: BBox
    path: src/sci/Arc3D.cs
    startLine: 272
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: compute wcs bbox executing a recursive bisect search of min and max
  example: []
  syntax:
    content: public override BBox3D BBox(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: SearchAThing.Sci.BBox3D
    content.vb: Public Overrides Function BBox(tol As Double) As BBox3D
  overridden: SearchAThing.Sci.Geometry.BBox(System.Double)
  overload: SearchAThing.Sci.Arc3D.BBox*
  nameWithType.vb: Arc3D.BBox(Double)
  fullName.vb: SearchAThing.Sci.Arc3D.BBox(Double)
  name.vb: BBox(Double)
- uid: SearchAThing.Sci.Arc3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  commentId: M:SearchAThing.Sci.Arc3D.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  id: GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  nameWithType: Arc3D.GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName: SearchAThing.Sci.Arc3D.GeomIntersect(double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomIntersect
    path: src/sci/Arc3D.cs
    startLine: 286
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: find intersections between this and another geometry resulting in zero or more geometries.
  example: []
  syntax:
    content: public override IEnumerable<Geometry> GeomIntersect(double tol, Geometry _other, GeomSegmentMode thisSegmentMode, GeomSegmentMode otherSegmentMode)
    parameters:
    - id: tol
      type: System.Double
      description: ''
    - id: _other
      type: SearchAThing.Sci.Geometry
    - id: thisSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
      description: if this is Line3D specifies how to consider
    - id: otherSegmentMode
      type: SearchAThing.Sci.GeomSegmentMode
      description: if other is Line3D specifies how to consider
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
      description: ''
    content.vb: Public Overrides Function GeomIntersect(tol As Double, _other As Geometry, thisSegmentMode As GeomSegmentMode, otherSegmentMode As GeomSegmentMode) As IEnumerable(Of Geometry)
  overridden: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  overload: SearchAThing.Sci.Arc3D.GeomIntersect*
  nameWithType.vb: Arc3D.GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName.vb: SearchAThing.Sci.Arc3D.GeomIntersect(Double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  name.vb: GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
- uid: SearchAThing.Sci.Arc3D.DxfEntity
  commentId: P:SearchAThing.Sci.Arc3D.DxfEntity
  id: DxfEntity
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: DxfEntity
  nameWithType: Arc3D.DxfEntity
  fullName: SearchAThing.Sci.Arc3D.DxfEntity
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: DxfEntity
    path: src/sci/Arc3D.cs
    startLine: 328
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: dxf entity representing this geom
  example: []
  syntax:
    content: public override EntityObject DxfEntity { get; }
    parameters: []
    return:
      type: netDxf.Entities.EntityObject
    content.vb: Public Overrides ReadOnly Property DxfEntity As EntityObject
  overridden: SearchAThing.Sci.Geometry.DxfEntity
  overload: SearchAThing.Sci.Arc3D.DxfEntity*
- uid: SearchAThing.Sci.Arc3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  id: GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: GeomEquals(double, Geometry, bool)
  nameWithType: Arc3D.GeomEquals(double, Geometry, bool)
  fullName: SearchAThing.Sci.Arc3D.GeomEquals(double, SearchAThing.Sci.Geometry, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: GeomEquals
    path: src/sci/Arc3D.cs
    startLine: 351
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this geom equals to given other
  example: []
  syntax:
    content: public override bool GeomEquals(double tol, Geometry other, bool checkSense = false)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: other
      type: SearchAThing.Sci.Geometry
      description: other geom
    - id: checkSense
      type: System.Boolean
      description: if false two geometry with different sense but same space coverage are considered equals
    return:
      type: System.Boolean
    content.vb: Public Overrides Function GeomEquals(tol As Double, other As Geometry, checkSense As Boolean = False) As Boolean
  overridden: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  overload: SearchAThing.Sci.Arc3D.GeomEquals*
  nameWithType.vb: Arc3D.GeomEquals(Double, Geometry, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.GeomEquals(Double, SearchAThing.Sci.Geometry, Boolean)
  name.vb: GeomEquals(Double, Geometry, Boolean)
- uid: SearchAThing.Sci.Arc3D.CS
  commentId: P:SearchAThing.Sci.Arc3D.CS
  id: CS
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: CS
  nameWithType: Arc3D.CS
  fullName: SearchAThing.Sci.Arc3D.CS
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CS
    path: src/sci/Arc3D.cs
    startLine: 385
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    coordinate system centered in arc center

    angle is 0 at X axis

    angle increase rotating right-hand on Z axis
  example: []
  syntax:
    content: public CoordinateSystem3D CS { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.CoordinateSystem3D
    content.vb: Public Property CS As CoordinateSystem3D
  overload: SearchAThing.Sci.Arc3D.CS*
- uid: SearchAThing.Sci.Arc3D.Radius
  commentId: P:SearchAThing.Sci.Arc3D.Radius
  id: Radius
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Radius
  nameWithType: Arc3D.Radius
  fullName: SearchAThing.Sci.Arc3D.Radius
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Radius
    path: src/sci/Arc3D.cs
    startLine: 390
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: radius of arc
  example: []
  syntax:
    content: public double Radius { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Radius As Double
  overload: SearchAThing.Sci.Arc3D.Radius*
- uid: SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.CoordinateSystem3D,System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.CoordinateSystem3D,System.Double,System.Double,System.Double)
  id: '#ctor(SearchAThing.Sci.CoordinateSystem3D,System.Double,System.Double,System.Double)'
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Arc3D(CoordinateSystem3D, double, double, double)
  nameWithType: Arc3D.Arc3D(CoordinateSystem3D, double, double, double)
  fullName: SearchAThing.Sci.Arc3D.Arc3D(SearchAThing.Sci.CoordinateSystem3D, double, double, double)
  type: Constructor
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Arc3D.cs
    startLine: 409
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: construct 3d arc
  example: []
  syntax:
    content: public Arc3D(CoordinateSystem3D cs, double r, double angleRadStart, double angleRadEnd)
    parameters:
    - id: cs
      type: SearchAThing.Sci.CoordinateSystem3D
      description: coordinate system with origin at arc center, XY plane of cs contains the arc, angle is 0 at cs x-axis and increase right-hand around cs z-axis
    - id: r
      type: System.Double
      description: arc radius
    - id: angleRadStart
      type: System.Double
      description: arc angle start (rad). is not required that start angle less than end. It will normalized 0-2pi
    - id: angleRadEnd
      type: System.Double
      description: arc angle end (rad). is not require that end angle great than start. It will normalized 0-2pi
    content.vb: Public Sub New(cs As CoordinateSystem3D, r As Double, angleRadStart As Double, angleRadEnd As Double)
  overload: SearchAThing.Sci.Arc3D.#ctor*
  nameWithType.vb: Arc3D.New(CoordinateSystem3D, Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Arc3D.New(SearchAThing.Sci.CoordinateSystem3D, Double, Double, Double)
  name.vb: New(CoordinateSystem3D, Double, Double, Double)
- uid: SearchAThing.Sci.Arc3D.#ctor(System.Double,SearchAThing.Sci.CoordinateSystem3D,System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Arc3D.#ctor(System.Double,SearchAThing.Sci.CoordinateSystem3D,System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: '#ctor(System.Double,SearchAThing.Sci.CoordinateSystem3D,System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)'
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Arc3D(double, CoordinateSystem3D, double, Vector3D, Vector3D)
  nameWithType: Arc3D.Arc3D(double, CoordinateSystem3D, double, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Arc3D.Arc3D(double, SearchAThing.Sci.CoordinateSystem3D, double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Constructor
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Arc3D.cs
    startLine: 421
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build arc with given cs, radius goind from,to vectors
  example: []
  syntax:
    content: public Arc3D(double tol, CoordinateSystem3D cs, double r, Vector3D from, Vector3D to)
    parameters:
    - id: tol
      type: System.Double
    - id: cs
      type: SearchAThing.Sci.CoordinateSystem3D
    - id: r
      type: System.Double
    - id: from
      type: SearchAThing.Sci.Vector3D
    - id: to
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Sub New(tol As Double, cs As CoordinateSystem3D, r As Double, from As Vector3D, [to] As Vector3D)
  overload: SearchAThing.Sci.Arc3D.#ctor*
  nameWithType.vb: Arc3D.New(Double, CoordinateSystem3D, Double, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Arc3D.New(Double, SearchAThing.Sci.CoordinateSystem3D, Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: New(Double, CoordinateSystem3D, Double, Vector3D, Vector3D)
- uid: SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.Arc3D)
  commentId: M:SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.Arc3D)
  id: '#ctor(SearchAThing.Sci.Arc3D)'
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Arc3D(Arc3D)
  nameWithType: Arc3D.Arc3D(Arc3D)
  fullName: SearchAThing.Sci.Arc3D.Arc3D(SearchAThing.Sci.Arc3D)
  type: Constructor
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Arc3D.cs
    startLine: 433
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build a copy of given arc
  example: []
  syntax:
    content: public Arc3D(Arc3D arc)
    parameters:
    - id: arc
      type: SearchAThing.Sci.Arc3D
    content.vb: Public Sub New(arc As Arc3D)
  overload: SearchAThing.Sci.Arc3D.#ctor*
  nameWithType.vb: Arc3D.New(Arc3D)
  fullName.vb: SearchAThing.Sci.Arc3D.New(SearchAThing.Sci.Arc3D)
  name.vb: New(Arc3D)
- uid: SearchAThing.Sci.Arc3D.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Arc3D.Move(SearchAThing.Sci.Vector3D)
  id: Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Move(Vector3D)
  nameWithType: Arc3D.Move(Vector3D)
  fullName: SearchAThing.Sci.Arc3D.Move(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Move
    path: src/sci/Arc3D.cs
    startLine: 449
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: create an arc copy with origin moved
  example: []
  syntax:
    content: public override Geometry Move(Vector3D delta)
    parameters:
    - id: delta
      type: SearchAThing.Sci.Vector3D
      description: new arc origin delta
    return:
      type: SearchAThing.Sci.Geometry
    content.vb: Public Overrides Function Move(delta As Vector3D) As Geometry
  overridden: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  overload: SearchAThing.Sci.Arc3D.Move*
- uid: SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Arc3D.#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: '#ctor(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)'
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Arc3D(Vector3D, Vector3D, Vector3D)
  nameWithType: Arc3D.Arc3D(Vector3D, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Arc3D.Arc3D(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Constructor
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Arc3D.cs
    startLine: 488
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: build 3d arc by given 3 points (angles 0,2pi)
  example: []
  syntax:
    content: protected Arc3D(Vector3D p1, Vector3D p2, Vector3D p3)
    parameters:
    - id: p1
      type: SearchAThing.Sci.Vector3D
      description: first constraint point
    - id: p2
      type: SearchAThing.Sci.Vector3D
      description: second constraint point
    - id: p3
      type: SearchAThing.Sci.Vector3D
      description: third constraint point
    content.vb: Protected Sub New(p1 As Vector3D, p2 As Vector3D, p3 As Vector3D)
  overload: SearchAThing.Sci.Arc3D.#ctor*
  nameWithType.vb: Arc3D.New(Vector3D, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Arc3D.New(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: New(Vector3D, Vector3D, Vector3D)
- uid: SearchAThing.Sci.Arc3D.#ctor(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Arc3D.#ctor(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: '#ctor(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)'
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Arc3D(double, Vector3D, Vector3D, Vector3D)
  nameWithType: Arc3D.Arc3D(double, Vector3D, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Arc3D.Arc3D(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Constructor
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Arc3D.cs
    startLine: 512
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Build arc by 3 given points.        

    Resulting simplified CS and normalized [0,2pi) AngleStart and AngleEnd will be choosen to meet follow requirements:

    fromPt = CS.Origin + (Radius * CS.BaseX).RotateAboutAxis(CS.BaseZ, AngleStart) ;

    toPt = CS.Origin + (Radius * CS.BaseX).RotateAboutAxis(CS.BaseZ, AngleEnd)
  example: []
  syntax:
    content: public Arc3D(double tol, Vector3D fromPt, Vector3D insidePt, Vector3D toPt)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: fromPt
      type: SearchAThing.Sci.Vector3D
      description: arc start point
    - id: insidePt
      type: SearchAThing.Sci.Vector3D
      description: arc inside point (ideally midpoint)
    - id: toPt
      type: SearchAThing.Sci.Vector3D
      description: arc end point
    content.vb: Public Sub New(tol As Double, fromPt As Vector3D, insidePt As Vector3D, toPt As Vector3D)
  overload: SearchAThing.Sci.Arc3D.#ctor*
  nameWithType.vb: Arc3D.New(Double, Vector3D, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Arc3D.New(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: New(Double, Vector3D, Vector3D, Vector3D)
- uid: SearchAThing.Sci.Arc3D.AngleStart
  commentId: P:SearchAThing.Sci.Arc3D.AngleStart
  id: AngleStart
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: AngleStart
  nameWithType: Arc3D.AngleStart
  fullName: SearchAThing.Sci.Arc3D.AngleStart
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: AngleStart
    path: src/sci/Arc3D.cs
    startLine: 538
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    start angle (rad) [0-2pi) respect cs xaxis rotating around cs zaxis

    note that start angle can be greather than end angle
  example: []
  syntax:
    content: public double AngleStart { get; protected set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property AngleStart As Double
  overload: SearchAThing.Sci.Arc3D.AngleStart*
- uid: SearchAThing.Sci.Arc3D.AngleStartDeg
  commentId: P:SearchAThing.Sci.Arc3D.AngleStartDeg
  id: AngleStartDeg
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: AngleStartDeg
  nameWithType: Arc3D.AngleStartDeg
  fullName: SearchAThing.Sci.Arc3D.AngleStartDeg
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: AngleStartDeg
    path: src/sci/Arc3D.cs
    startLine: 544
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: ''
  example: []
  syntax:
    content: public double AngleStartDeg { get; }
    parameters: []
    return:
      type: System.Double
      description: ''
    content.vb: Public ReadOnly Property AngleStartDeg As Double
  overload: SearchAThing.Sci.Arc3D.AngleStartDeg*
- uid: SearchAThing.Sci.Arc3D.SensedAngleStart
  commentId: P:SearchAThing.Sci.Arc3D.SensedAngleStart
  id: SensedAngleStart
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: SensedAngleStart
  nameWithType: Arc3D.SensedAngleStart
  fullName: SearchAThing.Sci.Arc3D.SensedAngleStart
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SensedAngleStart
    path: src/sci/Arc3D.cs
    startLine: 546
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public double SensedAngleStart { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SensedAngleStart As Double
  overload: SearchAThing.Sci.Arc3D.SensedAngleStart*
- uid: SearchAThing.Sci.Arc3D.SensedAngleStartDeg
  commentId: P:SearchAThing.Sci.Arc3D.SensedAngleStartDeg
  id: SensedAngleStartDeg
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: SensedAngleStartDeg
  nameWithType: Arc3D.SensedAngleStartDeg
  fullName: SearchAThing.Sci.Arc3D.SensedAngleStartDeg
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SensedAngleStartDeg
    path: src/sci/Arc3D.cs
    startLine: 548
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public double SensedAngleStartDeg { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SensedAngleStartDeg As Double
  overload: SearchAThing.Sci.Arc3D.SensedAngleStartDeg*
- uid: SearchAThing.Sci.Arc3D.AngleEnd
  commentId: P:SearchAThing.Sci.Arc3D.AngleEnd
  id: AngleEnd
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: AngleEnd
  nameWithType: Arc3D.AngleEnd
  fullName: SearchAThing.Sci.Arc3D.AngleEnd
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: AngleEnd
    path: src/sci/Arc3D.cs
    startLine: 554
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    end angle (rad) [0-2pi) respect cs xaxis rotating around cs zaxis

    note that start angle can be greather than end angle
  example: []
  syntax:
    content: public double AngleEnd { get; protected set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property AngleEnd As Double
  overload: SearchAThing.Sci.Arc3D.AngleEnd*
- uid: SearchAThing.Sci.Arc3D.AngleEndDeg
  commentId: P:SearchAThing.Sci.Arc3D.AngleEndDeg
  id: AngleEndDeg
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: AngleEndDeg
  nameWithType: Arc3D.AngleEndDeg
  fullName: SearchAThing.Sci.Arc3D.AngleEndDeg
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: AngleEndDeg
    path: src/sci/Arc3D.cs
    startLine: 556
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public double AngleEndDeg { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property AngleEndDeg As Double
  overload: SearchAThing.Sci.Arc3D.AngleEndDeg*
- uid: SearchAThing.Sci.Arc3D.SensedAngleEnd
  commentId: P:SearchAThing.Sci.Arc3D.SensedAngleEnd
  id: SensedAngleEnd
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: SensedAngleEnd
  nameWithType: Arc3D.SensedAngleEnd
  fullName: SearchAThing.Sci.Arc3D.SensedAngleEnd
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SensedAngleEnd
    path: src/sci/Arc3D.cs
    startLine: 558
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public double SensedAngleEnd { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SensedAngleEnd As Double
  overload: SearchAThing.Sci.Arc3D.SensedAngleEnd*
- uid: SearchAThing.Sci.Arc3D.SensedAngleEndDeg
  commentId: P:SearchAThing.Sci.Arc3D.SensedAngleEndDeg
  id: SensedAngleEndDeg
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: SensedAngleEndDeg
  nameWithType: Arc3D.SensedAngleEndDeg
  fullName: SearchAThing.Sci.Arc3D.SensedAngleEndDeg
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SensedAngleEndDeg
    path: src/sci/Arc3D.cs
    startLine: 560
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public double SensedAngleEndDeg { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SensedAngleEndDeg As Double
  overload: SearchAThing.Sci.Arc3D.SensedAngleEndDeg*
- uid: SearchAThing.Sci.Arc3D.Angle
  commentId: P:SearchAThing.Sci.Arc3D.Angle
  id: Angle
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Angle
  nameWithType: Arc3D.Angle
  fullName: SearchAThing.Sci.Arc3D.Angle
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Angle
    path: src/sci/Arc3D.cs
    startLine: 566
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Arc (rad) angle length.

    angle between start-end or end-start depending on what start is less than end or not
  example: []
  syntax:
    content: public double Angle { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Angle As Double
  overload: SearchAThing.Sci.Arc3D.Angle*
- uid: SearchAThing.Sci.Arc3D.PtAtAngle(System.Double)
  commentId: M:SearchAThing.Sci.Arc3D.PtAtAngle(System.Double)
  id: PtAtAngle(System.Double)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: PtAtAngle(double)
  nameWithType: Arc3D.PtAtAngle(double)
  fullName: SearchAThing.Sci.Arc3D.PtAtAngle(double)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: PtAtAngle
    path: src/sci/Arc3D.cs
    startLine: 572
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    point on the arc circumnfere at given angle (rotating cs basex around cs basez)

    note: it start
  example: []
  syntax:
    content: public Vector3D PtAtAngle(double angleRad)
    parameters:
    - id: angleRad
      type: System.Double
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function PtAtAngle(angleRad As Double) As Vector3D
  overload: SearchAThing.Sci.Arc3D.PtAtAngle*
  nameWithType.vb: Arc3D.PtAtAngle(Double)
  fullName.vb: SearchAThing.Sci.Arc3D.PtAtAngle(Double)
  name.vb: PtAtAngle(Double)
- uid: SearchAThing.Sci.Arc3D.PtAngle(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Arc3D.PtAngle(System.Double,SearchAThing.Sci.Vector3D)
  id: PtAngle(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: PtAngle(double, Vector3D)
  nameWithType: Arc3D.PtAngle(double, Vector3D)
  fullName: SearchAThing.Sci.Arc3D.PtAngle(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: PtAngle
    path: src/sci/Arc3D.cs
    startLine: 580
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    return the angle (rad) of the point respect cs x axis rotating around cs z axis

    to reach given point angle alignment
  example: []
  syntax:
    content: public double PtAngle(double tol, Vector3D pt)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: pt
      type: SearchAThing.Sci.Vector3D
      description: point to query angle respect csx axis for
    return:
      type: System.Double
    content.vb: Public Function PtAngle(tol As Double, pt As Vector3D) As Double
  overload: SearchAThing.Sci.Arc3D.PtAngle*
  nameWithType.vb: Arc3D.PtAngle(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Arc3D.PtAngle(Double, SearchAThing.Sci.Vector3D)
  name.vb: PtAngle(Double, Vector3D)
- uid: SearchAThing.Sci.Arc3D.From
  commentId: P:SearchAThing.Sci.Arc3D.From
  id: From
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: From
  nameWithType: Arc3D.From
  fullName: SearchAThing.Sci.Arc3D.From
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: From
    path: src/sci/Arc3D.cs
    startLine: 591
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: point at angle start
  example: []
  syntax:
    content: public Vector3D From { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property From As Vector3D
  overload: SearchAThing.Sci.Arc3D.From*
- uid: SearchAThing.Sci.Arc3D.To
  commentId: P:SearchAThing.Sci.Arc3D.To
  id: To
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: To
  nameWithType: Arc3D.To
  fullName: SearchAThing.Sci.Arc3D.To
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: To
    path: src/sci/Arc3D.cs
    startLine: 596
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: point at angle end
  example: []
  syntax:
    content: public Vector3D To { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property [To] As Vector3D
  overload: SearchAThing.Sci.Arc3D.To*
- uid: SearchAThing.Sci.Arc3D.Segment
  commentId: P:SearchAThing.Sci.Arc3D.Segment
  id: Segment
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Segment
  nameWithType: Arc3D.Segment
  fullName: SearchAThing.Sci.Arc3D.Segment
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Segment
    path: src/sci/Arc3D.cs
    startLine: 601
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: return From,To segment
  example: []
  syntax:
    content: public Line3D Segment { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public ReadOnly Property Segment As Line3D
  overload: SearchAThing.Sci.Arc3D.Segment*
- uid: SearchAThing.Sci.Arc3D.EqualsTol(System.Double,SearchAThing.Sci.Arc3D)
  commentId: M:SearchAThing.Sci.Arc3D.EqualsTol(System.Double,SearchAThing.Sci.Arc3D)
  id: EqualsTol(System.Double,SearchAThing.Sci.Arc3D)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: EqualsTol(double, Arc3D)
  nameWithType: Arc3D.EqualsTol(double, Arc3D)
  fullName: SearchAThing.Sci.Arc3D.EqualsTol(double, SearchAThing.Sci.Arc3D)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EqualsTol
    path: src/sci/Arc3D.cs
    startLine: 609
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Checks if two arcs are equals ( it checks agains swapped from-to too )
  example: []
  syntax:
    content: public bool EqualsTol(double tol, Arc3D other)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: other
      type: SearchAThing.Sci.Arc3D
      description: other arc
    return:
      type: System.Boolean
      description: trus if two arcs equals
    content.vb: Public Function EqualsTol(tol As Double, other As Arc3D) As Boolean
  overload: SearchAThing.Sci.Arc3D.EqualsTol*
  nameWithType.vb: Arc3D.EqualsTol(Double, Arc3D)
  fullName.vb: SearchAThing.Sci.Arc3D.EqualsTol(Double, SearchAThing.Sci.Arc3D)
  name.vb: EqualsTol(Double, Arc3D)
- uid: SearchAThing.Sci.Arc3D.Bulge(System.Double)
  commentId: M:SearchAThing.Sci.Arc3D.Bulge(System.Double)
  id: Bulge(System.Double)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Bulge(double)
  nameWithType: Arc3D.Bulge(double)
  fullName: SearchAThing.Sci.Arc3D.Bulge(double)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Bulge
    path: src/sci/Arc3D.cs
    startLine: 622
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: http://www.lee-mac.com/bulgeconversion.html
  example: []
  syntax:
    content: public double Bulge(double tol)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    return:
      type: System.Double
      description: arc buldge value
    content.vb: Public Function Bulge(tol As Double) As Double
  overload: SearchAThing.Sci.Arc3D.Bulge*
  nameWithType.vb: Arc3D.Bulge(Double)
  fullName.vb: SearchAThing.Sci.Arc3D.Bulge(Double)
  name.vb: Bulge(Double)
- uid: SearchAThing.Sci.Arc3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean,System.Boolean)
  id: Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Contains(double, Vector3D, bool, bool)
  nameWithType: Arc3D.Contains(double, Vector3D, bool, bool)
  fullName: SearchAThing.Sci.Arc3D.Contains(double, SearchAThing.Sci.Vector3D, bool, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains
    path: src/sci/Arc3D.cs
    startLine: 633
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: statis if given point contained in arc perimeter/shape or circle perimeter/shape depending on specified mode
  example: []
  syntax:
    content: protected bool Contains(double tol, Vector3D pt, bool inArcAngleRange, bool onlyPerimeter)
    parameters:
    - id: tol
      type: System.Double
      description: len tolerance
    - id: pt
      type: SearchAThing.Sci.Vector3D
      description: point to test
    - id: inArcAngleRange
      type: System.Boolean
      description: true if point angle must contained in arc angles, false to test like a circle
    - id: onlyPerimeter
      type: System.Boolean
      description: true to test point contained only in perimeter, false to test also contained in area
    return:
      type: System.Boolean
      description: true if arc contains given pt
    content.vb: Protected Function Contains(tol As Double, pt As Vector3D, inArcAngleRange As Boolean, onlyPerimeter As Boolean) As Boolean
  overload: SearchAThing.Sci.Arc3D.Contains*
  nameWithType.vb: Arc3D.Contains(Double, Vector3D, Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Contains(Double, SearchAThing.Sci.Vector3D, Boolean, Boolean)
  name.vb: Contains(Double, Vector3D, Boolean, Boolean)
- uid: SearchAThing.Sci.Arc3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  id: Contains(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Contains(double, Vector3D, bool)
  nameWithType: Arc3D.Contains(double, Vector3D, bool)
  fullName: SearchAThing.Sci.Arc3D.Contains(double, SearchAThing.Sci.Vector3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Contains
    path: src/sci/Arc3D.cs
    startLine: 658
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if given point relies on this arc perimeter or shape depending on arguments
  example: []
  syntax:
    content: public virtual bool Contains(double tol, Vector3D pt, bool onlyPerimeter)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: pt
      type: SearchAThing.Sci.Vector3D
      description: point to check
    - id: onlyPerimeter
      type: System.Boolean
      description: if true it checks if point is on perimeter; if false it will check in area too
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Contains(tol As Double, pt As Vector3D, onlyPerimeter As Boolean) As Boolean
  overload: SearchAThing.Sci.Arc3D.Contains*
  nameWithType.vb: Arc3D.Contains(Double, Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Contains(Double, SearchAThing.Sci.Vector3D, Boolean)
  name.vb: Contains(Double, Vector3D, Boolean)
- uid: SearchAThing.Sci.Arc3D.Center
  commentId: P:SearchAThing.Sci.Arc3D.Center
  id: Center
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: Arc3D.Center
  fullName: SearchAThing.Sci.Arc3D.Center
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Center
    path: src/sci/Arc3D.cs
    startLine: 661
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Vector3D Center { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property Center As Vector3D
  overload: SearchAThing.Sci.Arc3D.Center*
- uid: SearchAThing.Sci.Arc3D.Perpendicular(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Arc3D.Perpendicular(System.Double,SearchAThing.Sci.Vector3D)
  id: Perpendicular(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Perpendicular(double, Vector3D)
  nameWithType: Arc3D.Perpendicular(double, Vector3D)
  fullName: SearchAThing.Sci.Arc3D.Perpendicular(double, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Perpendicular
    path: src/sci/Arc3D.cs
    startLine: 666
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Build a perpendicular vector to this arc starting from the given point p.
  example: []
  syntax:
    content: public Line3D? Perpendicular(double tol, Vector3D p)
    parameters:
    - id: tol
      type: System.Double
    - id: p
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Line3D
    content.vb: Public Function Perpendicular(tol As Double, p As Vector3D) As Line3D
  overload: SearchAThing.Sci.Arc3D.Perpendicular*
  nameWithType.vb: Arc3D.Perpendicular(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Arc3D.Perpendicular(Double, SearchAThing.Sci.Vector3D)
  name.vb: Perpendicular(Double, Vector3D)
- uid: SearchAThing.Sci.Arc3D.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  id: Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Project(double, Vector3D, bool)
  nameWithType: Arc3D.Project(double, Vector3D, bool)
  fullName: SearchAThing.Sci.Arc3D.Project(double, SearchAThing.Sci.Vector3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Project
    path: src/sci/Arc3D.cs
    startLine: 681
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    project given point p to this arc.        

    returns null if ip falls outside arc perimeter and only_arc:true argument or p in the arc plane
  example: []
  syntax:
    content: public override Vector3D? Project(double tol, Vector3D p, bool arcSegmentMode = true)
    parameters:
    - id: tol
      type: System.Double
    - id: p
      type: SearchAThing.Sci.Vector3D
    - id: arcSegmentMode
      type: System.Boolean
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Overrides Function Project(tol As Double, p As Vector3D, arcSegmentMode As Boolean = True) As Vector3D
  overridden: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  overload: SearchAThing.Sci.Arc3D.Project*
  nameWithType.vb: Arc3D.Project(Double, Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Project(Double, SearchAThing.Sci.Vector3D, Boolean)
  name.vb: Project(Double, Vector3D, Boolean)
- uid: SearchAThing.Sci.Arc3D.ToCircle3D(System.Double)
  commentId: M:SearchAThing.Sci.Arc3D.ToCircle3D(System.Double)
  id: ToCircle3D(System.Double)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: ToCircle3D(double)
  nameWithType: Arc3D.ToCircle3D(double)
  fullName: SearchAThing.Sci.Arc3D.ToCircle3D(double)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToCircle3D
    path: src/sci/Arc3D.cs
    startLine: 695
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Circle3D ToCircle3D(double tol)
    parameters:
    - id: tol
      type: System.Double
    return:
      type: SearchAThing.Sci.Circle3D
    content.vb: Public Function ToCircle3D(tol As Double) As Circle3D
  overload: SearchAThing.Sci.Arc3D.ToCircle3D*
  nameWithType.vb: Arc3D.ToCircle3D(Double)
  fullName.vb: SearchAThing.Sci.Arc3D.ToCircle3D(Double)
  name.vb: ToCircle3D(Double)
- uid: SearchAThing.Sci.Arc3D.CircularSectorArea
  commentId: P:SearchAThing.Sci.Arc3D.CircularSectorArea
  id: CircularSectorArea
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: CircularSectorArea
  nameWithType: Arc3D.CircularSectorArea
  fullName: SearchAThing.Sci.Arc3D.CircularSectorArea
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CircularSectorArea
    path: src/sci/Arc3D.cs
    startLine: 700
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Area of circular sector
  example: []
  syntax:
    content: public double CircularSectorArea { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property CircularSectorArea As Double
  overload: SearchAThing.Sci.Arc3D.CircularSectorArea*
- uid: SearchAThing.Sci.Arc3D.ChordTriangleArea
  commentId: P:SearchAThing.Sci.Arc3D.ChordTriangleArea
  id: ChordTriangleArea
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: ChordTriangleArea
  nameWithType: Arc3D.ChordTriangleArea
  fullName: SearchAThing.Sci.Arc3D.ChordTriangleArea
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ChordTriangleArea
    path: src/sci/Arc3D.cs
    startLine: 705
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Area of chord triangle
  example: []
  syntax:
    content: public double ChordTriangleArea { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ChordTriangleArea As Double
  overload: SearchAThing.Sci.Arc3D.ChordTriangleArea*
- uid: SearchAThing.Sci.Arc3D.SegmentArea
  commentId: P:SearchAThing.Sci.Arc3D.SegmentArea
  id: SegmentArea
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: SegmentArea
  nameWithType: Arc3D.SegmentArea
  fullName: SearchAThing.Sci.Arc3D.SegmentArea
  type: Property
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: SegmentArea
    path: src/sci/Arc3D.cs
    startLine: 710
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Segment area ( CircularSectorArea - ChordTriangleArea )
  example: []
  syntax:
    content: public double SegmentArea { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property SegmentArea As Double
  overload: SearchAThing.Sci.Arc3D.SegmentArea*
- uid: SearchAThing.Sci.Arc3D.CentreOfMass(System.Double@)
  commentId: M:SearchAThing.Sci.Arc3D.CentreOfMass(System.Double@)
  id: CentreOfMass(System.Double@)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: CentreOfMass(out double)
  nameWithType: Arc3D.CentreOfMass(out double)
  fullName: SearchAThing.Sci.Arc3D.CentreOfMass(out double)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CentreOfMass
    path: src/sci/Arc3D.cs
    startLine: 717
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: centre of mass of circular segment
  example: []
  syntax:
    content: public Vector3D CentreOfMass(out double A)
    parameters:
    - id: A
      type: System.Double
      description: arc area
    return:
      type: SearchAThing.Sci.Vector3D
      description: location of arc centre of mass
    content.vb: Public Function CentreOfMass(A As Double) As Vector3D
  overload: SearchAThing.Sci.Arc3D.CentreOfMass*
  nameWithType.vb: Arc3D.CentreOfMass(Double)
  fullName.vb: SearchAThing.Sci.Arc3D.CentreOfMass(Double)
  name.vb: CentreOfMass(Double)
- uid: SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Arc3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Arc3D,System.Boolean)
  id: Intersect(System.Double,SearchAThing.Sci.Arc3D,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Intersect(double, Arc3D, bool)
  nameWithType: Arc3D.Intersect(double, Arc3D, bool)
  fullName: SearchAThing.Sci.Arc3D.Intersect(double, SearchAThing.Sci.Arc3D, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Arc3D.cs
    startLine: 826
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: finds intersection points between two arcs
  example: []
  syntax:
    content: public IEnumerable<Vector3D> Intersect(double tol, Arc3D other, bool onlyPerimeter)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: other
      type: SearchAThing.Sci.Arc3D
      description: other arc
    - id: onlyPerimeter
      type: System.Boolean
      description: true to test point contained only in perimeter, false to test also contained in area
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: ''
    content.vb: Public Function Intersect(tol As Double, other As Arc3D, onlyPerimeter As Boolean) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Arc3D.Intersect*
  nameWithType.vb: Arc3D.Intersect(Double, Arc3D, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Intersect(Double, SearchAThing.Sci.Arc3D, Boolean)
  name.vb: Intersect(Double, Arc3D, Boolean)
- uid: SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean,System.Boolean)
  id: Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Intersect(double, Line3D, bool, bool, bool)
  nameWithType: Arc3D.Intersect(double, Line3D, bool, bool, bool)
  fullName: SearchAThing.Sci.Arc3D.Intersect(double, SearchAThing.Sci.Line3D, bool, bool, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Arc3D.cs
    startLine: 846
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: states if this arc intersect given line
  example: []
  syntax:
    content: public IEnumerable<Vector3D> Intersect(double tol, Line3D l, bool onlyPerimeter, bool lineSegmentMode, bool arcSegmentMode)
    parameters:
    - id: tol
      type: System.Double
      description: arc tolerance
    - id: l
      type: SearchAThing.Sci.Line3D
      description: line to test intersect
    - id: onlyPerimeter
      type: System.Boolean
      description: check intersection only along perimeter; if false it will check intersection along arc area shape border too
    - id: lineSegmentMode
      type: System.Boolean
      description: if true line treat as segment instead of infinite
    - id: arcSegmentMode
      type: System.Boolean
      description: if true arc treat as circle
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
    content.vb: Public Function Intersect(tol As Double, l As Line3D, onlyPerimeter As Boolean, lineSegmentMode As Boolean, arcSegmentMode As Boolean) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Arc3D.Intersect*
  nameWithType.vb: Arc3D.Intersect(Double, Line3D, Boolean, Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Intersect(Double, SearchAThing.Sci.Line3D, Boolean, Boolean, Boolean)
  name.vb: Intersect(Double, Line3D, Boolean, Boolean, Boolean)
- uid: SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean)
  id: Intersect(System.Double,SearchAThing.Sci.Line3D,System.Boolean,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Intersect(double, Line3D, bool, bool)
  nameWithType: Arc3D.Intersect(double, Line3D, bool, bool)
  fullName: SearchAThing.Sci.Arc3D.Intersect(double, SearchAThing.Sci.Line3D, bool, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Arc3D.cs
    startLine: 893
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: find ips of intersection between this arc and given line
  example: []
  syntax:
    content: public virtual IEnumerable<Vector3D> Intersect(double tol, Line3D l, bool onlyPerimeter, bool lineSegmentMode)
    parameters:
    - id: tol
      type: System.Double
      description: length tolerance
    - id: l
      type: SearchAThing.Sci.Line3D
      description: line
    - id: onlyPerimeter
      type: System.Boolean
      description: check intersection only along perimeter; if false it will check intersection along arc area shape border too
    - id: lineSegmentMode
      type: System.Boolean
      description: if true treat given line as segment; if false as infinite line
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: intersection points between this arc and given line
    content.vb: Public Overridable Function Intersect(tol As Double, l As Line3D, onlyPerimeter As Boolean, lineSegmentMode As Boolean) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Arc3D.Intersect*
  nameWithType.vb: Arc3D.Intersect(Double, Line3D, Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Intersect(Double, SearchAThing.Sci.Line3D, Boolean, Boolean)
  name.vb: Intersect(Double, Line3D, Boolean, Boolean)
- uid: SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D,System.Boolean,System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D,System.Boolean,System.Boolean)
  id: Intersect(System.Double,SearchAThing.Sci.CoordinateSystem3D,System.Boolean,System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Intersect(double, CoordinateSystem3D, bool, bool)
  nameWithType: Arc3D.Intersect(double, CoordinateSystem3D, bool, bool)
  fullName: SearchAThing.Sci.Arc3D.Intersect(double, SearchAThing.Sci.CoordinateSystem3D, bool, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Intersect
    path: src/sci/Arc3D.cs
    startLine: 909
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    find ips of intersect this arc to the given cs plane; 

    return empty set if arc cs plane parallel to other given cs
  remarks: >-
    [unit test](https://github.com/devel0/netcore-sci/tree/master/src/test/Arc3D/Arc3DTest_0001.cs)

    ![image](../src/test/Arc3D/Arc3DTest_0001.png)
  example: []
  syntax:
    content: public IEnumerable<Vector3D> Intersect(double tol, CoordinateSystem3D cs, bool onlyPerimeter, bool inArcAngleRange)
    parameters:
    - id: tol
      type: System.Double
      description: len tolerance
    - id: cs
      type: SearchAThing.Sci.CoordinateSystem3D
      description: cs xy plane
    - id: onlyPerimeter
      type: System.Boolean
      description: if false it will check in the arc area too, otherwise only on arc perimeter
    - id: inArcAngleRange
      type: System.Boolean
      description: if true find ips only for arc angle range
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: sample
    content.vb: Public Function Intersect(tol As Double, cs As CoordinateSystem3D, onlyPerimeter As Boolean, inArcAngleRange As Boolean) As IEnumerable(Of Vector3D)
  overload: SearchAThing.Sci.Arc3D.Intersect*
  nameWithType.vb: Arc3D.Intersect(Double, CoordinateSystem3D, Boolean, Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Intersect(Double, SearchAThing.Sci.CoordinateSystem3D, Boolean, Boolean)
  name.vb: Intersect(Double, CoordinateSystem3D, Boolean, Boolean)
- uid: SearchAThing.Sci.Arc3D.ToString
  commentId: M:SearchAThing.Sci.Arc3D.ToString
  id: ToString
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Arc3D.ToString()
  fullName: SearchAThing.Sci.Arc3D.ToString()
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Arc3D.cs
    startLine: 924
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SearchAThing.Sci.Arc3D.ToString*
- uid: SearchAThing.Sci.Arc3D.ToString(System.Int32)
  commentId: M:SearchAThing.Sci.Arc3D.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: ToString(int)
  nameWithType: Arc3D.ToString(int)
  fullName: SearchAThing.Sci.Arc3D.ToString(int)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: ToString
    path: src/sci/Arc3D.cs
    startLine: 926
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  example: []
  syntax:
    content: public override string ToString(int digits = 3)
    parameters:
    - id: digits
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Overrides Function ToString(digits As Integer = 3) As String
  overridden: SearchAThing.Sci.Edge.ToString(System.Int32)
  overload: SearchAThing.Sci.Arc3D.ToString*
  nameWithType.vb: Arc3D.ToString(Integer)
  fullName.vb: SearchAThing.Sci.Arc3D.ToString(Integer)
  name.vb: ToString(Integer)
- uid: SearchAThing.Sci.Arc3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D},System.Boolean)
  commentId: M:SearchAThing.Sci.Arc3D.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D},System.Boolean)
  id: Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D},System.Boolean)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Split(double, IEnumerable<Vector3D>, bool)
  nameWithType: Arc3D.Split(double, IEnumerable<Vector3D>, bool)
  fullName: SearchAThing.Sci.Arc3D.Split(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>, bool)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Split
    path: src/sci/Arc3D.cs
    startLine: 937
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    create a set of subarc from this by splitting through given split points

    split point are not required to be on perimeter of the arc ( a center arc to point line will split )

    generated subarcs will start from this arc angleFrom and contiguosly end to angleTo
  example: []
  syntax:
    content: public IEnumerable<Arc3D> Split(double tol, IEnumerable<Vector3D> _splitPts, bool validate_pts = false)
    parameters:
    - id: tol
      type: System.Double
      description: arc length tolerance
    - id: _splitPts
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
      description: point where split arc
    - id: validate_pts
      type: System.Boolean
      description: if true split only for split points on arc perimeter
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Arc3D}
    content.vb: Public Function Split(tol As Double, _splitPts As IEnumerable(Of Vector3D), validate_pts As Boolean = False) As IEnumerable(Of Arc3D)
  overload: SearchAThing.Sci.Arc3D.Split*
  nameWithType.vb: Arc3D.Split(Double, IEnumerable(Of Vector3D), Boolean)
  fullName.vb: SearchAThing.Sci.Arc3D.Split(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D), Boolean)
  name.vb: Split(Double, IEnumerable(Of Vector3D), Boolean)
- uid: SearchAThing.Sci.Arc3D.Discretize(System.Double)
  commentId: M:SearchAThing.Sci.Arc3D.Discretize(System.Double)
  id: Discretize(System.Double)
  parent: SearchAThing.Sci.Arc3D
  langs:
  - csharp
  - vb
  name: Discretize(double)
  nameWithType: Arc3D.Discretize(double)
  fullName: SearchAThing.Sci.Arc3D.Discretize(double)
  type: Method
  source:
    remote:
      path: src/sci/Arc3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Discretize
    path: src/sci/Arc3D.cs
    startLine: 969
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: retrieve a discretized representation of this arc
  example: []
  syntax:
    content: public IEnumerable<Line3D> Discretize(double maxLineAngleRadStep)
    parameters:
    - id: maxLineAngleRadStep
      type: System.Double
      description: lines angles max
    return:
      type: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Line3D}
    content.vb: Public Function Discretize(maxLineAngleRadStep As Double) As IEnumerable(Of Line3D)
  overload: SearchAThing.Sci.Arc3D.Discretize*
  nameWithType.vb: Arc3D.Discretize(Double)
  fullName.vb: SearchAThing.Sci.Arc3D.Discretize(Double)
  name.vb: Discretize(Double)
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SearchAThing.Sci.Geometry
  commentId: T:SearchAThing.Sci.Geometry
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Geometry.html
  name: Geometry
  nameWithType: Geometry
  fullName: SearchAThing.Sci.Geometry
- uid: SearchAThing.Sci.Edge
  commentId: T:SearchAThing.Sci.Edge
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Edge.html
  name: Edge
  nameWithType: Edge
  fullName: SearchAThing.Sci.Edge
- uid: SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
  commentId: M:SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
  parent: SearchAThing.Sci.Edge
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CopyFrom_SearchAThing_Sci_Edge_
  name: CopyFrom(Edge)
  nameWithType: Edge.CopyFrom(Edge)
  fullName: SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
    name: CopyFrom
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CopyFrom_SearchAThing_Sci_Edge_
  - name: (
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.CopyFrom(SearchAThing.Sci.Edge)
    name: CopyFrom
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CopyFrom_SearchAThing_Sci_Edge_
  - name: (
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
- uid: SearchAThing.Sci.Edge.Sense
  commentId: P:SearchAThing.Sci.Edge.Sense
  parent: SearchAThing.Sci.Edge
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Sense
  name: Sense
  nameWithType: Edge.Sense
  fullName: SearchAThing.Sci.Edge.Sense
- uid: SearchAThing.Sci.Edge.SGeomFrom
  commentId: P:SearchAThing.Sci.Edge.SGeomFrom
  parent: SearchAThing.Sci.Edge
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_SGeomFrom
  name: SGeomFrom
  nameWithType: Edge.SGeomFrom
  fullName: SearchAThing.Sci.Edge.SGeomFrom
- uid: SearchAThing.Sci.Edge.SGeomTo
  commentId: P:SearchAThing.Sci.Edge.SGeomTo
  parent: SearchAThing.Sci.Edge
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_SGeomTo
  name: SGeomTo
  nameWithType: Edge.SGeomTo
  fullName: SearchAThing.Sci.Edge.SGeomTo
- uid: SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_OtherEndpoint_System_Double_SearchAThing_Sci_Vector3D_
  name: OtherEndpoint(double, Vector3D)
  nameWithType: Edge.OtherEndpoint(double, Vector3D)
  fullName: SearchAThing.Sci.Edge.OtherEndpoint(double, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.OtherEndpoint(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.OtherEndpoint(Double, SearchAThing.Sci.Vector3D)
  name.vb: OtherEndpoint(Double, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
    name: OtherEndpoint
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_OtherEndpoint_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.OtherEndpoint(System.Double,SearchAThing.Sci.Vector3D)
    name: OtherEndpoint
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_OtherEndpoint_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: EndpointMatches(double, Vector3D, Vector3D)
  nameWithType: Edge.EndpointMatches(double, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Edge.EndpointMatches(double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.EndpointMatches(Double, Vector3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.EndpointMatches(Double, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  name.vb: EndpointMatches(Double, Vector3D, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
    name: EndpointMatches
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
    name: EndpointMatches
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_
  name: EndpointMatches(double, Vector3D)
  nameWithType: Edge.EndpointMatches(double, Vector3D)
  fullName: SearchAThing.Sci.Edge.EndpointMatches(double, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.EndpointMatches(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.EndpointMatches(Double, SearchAThing.Sci.Vector3D)
  name.vb: EndpointMatches(Double, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
    name: EndpointMatches
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.EndpointMatches(System.Double,SearchAThing.Sci.Vector3D)
    name: EndpointMatches
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EndpointMatches_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
  commentId: M:SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CheckSense_System_Double_SearchAThing_Sci_Edge_
  name: CheckSense(double, Edge)
  nameWithType: Edge.CheckSense(double, Edge)
  fullName: SearchAThing.Sci.Edge.CheckSense(double, SearchAThing.Sci.Edge)
  nameWithType.vb: Edge.CheckSense(Double, Edge)
  fullName.vb: SearchAThing.Sci.Edge.CheckSense(Double, SearchAThing.Sci.Edge)
  name.vb: CheckSense(Double, Edge)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
    name: CheckSense
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CheckSense_System_Double_SearchAThing_Sci_Edge_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.CheckSense(System.Double,SearchAThing.Sci.Edge)
    name: CheckSense
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_CheckSense_System_Double_SearchAThing_Sci_Edge_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Edge
    name: Edge
    href: SearchAThing.Sci.Edge.html
  - name: )
- uid: SearchAThing.Sci.Geometry.GeomType
  commentId: P:SearchAThing.Sci.Geometry.GeomType
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomType
  name: GeomType
  nameWithType: Geometry.GeomType
  fullName: SearchAThing.Sci.Geometry.GeomType
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EdgeContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  name: EdgeContainsPoint(double, Vector3D)
  nameWithType: Edge.EdgeContainsPoint(double, Vector3D)
  fullName: SearchAThing.Sci.Edge.EdgeContainsPoint(double, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.EdgeContainsPoint(Double, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.EdgeContainsPoint(Double, SearchAThing.Sci.Vector3D)
  name.vb: EdgeContainsPoint(Double, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
    name: EdgeContainsPoint
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EdgeContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.EdgeContainsPoint(System.Double,SearchAThing.Sci.Vector3D)
    name: EdgeContainsPoint
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_EdgeContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Arc3D.EdgeContainsPoint*
  commentId: Overload:SearchAThing.Sci.Arc3D.EdgeContainsPoint
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_EdgeContainsPoint_System_Double_SearchAThing_Sci_Vector3D_
  name: EdgeContainsPoint
  nameWithType: Arc3D.EdgeContainsPoint
  fullName: SearchAThing.Sci.Arc3D.EdgeContainsPoint
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  name: Split(double, IEnumerable<Vector3D>)
  nameWithType: Geometry.Split(double, IEnumerable<Vector3D>)
  fullName: SearchAThing.Sci.Geometry.Split(double, System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>)
  nameWithType.vb: Geometry.Split(Double, IEnumerable(Of Vector3D))
  fullName.vb: SearchAThing.Sci.Geometry.Split(Double, System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: Split(Double, IEnumerable(Of Vector3D))
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
    name: Split
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Split(System.Double,System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D})
    name: Split
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  - name: )
- uid: SearchAThing.Sci.Arc3D.Split*
  commentId: Overload:SearchAThing.Sci.Arc3D.Split
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Split_System_Double_System_Collections_Generic_IEnumerable_SearchAThing_Sci_Vector3D__
  name: Split
  nameWithType: Arc3D.Split
  fullName: SearchAThing.Sci.Arc3D.Split
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Vector3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector3D>
  nameWithType: IEnumerable<Vector3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Vector3D>
  nameWithType.vb: IEnumerable(Of Vector3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Vector3D)
  name.vb: IEnumerable(Of Vector3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Geometry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Geometry>
  nameWithType: IEnumerable<Geometry>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Geometry>
  nameWithType.vb: IEnumerable(Of Geometry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Geometry)
  name.vb: IEnumerable(Of Geometry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SearchAThing.Sci.Geometry.MidPoint
  commentId: P:SearchAThing.Sci.Geometry.MidPoint
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_MidPoint
  name: MidPoint
  nameWithType: Geometry.MidPoint
  fullName: SearchAThing.Sci.Geometry.MidPoint
- uid: SearchAThing.Sci.Arc3D.MidPoint*
  commentId: Overload:SearchAThing.Sci.Arc3D.MidPoint
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_MidPoint
  name: MidPoint
  nameWithType: Arc3D.MidPoint
  fullName: SearchAThing.Sci.Arc3D.MidPoint
- uid: SearchAThing.Sci.Edge.QCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Edge.QCadScript(System.Boolean)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_QCadScript_System_Boolean_
  name: QCadScript(bool)
  nameWithType: Edge.QCadScript(bool)
  fullName: SearchAThing.Sci.Edge.QCadScript(bool)
  nameWithType.vb: Edge.QCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Edge.QCadScript(Boolean)
  name.vb: QCadScript(Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.QCadScript(System.Boolean)
    name: QCadScript
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_QCadScript_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.QCadScript(System.Boolean)
    name: QCadScript
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_QCadScript_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Arc3D.QCadScript*
  commentId: Overload:SearchAThing.Sci.Arc3D.QCadScript
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_QCadScript_System_Boolean_
  name: QCadScript
  nameWithType: Arc3D.QCadScript
  fullName: SearchAThing.Sci.Arc3D.QCadScript
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
  commentId: M:SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ProgeCadScript_System_Boolean_
  name: ProgeCadScript(bool)
  nameWithType: Edge.ProgeCadScript(bool)
  fullName: SearchAThing.Sci.Edge.ProgeCadScript(bool)
  nameWithType.vb: Edge.ProgeCadScript(Boolean)
  fullName.vb: SearchAThing.Sci.Edge.ProgeCadScript(Boolean)
  name.vb: ProgeCadScript(Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
    name: ProgeCadScript
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ProgeCadScript_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.ProgeCadScript(System.Boolean)
    name: ProgeCadScript
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ProgeCadScript_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Arc3D.ProgeCadScript*
  commentId: Overload:SearchAThing.Sci.Arc3D.ProgeCadScript
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_ProgeCadScript_System_Boolean_
  name: ProgeCadScript
  nameWithType: Arc3D.ProgeCadScript
  fullName: SearchAThing.Sci.Arc3D.ProgeCadScript
- uid: SearchAThing.Sci.Arc3D.A0QCadScript*
  commentId: Overload:SearchAThing.Sci.Arc3D.A0QCadScript
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_A0QCadScript
  name: A0QCadScript
  nameWithType: Arc3D.A0QCadScript
  fullName: SearchAThing.Sci.Arc3D.A0QCadScript
- uid: SearchAThing.Sci.Arc3D.A0ProgeCadScript*
  commentId: Overload:SearchAThing.Sci.Arc3D.A0ProgeCadScript
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_A0ProgeCadScript
  name: A0ProgeCadScript
  nameWithType: Arc3D.A0ProgeCadScript
  fullName: SearchAThing.Sci.Arc3D.A0ProgeCadScript
- uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
  commentId: M:SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Plane3D_
  name: Project(double, Plane3D)
  nameWithType: Edge.Project(double, Plane3D)
  fullName: SearchAThing.Sci.Edge.Project(double, SearchAThing.Sci.Plane3D)
  nameWithType.vb: Edge.Project(Double, Plane3D)
  fullName.vb: SearchAThing.Sci.Edge.Project(Double, SearchAThing.Sci.Plane3D)
  name.vb: Project(Double, Plane3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
    name: Project
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Plane3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Plane3D
    name: Plane3D
    href: SearchAThing.Sci.Plane3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Plane3D)
    name: Project
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Plane3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Plane3D
    name: Plane3D
    href: SearchAThing.Sci.Plane3D.html
  - name: )
- uid: SearchAThing.Sci.Arc3D.Project*
  commentId: Overload:SearchAThing.Sci.Arc3D.Project
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Project_System_Double_SearchAThing_Sci_Plane3D_
  name: Project
  nameWithType: Arc3D.Project
  fullName: SearchAThing.Sci.Arc3D.Project
- uid: SearchAThing.Sci.Plane3D
  commentId: T:SearchAThing.Sci.Plane3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Plane3D.html
  name: Plane3D
  nameWithType: Plane3D
  fullName: SearchAThing.Sci.Plane3D
- uid: SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Offset_System_Double_SearchAThing_Sci_Vector3D_System_Double_
  name: Offset(double, Vector3D, double)
  nameWithType: Edge.Offset(double, Vector3D, double)
  fullName: SearchAThing.Sci.Edge.Offset(double, SearchAThing.Sci.Vector3D, double)
  nameWithType.vb: Edge.Offset(Double, Vector3D, Double)
  fullName.vb: SearchAThing.Sci.Edge.Offset(Double, SearchAThing.Sci.Vector3D, Double)
  name.vb: Offset(Double, Vector3D, Double)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
    name: Offset
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Offset_System_Double_SearchAThing_Sci_Vector3D_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.Offset(System.Double,SearchAThing.Sci.Vector3D,System.Double)
    name: Offset
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Offset_System_Double_SearchAThing_Sci_Vector3D_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: SearchAThing.Sci.Arc3D.Offset*
  commentId: Overload:SearchAThing.Sci.Arc3D.Offset
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Offset_System_Double_SearchAThing_Sci_Vector3D_System_Double_
  name: Offset
  nameWithType: Arc3D.Offset
  fullName: SearchAThing.Sci.Arc3D.Offset
- uid: SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_MoveEnd_System_Double_SearchAThing_Sci_EdgeEnd_SearchAThing_Sci_Vector3D_
  name: MoveEnd(double, EdgeEnd, Vector3D)
  nameWithType: Edge.MoveEnd(double, EdgeEnd, Vector3D)
  fullName: SearchAThing.Sci.Edge.MoveEnd(double, SearchAThing.Sci.EdgeEnd, SearchAThing.Sci.Vector3D)
  nameWithType.vb: Edge.MoveEnd(Double, EdgeEnd, Vector3D)
  fullName.vb: SearchAThing.Sci.Edge.MoveEnd(Double, SearchAThing.Sci.EdgeEnd, SearchAThing.Sci.Vector3D)
  name.vb: MoveEnd(Double, EdgeEnd, Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
    name: MoveEnd
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_MoveEnd_System_Double_SearchAThing_Sci_EdgeEnd_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.EdgeEnd
    name: EdgeEnd
    href: SearchAThing.Sci.EdgeEnd.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.MoveEnd(System.Double,SearchAThing.Sci.EdgeEnd,SearchAThing.Sci.Vector3D)
    name: MoveEnd
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_MoveEnd_System_Double_SearchAThing_Sci_EdgeEnd_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.EdgeEnd
    name: EdgeEnd
    href: SearchAThing.Sci.EdgeEnd.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Arc3D.MoveEnd*
  commentId: Overload:SearchAThing.Sci.Arc3D.MoveEnd
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_MoveEnd_System_Double_SearchAThing_Sci_EdgeEnd_SearchAThing_Sci_Vector3D_
  name: MoveEnd
  nameWithType: Arc3D.MoveEnd
  fullName: SearchAThing.Sci.Arc3D.MoveEnd
- uid: SearchAThing.Sci.EdgeEnd
  commentId: T:SearchAThing.Sci.EdgeEnd
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.EdgeEnd.html
  name: EdgeEnd
  nameWithType: EdgeEnd
  fullName: SearchAThing.Sci.EdgeEnd
- uid: SearchAThing.Sci.Geometry.Copy
  commentId: M:SearchAThing.Sci.Geometry.Copy
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  name: Copy()
  nameWithType: Geometry.Copy()
  fullName: SearchAThing.Sci.Geometry.Copy()
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Copy
    name: Copy
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  - name: (
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Copy
    name: Copy
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Copy
  - name: (
  - name: )
- uid: SearchAThing.Sci.Arc3D.Copy*
  commentId: Overload:SearchAThing.Sci.Arc3D.Copy
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Copy
  name: Copy
  nameWithType: Arc3D.Copy
  fullName: SearchAThing.Sci.Arc3D.Copy
- uid: SearchAThing.Sci.Arc3D.ToggleSense*
  commentId: Overload:SearchAThing.Sci.Arc3D.ToggleSense
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_ToggleSense
  name: ToggleSense
  nameWithType: Arc3D.ToggleSense
  fullName: SearchAThing.Sci.Arc3D.ToggleSense
- uid: SearchAThing.Sci.Arc3D
  commentId: T:SearchAThing.Sci.Arc3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Arc3D.html
  name: Arc3D
  nameWithType: Arc3D
  fullName: SearchAThing.Sci.Arc3D
- uid: SearchAThing.Sci.Geometry.Vertexes
  commentId: P:SearchAThing.Sci.Geometry.Vertexes
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Vertexes
  name: Vertexes
  nameWithType: Geometry.Vertexes
  fullName: SearchAThing.Sci.Geometry.Vertexes
- uid: SearchAThing.Sci.Arc3D.Vertexes*
  commentId: Overload:SearchAThing.Sci.Arc3D.Vertexes
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Vertexes
  name: Vertexes
  nameWithType: Arc3D.Vertexes
  fullName: SearchAThing.Sci.Arc3D.Vertexes
- uid: SearchAThing.Sci.Geometry.GeomFrom
  commentId: P:SearchAThing.Sci.Geometry.GeomFrom
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomFrom
  name: GeomFrom
  nameWithType: Geometry.GeomFrom
  fullName: SearchAThing.Sci.Geometry.GeomFrom
- uid: SearchAThing.Sci.Arc3D.GeomFrom*
  commentId: Overload:SearchAThing.Sci.Arc3D.GeomFrom
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_GeomFrom
  name: GeomFrom
  nameWithType: Arc3D.GeomFrom
  fullName: SearchAThing.Sci.Arc3D.GeomFrom
- uid: SearchAThing.Sci.Geometry.GeomTo
  commentId: P:SearchAThing.Sci.Geometry.GeomTo
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomTo
  name: GeomTo
  nameWithType: Geometry.GeomTo
  fullName: SearchAThing.Sci.Geometry.GeomTo
- uid: SearchAThing.Sci.Arc3D.GeomTo*
  commentId: Overload:SearchAThing.Sci.Arc3D.GeomTo
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_GeomTo
  name: GeomTo
  nameWithType: Arc3D.GeomTo
  fullName: SearchAThing.Sci.Arc3D.GeomTo
- uid: SearchAThing.Sci.Geometry.Length
  commentId: P:SearchAThing.Sci.Geometry.Length
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Length
  name: Length
  nameWithType: Geometry.Length
  fullName: SearchAThing.Sci.Geometry.Length
- uid: SearchAThing.Sci.Arc3D.Length*
  commentId: Overload:SearchAThing.Sci.Arc3D.Length
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Length
  name: Length
  nameWithType: Arc3D.Length
  fullName: SearchAThing.Sci.Arc3D.Length
- uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  commentId: M:SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  name: Divide(int, bool)
  nameWithType: Geometry.Divide(int, bool)
  fullName: SearchAThing.Sci.Geometry.Divide(int, bool)
  nameWithType.vb: Geometry.Divide(Integer, Boolean)
  fullName.vb: SearchAThing.Sci.Geometry.Divide(Integer, Boolean)
  name.vb: Divide(Integer, Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
    name: Divide
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Divide(System.Int32,System.Boolean)
    name: Divide
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Divide_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Arc3D.Divide*
  commentId: Overload:SearchAThing.Sci.Arc3D.Divide
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Divide_System_Int32_System_Boolean_
  name: Divide
  nameWithType: Arc3D.Divide
  fullName: SearchAThing.Sci.Arc3D.Divide
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SearchAThing.Sci.Geometry.BBox(System.Double)
  commentId: M:SearchAThing.Sci.Geometry.BBox(System.Double)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  name: BBox(double)
  nameWithType: Geometry.BBox(double)
  fullName: SearchAThing.Sci.Geometry.BBox(double)
  nameWithType.vb: Geometry.BBox(Double)
  fullName.vb: SearchAThing.Sci.Geometry.BBox(Double)
  name.vb: BBox(Double)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.BBox(System.Double)
    name: BBox
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.BBox(System.Double)
    name: BBox
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_BBox_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: SearchAThing.Sci.Arc3D.BBox*
  commentId: Overload:SearchAThing.Sci.Arc3D.BBox
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_BBox_System_Double_
  name: BBox
  nameWithType: Arc3D.BBox
  fullName: SearchAThing.Sci.Arc3D.BBox
- uid: SearchAThing.Sci.BBox3D
  commentId: T:SearchAThing.Sci.BBox3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.BBox3D.html
  name: BBox3D
  nameWithType: BBox3D
  fullName: SearchAThing.Sci.BBox3D
- uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  commentId: M:SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  name: GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  nameWithType: Geometry.GeomIntersect(double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName: SearchAThing.Sci.Geometry.GeomIntersect(double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  nameWithType.vb: Geometry.GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  fullName.vb: SearchAThing.Sci.Geometry.GeomIntersect(Double, SearchAThing.Sci.Geometry, SearchAThing.Sci.GeomSegmentMode, SearchAThing.Sci.GeomSegmentMode)
  name.vb: GeomIntersect(Double, Geometry, GeomSegmentMode, GeomSegmentMode)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
    name: GeomIntersect
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.GeomIntersect(System.Double,SearchAThing.Sci.Geometry,SearchAThing.Sci.GeomSegmentMode,SearchAThing.Sci.GeomSegmentMode)
    name: GeomIntersect
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.GeomSegmentMode
    name: GeomSegmentMode
    href: SearchAThing.Sci.GeomSegmentMode.html
  - name: )
- uid: SearchAThing.Sci.Arc3D.GeomIntersect*
  commentId: Overload:SearchAThing.Sci.Arc3D.GeomIntersect
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_GeomIntersect_System_Double_SearchAThing_Sci_Geometry_SearchAThing_Sci_GeomSegmentMode_SearchAThing_Sci_GeomSegmentMode_
  name: GeomIntersect
  nameWithType: Arc3D.GeomIntersect
  fullName: SearchAThing.Sci.Arc3D.GeomIntersect
- uid: SearchAThing.Sci.GeomSegmentMode
  commentId: T:SearchAThing.Sci.GeomSegmentMode
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.GeomSegmentMode.html
  name: GeomSegmentMode
  nameWithType: GeomSegmentMode
  fullName: SearchAThing.Sci.GeomSegmentMode
- uid: SearchAThing.Sci.Geometry.DxfEntity
  commentId: P:SearchAThing.Sci.Geometry.DxfEntity
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_DxfEntity
  name: DxfEntity
  nameWithType: Geometry.DxfEntity
  fullName: SearchAThing.Sci.Geometry.DxfEntity
- uid: SearchAThing.Sci.Arc3D.DxfEntity*
  commentId: Overload:SearchAThing.Sci.Arc3D.DxfEntity
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_DxfEntity
  name: DxfEntity
  nameWithType: Arc3D.DxfEntity
  fullName: SearchAThing.Sci.Arc3D.DxfEntity
- uid: netDxf.Entities.EntityObject
  commentId: T:netDxf.Entities.EntityObject
  parent: netDxf.Entities
  isExternal: true
  name: EntityObject
  nameWithType: EntityObject
  fullName: netDxf.Entities.EntityObject
- uid: netDxf.Entities
  commentId: N:netDxf.Entities
  isExternal: true
  name: netDxf.Entities
  nameWithType: netDxf.Entities
  fullName: netDxf.Entities
  spec.csharp:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
  spec.vb:
  - uid: netDxf
    name: netDxf
    isExternal: true
  - name: .
  - uid: netDxf.Entities
    name: Entities
    isExternal: true
- uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  commentId: M:SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
  parent: SearchAThing.Sci.Geometry
  isExternal: true
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  name: GeomEquals(double, Geometry, bool)
  nameWithType: Geometry.GeomEquals(double, Geometry, bool)
  fullName: SearchAThing.Sci.Geometry.GeomEquals(double, SearchAThing.Sci.Geometry, bool)
  nameWithType.vb: Geometry.GeomEquals(Double, Geometry, Boolean)
  fullName.vb: SearchAThing.Sci.Geometry.GeomEquals(Double, SearchAThing.Sci.Geometry, Boolean)
  name.vb: GeomEquals(Double, Geometry, Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
    name: GeomEquals
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.GeomEquals(System.Double,SearchAThing.Sci.Geometry,System.Boolean)
    name: GeomEquals
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Geometry
    name: Geometry
    href: SearchAThing.Sci.Geometry.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Arc3D.GeomEquals*
  commentId: Overload:SearchAThing.Sci.Arc3D.GeomEquals
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_GeomEquals_System_Double_SearchAThing_Sci_Geometry_System_Boolean_
  name: GeomEquals
  nameWithType: Arc3D.GeomEquals
  fullName: SearchAThing.Sci.Arc3D.GeomEquals
- uid: SearchAThing.Sci.Arc3D.CS*
  commentId: Overload:SearchAThing.Sci.Arc3D.CS
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_CS
  name: CS
  nameWithType: Arc3D.CS
  fullName: SearchAThing.Sci.Arc3D.CS
- uid: SearchAThing.Sci.CoordinateSystem3D
  commentId: T:SearchAThing.Sci.CoordinateSystem3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.CoordinateSystem3D.html
  name: CoordinateSystem3D
  nameWithType: CoordinateSystem3D
  fullName: SearchAThing.Sci.CoordinateSystem3D
- uid: SearchAThing.Sci.Arc3D.Radius*
  commentId: Overload:SearchAThing.Sci.Arc3D.Radius
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Radius
  name: Radius
  nameWithType: Arc3D.Radius
  fullName: SearchAThing.Sci.Arc3D.Radius
- uid: SearchAThing.Sci.Arc3D.#ctor*
  commentId: Overload:SearchAThing.Sci.Arc3D.#ctor
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D__ctor_SearchAThing_Sci_CoordinateSystem3D_System_Double_System_Double_System_Double_
  name: Arc3D
  nameWithType: Arc3D.Arc3D
  fullName: SearchAThing.Sci.Arc3D.Arc3D
  nameWithType.vb: Arc3D.New
  fullName.vb: SearchAThing.Sci.Arc3D.New
  name.vb: New
- uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Geometry
  href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  name: Move(Vector3D)
  nameWithType: Geometry.Move(Vector3D)
  fullName: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
  spec.csharp:
  - uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
    name: Move
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Geometry.Move(SearchAThing.Sci.Vector3D)
    name: Move
    href: SearchAThing.Sci.Geometry.html#SearchAThing_Sci_Geometry_Move_SearchAThing_Sci_Vector3D_
  - name: (
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: )
- uid: SearchAThing.Sci.Arc3D.Move*
  commentId: Overload:SearchAThing.Sci.Arc3D.Move
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Move_SearchAThing_Sci_Vector3D_
  name: Move
  nameWithType: Arc3D.Move
  fullName: SearchAThing.Sci.Arc3D.Move
- uid: SearchAThing.Sci.Arc3D.AngleStart*
  commentId: Overload:SearchAThing.Sci.Arc3D.AngleStart
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_AngleStart
  name: AngleStart
  nameWithType: Arc3D.AngleStart
  fullName: SearchAThing.Sci.Arc3D.AngleStart
- uid: SearchAThing.Sci.Arc3D.AngleStartDeg*
  commentId: Overload:SearchAThing.Sci.Arc3D.AngleStartDeg
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_AngleStartDeg
  name: AngleStartDeg
  nameWithType: Arc3D.AngleStartDeg
  fullName: SearchAThing.Sci.Arc3D.AngleStartDeg
- uid: SearchAThing.Sci.Arc3D.SensedAngleStart*
  commentId: Overload:SearchAThing.Sci.Arc3D.SensedAngleStart
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_SensedAngleStart
  name: SensedAngleStart
  nameWithType: Arc3D.SensedAngleStart
  fullName: SearchAThing.Sci.Arc3D.SensedAngleStart
- uid: SearchAThing.Sci.Arc3D.SensedAngleStartDeg*
  commentId: Overload:SearchAThing.Sci.Arc3D.SensedAngleStartDeg
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_SensedAngleStartDeg
  name: SensedAngleStartDeg
  nameWithType: Arc3D.SensedAngleStartDeg
  fullName: SearchAThing.Sci.Arc3D.SensedAngleStartDeg
- uid: SearchAThing.Sci.Arc3D.AngleEnd*
  commentId: Overload:SearchAThing.Sci.Arc3D.AngleEnd
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_AngleEnd
  name: AngleEnd
  nameWithType: Arc3D.AngleEnd
  fullName: SearchAThing.Sci.Arc3D.AngleEnd
- uid: SearchAThing.Sci.Arc3D.AngleEndDeg*
  commentId: Overload:SearchAThing.Sci.Arc3D.AngleEndDeg
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_AngleEndDeg
  name: AngleEndDeg
  nameWithType: Arc3D.AngleEndDeg
  fullName: SearchAThing.Sci.Arc3D.AngleEndDeg
- uid: SearchAThing.Sci.Arc3D.SensedAngleEnd*
  commentId: Overload:SearchAThing.Sci.Arc3D.SensedAngleEnd
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_SensedAngleEnd
  name: SensedAngleEnd
  nameWithType: Arc3D.SensedAngleEnd
  fullName: SearchAThing.Sci.Arc3D.SensedAngleEnd
- uid: SearchAThing.Sci.Arc3D.SensedAngleEndDeg*
  commentId: Overload:SearchAThing.Sci.Arc3D.SensedAngleEndDeg
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_SensedAngleEndDeg
  name: SensedAngleEndDeg
  nameWithType: Arc3D.SensedAngleEndDeg
  fullName: SearchAThing.Sci.Arc3D.SensedAngleEndDeg
- uid: SearchAThing.Sci.Arc3D.Angle*
  commentId: Overload:SearchAThing.Sci.Arc3D.Angle
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Angle
  name: Angle
  nameWithType: Arc3D.Angle
  fullName: SearchAThing.Sci.Arc3D.Angle
- uid: SearchAThing.Sci.Arc3D.PtAtAngle*
  commentId: Overload:SearchAThing.Sci.Arc3D.PtAtAngle
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_PtAtAngle_System_Double_
  name: PtAtAngle
  nameWithType: Arc3D.PtAtAngle
  fullName: SearchAThing.Sci.Arc3D.PtAtAngle
- uid: SearchAThing.Sci.Arc3D.PtAngle*
  commentId: Overload:SearchAThing.Sci.Arc3D.PtAngle
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_PtAngle_System_Double_SearchAThing_Sci_Vector3D_
  name: PtAngle
  nameWithType: Arc3D.PtAngle
  fullName: SearchAThing.Sci.Arc3D.PtAngle
- uid: SearchAThing.Sci.Arc3D.From*
  commentId: Overload:SearchAThing.Sci.Arc3D.From
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_From
  name: From
  nameWithType: Arc3D.From
  fullName: SearchAThing.Sci.Arc3D.From
- uid: SearchAThing.Sci.Arc3D.To*
  commentId: Overload:SearchAThing.Sci.Arc3D.To
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_To
  name: To
  nameWithType: Arc3D.To
  fullName: SearchAThing.Sci.Arc3D.To
- uid: SearchAThing.Sci.Arc3D.Segment*
  commentId: Overload:SearchAThing.Sci.Arc3D.Segment
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Segment
  name: Segment
  nameWithType: Arc3D.Segment
  fullName: SearchAThing.Sci.Arc3D.Segment
- uid: SearchAThing.Sci.Line3D
  commentId: T:SearchAThing.Sci.Line3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Line3D.html
  name: Line3D
  nameWithType: Line3D
  fullName: SearchAThing.Sci.Line3D
- uid: SearchAThing.Sci.Arc3D.EqualsTol*
  commentId: Overload:SearchAThing.Sci.Arc3D.EqualsTol
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_EqualsTol_System_Double_SearchAThing_Sci_Arc3D_
  name: EqualsTol
  nameWithType: Arc3D.EqualsTol
  fullName: SearchAThing.Sci.Arc3D.EqualsTol
- uid: SearchAThing.Sci.Arc3D.Bulge*
  commentId: Overload:SearchAThing.Sci.Arc3D.Bulge
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Bulge_System_Double_
  name: Bulge
  nameWithType: Arc3D.Bulge
  fullName: SearchAThing.Sci.Arc3D.Bulge
- uid: SearchAThing.Sci.Arc3D.Contains*
  commentId: Overload:SearchAThing.Sci.Arc3D.Contains
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Contains_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_System_Boolean_
  name: Contains
  nameWithType: Arc3D.Contains
  fullName: SearchAThing.Sci.Arc3D.Contains
- uid: SearchAThing.Sci.Arc3D.Center*
  commentId: Overload:SearchAThing.Sci.Arc3D.Center
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Center
  name: Center
  nameWithType: Arc3D.Center
  fullName: SearchAThing.Sci.Arc3D.Center
- uid: SearchAThing.Sci.Arc3D.Perpendicular*
  commentId: Overload:SearchAThing.Sci.Arc3D.Perpendicular
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Perpendicular_System_Double_SearchAThing_Sci_Vector3D_
  name: Perpendicular
  nameWithType: Arc3D.Perpendicular
  fullName: SearchAThing.Sci.Arc3D.Perpendicular
- uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  commentId: M:SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_
  name: Project(double, Vector3D, bool)
  nameWithType: Edge.Project(double, Vector3D, bool)
  fullName: SearchAThing.Sci.Edge.Project(double, SearchAThing.Sci.Vector3D, bool)
  nameWithType.vb: Edge.Project(Double, Vector3D, Boolean)
  fullName.vb: SearchAThing.Sci.Edge.Project(Double, SearchAThing.Sci.Vector3D, Boolean)
  name.vb: Project(Double, Vector3D, Boolean)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
    name: Project
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.Project(System.Double,SearchAThing.Sci.Vector3D,System.Boolean)
    name: Project
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_Project_System_Double_SearchAThing_Sci_Vector3D_System_Boolean_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    href: SearchAThing.Sci.Vector3D.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SearchAThing.Sci.Arc3D.ToCircle3D*
  commentId: Overload:SearchAThing.Sci.Arc3D.ToCircle3D
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_ToCircle3D_System_Double_
  name: ToCircle3D
  nameWithType: Arc3D.ToCircle3D
  fullName: SearchAThing.Sci.Arc3D.ToCircle3D
- uid: SearchAThing.Sci.Circle3D
  commentId: T:SearchAThing.Sci.Circle3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Circle3D.html
  name: Circle3D
  nameWithType: Circle3D
  fullName: SearchAThing.Sci.Circle3D
- uid: SearchAThing.Sci.Arc3D.CircularSectorArea*
  commentId: Overload:SearchAThing.Sci.Arc3D.CircularSectorArea
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_CircularSectorArea
  name: CircularSectorArea
  nameWithType: Arc3D.CircularSectorArea
  fullName: SearchAThing.Sci.Arc3D.CircularSectorArea
- uid: SearchAThing.Sci.Arc3D.ChordTriangleArea*
  commentId: Overload:SearchAThing.Sci.Arc3D.ChordTriangleArea
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_ChordTriangleArea
  name: ChordTriangleArea
  nameWithType: Arc3D.ChordTriangleArea
  fullName: SearchAThing.Sci.Arc3D.ChordTriangleArea
- uid: SearchAThing.Sci.Arc3D.SegmentArea*
  commentId: Overload:SearchAThing.Sci.Arc3D.SegmentArea
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_SegmentArea
  name: SegmentArea
  nameWithType: Arc3D.SegmentArea
  fullName: SearchAThing.Sci.Arc3D.SegmentArea
- uid: SearchAThing.Sci.Arc3D.CentreOfMass*
  commentId: Overload:SearchAThing.Sci.Arc3D.CentreOfMass
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_CentreOfMass_System_Double__
  name: CentreOfMass
  nameWithType: Arc3D.CentreOfMass
  fullName: SearchAThing.Sci.Arc3D.CentreOfMass
- uid: SearchAThing.Sci.Arc3D.Intersect*
  commentId: Overload:SearchAThing.Sci.Arc3D.Intersect
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Intersect_System_Double_SearchAThing_Sci_Arc3D_System_Boolean_
  name: Intersect
  nameWithType: Arc3D.Intersect
  fullName: SearchAThing.Sci.Arc3D.Intersect
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SearchAThing.Sci.Arc3D.ToString*
  commentId: Overload:SearchAThing.Sci.Arc3D.ToString
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_ToString
  name: ToString
  nameWithType: Arc3D.ToString
  fullName: SearchAThing.Sci.Arc3D.ToString
- uid: SearchAThing.Sci.Edge.ToString(System.Int32)
  commentId: M:SearchAThing.Sci.Edge.ToString(System.Int32)
  parent: SearchAThing.Sci.Edge
  isExternal: true
  href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ToString_System_Int32_
  name: ToString(int)
  nameWithType: Edge.ToString(int)
  fullName: SearchAThing.Sci.Edge.ToString(int)
  nameWithType.vb: Edge.ToString(Integer)
  fullName.vb: SearchAThing.Sci.Edge.ToString(Integer)
  name.vb: ToString(Integer)
  spec.csharp:
  - uid: SearchAThing.Sci.Edge.ToString(System.Int32)
    name: ToString
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ToString_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SearchAThing.Sci.Edge.ToString(System.Int32)
    name: ToString
    href: SearchAThing.Sci.Edge.html#SearchAThing_Sci_Edge_ToString_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Arc3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Arc3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Arc3D>
  nameWithType: IEnumerable<Arc3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Arc3D>
  nameWithType.vb: IEnumerable(Of Arc3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Arc3D)
  name.vb: IEnumerable(Of Arc3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Arc3D
    name: Arc3D
    href: SearchAThing.Sci.Arc3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Arc3D
    name: Arc3D
    href: SearchAThing.Sci.Arc3D.html
  - name: )
- uid: SearchAThing.Sci.Arc3D.Discretize*
  commentId: Overload:SearchAThing.Sci.Arc3D.Discretize
  href: SearchAThing.Sci.Arc3D.html#SearchAThing_Sci_Arc3D_Discretize_System_Double_
  name: Discretize
  nameWithType: Arc3D.Discretize
  fullName: SearchAThing.Sci.Arc3D.Discretize
- uid: System.Collections.Generic.IEnumerable{SearchAThing.Sci.Line3D}
  commentId: T:System.Collections.Generic.IEnumerable{SearchAThing.Sci.Line3D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Line3D>
  nameWithType: IEnumerable<Line3D>
  fullName: System.Collections.Generic.IEnumerable<SearchAThing.Sci.Line3D>
  nameWithType.vb: IEnumerable(Of Line3D)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SearchAThing.Sci.Line3D)
  name.vb: IEnumerable(Of Line3D)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SearchAThing.Sci.Line3D
    name: Line3D
    href: SearchAThing.Sci.Line3D.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SearchAThing.Sci.Line3D
    name: Line3D
    href: SearchAThing.Sci.Line3D.html
  - name: )
