### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Matrix3D
  commentId: T:SearchAThing.Sci.Matrix3D
  id: Matrix3D
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Matrix3D.#ctor
  - SearchAThing.Sci.Matrix3D.#ctor(System.Double[])
  - SearchAThing.Sci.Matrix3D.Adjoint
  - SearchAThing.Sci.Matrix3D.Cofactor
  - SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D,System.Int32)
  - SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D,System.Int32)
  - SearchAThing.Sci.Matrix3D.Determinant
  - SearchAThing.Sci.Matrix3D.EqualsTol(System.Double,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.FromVectorsAsColumns(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Matrix3D.FromVectorsAsRows(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Matrix3D.Inverse
  - SearchAThing.Sci.Matrix3D.Item(System.Int32,System.Int32)
  - SearchAThing.Sci.Matrix3D.Minor
  - SearchAThing.Sci.Matrix3D.Solve(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Matrix3D.Solve(System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Matrix3D.Transpose
  - SearchAThing.Sci.Matrix3D.op_Addition(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_Division(SearchAThing.Sci.Matrix3D,System.Double)
  - SearchAThing.Sci.Matrix3D.op_Division(System.Double,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,System.Double)
  - SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_Multiply(System.Double,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_Subtraction(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_UnaryNegation(SearchAThing.Sci.Matrix3D)
  langs:
  - csharp
  - vb
  name: Matrix3D
  nameWithType: Matrix3D
  fullName: SearchAThing.Sci.Matrix3D
  type: Class
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Matrix3D
    path: src/sci/Matrix3D.cs
    startLine: 5
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: basic matrix3d with 3x3 double elements and operations to allow arithmetic and 3d linear equation resolution.
  example: []
  syntax:
    content: public class Matrix3D
    content.vb: Public Class Matrix3D
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SearchAThing.Sci.Matrix3D.#ctor
  commentId: M:SearchAThing.Sci.Matrix3D.#ctor
  id: '#ctor'
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Matrix3D()
  nameWithType: Matrix3D.Matrix3D()
  fullName: SearchAThing.Sci.Matrix3D.Matrix3D()
  type: Constructor
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Matrix3D.cs
    startLine: 14
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: empty matrix
  example: []
  syntax:
    content: public Matrix3D()
    content.vb: Public Sub New()
  overload: SearchAThing.Sci.Matrix3D.#ctor*
  nameWithType.vb: Matrix3D.New()
  fullName.vb: SearchAThing.Sci.Matrix3D.New()
  name.vb: New()
- uid: SearchAThing.Sci.Matrix3D.#ctor(System.Double[])
  commentId: M:SearchAThing.Sci.Matrix3D.#ctor(System.Double[])
  id: '#ctor(System.Double[])'
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Matrix3D(double[])
  nameWithType: Matrix3D.Matrix3D(double[])
  fullName: SearchAThing.Sci.Matrix3D.Matrix3D(double[])
  type: Constructor
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: .ctor
    path: src/sci/Matrix3D.cs
    startLine: 22
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: Init matrix using terms m00 m01 m02 - m10 m11 m12 - m20 m21 m22
  example: []
  syntax:
    content: public Matrix3D(double[] terms)
    parameters:
    - id: terms
      type: System.Double[]
    content.vb: Public Sub New(terms As Double())
  overload: SearchAThing.Sci.Matrix3D.#ctor*
  nameWithType.vb: Matrix3D.New(Double())
  fullName.vb: SearchAThing.Sci.Matrix3D.New(Double())
  name.vb: New(Double())
- uid: SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D,System.Int32)
  commentId: M:SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D,System.Int32)
  id: CopyVectorAsRow(SearchAThing.Sci.Vector3D,System.Int32)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: CopyVectorAsRow(Vector3D, int)
  nameWithType: Matrix3D.CopyVectorAsRow(Vector3D, int)
  fullName: SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D, int)
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CopyVectorAsRow
    path: src/sci/Matrix3D.cs
    startLine: 35
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Matrix3D CopyVectorAsRow(Vector3D v, int rowIdx)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: rowIdx
      type: System.Int32
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function CopyVectorAsRow(v As Vector3D, rowIdx As Integer) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.CopyVectorAsRow*
  nameWithType.vb: Matrix3D.CopyVectorAsRow(Vector3D, Integer)
  fullName.vb: SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D, Integer)
  name.vb: CopyVectorAsRow(Vector3D, Integer)
- uid: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D,System.Int32)
  commentId: M:SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D,System.Int32)
  id: CopyVectorAsColumn(SearchAThing.Sci.Vector3D,System.Int32)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: CopyVectorAsColumn(Vector3D, int)
  nameWithType: Matrix3D.CopyVectorAsColumn(Vector3D, int)
  fullName: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D, int)
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: CopyVectorAsColumn
    path: src/sci/Matrix3D.cs
    startLine: 44
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Matrix3D CopyVectorAsColumn(Vector3D v, int colIdx)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: colIdx
      type: System.Int32
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function CopyVectorAsColumn(v As Vector3D, colIdx As Integer) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn*
  nameWithType.vb: Matrix3D.CopyVectorAsColumn(Vector3D, Integer)
  fullName.vb: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D, Integer)
  name.vb: CopyVectorAsColumn(Vector3D, Integer)
- uid: SearchAThing.Sci.Matrix3D.FromVectorsAsRows(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Matrix3D.FromVectorsAsRows(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: FromVectorsAsRows(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: FromVectorsAsRows(Vector3D, Vector3D, Vector3D)
  nameWithType: Matrix3D.FromVectorsAsRows(Vector3D, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Matrix3D.FromVectorsAsRows(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: FromVectorsAsRows
    path: src/sci/Matrix3D.cs
    startLine: 53
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static Matrix3D FromVectorsAsRows(Vector3D v1, Vector3D v2, Vector3D v3)
    parameters:
    - id: v1
      type: SearchAThing.Sci.Vector3D
    - id: v2
      type: SearchAThing.Sci.Vector3D
    - id: v3
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Function FromVectorsAsRows(v1 As Vector3D, v2 As Vector3D, v3 As Vector3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.FromVectorsAsRows*
- uid: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Matrix3D.FromVectorsAsColumns(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: FromVectorsAsColumns(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: FromVectorsAsColumns(Vector3D, Vector3D, Vector3D)
  nameWithType: Matrix3D.FromVectorsAsColumns(Vector3D, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: FromVectorsAsColumns
    path: src/sci/Matrix3D.cs
    startLine: 64
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static Matrix3D FromVectorsAsColumns(Vector3D v1, Vector3D v2, Vector3D v3)
    parameters:
    - id: v1
      type: SearchAThing.Sci.Vector3D
    - id: v2
      type: SearchAThing.Sci.Vector3D
    - id: v3
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Function FromVectorsAsColumns(v1 As Vector3D, v2 As Vector3D, v3 As Vector3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns*
- uid: SearchAThing.Sci.Matrix3D.EqualsTol(System.Double,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.EqualsTol(System.Double,SearchAThing.Sci.Matrix3D)
  id: EqualsTol(System.Double,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: EqualsTol(double, Matrix3D)
  nameWithType: Matrix3D.EqualsTol(double, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.EqualsTol(double, SearchAThing.Sci.Matrix3D)
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: EqualsTol
    path: src/sci/Matrix3D.cs
    startLine: 75
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public bool EqualsTol(double tol, Matrix3D other)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Matrix3D
    return:
      type: System.Boolean
    content.vb: Public Function EqualsTol(tol As Double, other As Matrix3D) As Boolean
  overload: SearchAThing.Sci.Matrix3D.EqualsTol*
  nameWithType.vb: Matrix3D.EqualsTol(Double, Matrix3D)
  fullName.vb: SearchAThing.Sci.Matrix3D.EqualsTol(Double, SearchAThing.Sci.Matrix3D)
  name.vb: EqualsTol(Double, Matrix3D)
- uid: SearchAThing.Sci.Matrix3D.Transpose
  commentId: M:SearchAThing.Sci.Matrix3D.Transpose
  id: Transpose
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Transpose()
  nameWithType: Matrix3D.Transpose()
  fullName: SearchAThing.Sci.Matrix3D.Transpose()
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Transpose
    path: src/sci/Matrix3D.cs
    startLine: 90
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: swap row, cols
  example: []
  syntax:
    content: public Matrix3D Transpose()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Transpose() As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Transpose*
- uid: SearchAThing.Sci.Matrix3D.Determinant
  commentId: M:SearchAThing.Sci.Matrix3D.Determinant
  id: Determinant
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Determinant()
  nameWithType: Matrix3D.Determinant()
  fullName: SearchAThing.Sci.Matrix3D.Determinant()
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Determinant
    path: src/sci/Matrix3D.cs
    startLine: 108
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Matrix determinant

    http://mathcentral.uregina.ca/QQ/database/QQ.09.06/h/suud1.html
  example: []
  syntax:
    content: public double Determinant()
    return:
      type: System.Double
    content.vb: Public Function Determinant() As Double
  overload: SearchAThing.Sci.Matrix3D.Determinant*
- uid: SearchAThing.Sci.Matrix3D.Minor
  commentId: M:SearchAThing.Sci.Matrix3D.Minor
  id: Minor
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Minor()
  nameWithType: Matrix3D.Minor()
  fullName: SearchAThing.Sci.Matrix3D.Minor()
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Minor
    path: src/sci/Matrix3D.cs
    startLine: 120
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Matrix of minors

    http://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html
  example: []
  syntax:
    content: public Matrix3D Minor()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Minor() As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Minor*
- uid: SearchAThing.Sci.Matrix3D.Cofactor
  commentId: M:SearchAThing.Sci.Matrix3D.Cofactor
  id: Cofactor
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Cofactor()
  nameWithType: Matrix3D.Cofactor()
  fullName: SearchAThing.Sci.Matrix3D.Cofactor()
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Cofactor
    path: src/sci/Matrix3D.cs
    startLine: 143
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Matrix of cofactors

    http://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html
  example: []
  syntax:
    content: public Matrix3D Cofactor()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Cofactor() As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Cofactor*
- uid: SearchAThing.Sci.Matrix3D.Adjoint
  commentId: M:SearchAThing.Sci.Matrix3D.Adjoint
  id: Adjoint
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Adjoint()
  nameWithType: Matrix3D.Adjoint()
  fullName: SearchAThing.Sci.Matrix3D.Adjoint()
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Adjoint
    path: src/sci/Matrix3D.cs
    startLine: 162
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Adjoint matrix

    http://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html
  example: []
  syntax:
    content: public Matrix3D Adjoint()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Adjoint() As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Adjoint*
- uid: SearchAThing.Sci.Matrix3D.Inverse
  commentId: M:SearchAThing.Sci.Matrix3D.Inverse
  id: Inverse
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Inverse()
  nameWithType: Matrix3D.Inverse()
  fullName: SearchAThing.Sci.Matrix3D.Inverse()
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Inverse
    path: src/sci/Matrix3D.cs
    startLine: 168
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Inverse matrix

    http://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html
  example: []
  syntax:
    content: public Matrix3D Inverse()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Inverse() As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Inverse*
- uid: SearchAThing.Sci.Matrix3D.Solve(System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Matrix3D.Solve(System.Double,System.Double,System.Double)
  id: Solve(System.Double,System.Double,System.Double)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Solve(double, double, double)
  nameWithType: Matrix3D.Solve(double, double, double)
  fullName: SearchAThing.Sci.Matrix3D.Solve(double, double, double)
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Solve
    path: src/sci/Matrix3D.cs
    startLine: 174
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Solve linear system of eq represented by this matrix

    defined (a,b,c) known terms.
  example: []
  syntax:
    content: public Vector3D Solve(double a, double b, double c)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: c
      type: System.Double
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Solve(a As Double, b As Double, c As Double) As Vector3D
  overload: SearchAThing.Sci.Matrix3D.Solve*
  nameWithType.vb: Matrix3D.Solve(Double, Double, Double)
  fullName.vb: SearchAThing.Sci.Matrix3D.Solve(Double, Double, Double)
  name.vb: Solve(Double, Double, Double)
- uid: SearchAThing.Sci.Matrix3D.Solve(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Matrix3D.Solve(SearchAThing.Sci.Vector3D)
  id: Solve(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Solve(Vector3D)
  nameWithType: Matrix3D.Solve(Vector3D)
  fullName: SearchAThing.Sci.Matrix3D.Solve(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: Solve
    path: src/sci/Matrix3D.cs
    startLine: 181
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    Solve linear system of eq represented by this matrix

    defined n known term.

    Ax = B -&gt; x = A^(-1)B
  example: []
  syntax:
    content: public Vector3D Solve(Vector3D n)
    parameters:
    - id: n
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Solve(n As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Matrix3D.Solve*
- uid: SearchAThing.Sci.Matrix3D.op_Addition(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Addition(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  id: op_Addition(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator +(Matrix3D, Matrix3D)
  nameWithType: Matrix3D.operator +(Matrix3D, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.operator +(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Addition
    path: src/sci/Matrix3D.cs
    startLine: 188
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: sum
  example: []
  syntax:
    content: public static Matrix3D operator +(Matrix3D a, Matrix3D b)
    parameters:
    - id: a
      type: SearchAThing.Sci.Matrix3D
    - id: b
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator +(a As Matrix3D, b As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Addition*
  nameWithType.vb: Matrix3D.+(Matrix3D, Matrix3D)
  fullName.vb: SearchAThing.Sci.Matrix3D.+(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Matrix3D)
  name.vb: +(Matrix3D, Matrix3D)
- uid: SearchAThing.Sci.Matrix3D.op_Subtraction(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Subtraction(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  id: op_Subtraction(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator -(Matrix3D, Matrix3D)
  nameWithType: Matrix3D.operator -(Matrix3D, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.operator -(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Subtraction
    path: src/sci/Matrix3D.cs
    startLine: 206
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: sub
  example: []
  syntax:
    content: public static Matrix3D operator -(Matrix3D a, Matrix3D b)
    parameters:
    - id: a
      type: SearchAThing.Sci.Matrix3D
    - id: b
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator -(a As Matrix3D, b As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Subtraction*
  nameWithType.vb: Matrix3D.-(Matrix3D, Matrix3D)
  fullName.vb: SearchAThing.Sci.Matrix3D.-(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Matrix3D)
  name.vb: -(Matrix3D, Matrix3D)
- uid: SearchAThing.Sci.Matrix3D.op_UnaryNegation(SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_UnaryNegation(SearchAThing.Sci.Matrix3D)
  id: op_UnaryNegation(SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator -(Matrix3D)
  nameWithType: Matrix3D.operator -(Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.operator -(SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_UnaryNegation
    path: src/sci/Matrix3D.cs
    startLine: 224
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: neg
  example: []
  syntax:
    content: public static Matrix3D operator -(Matrix3D m)
    parameters:
    - id: m
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator -(m As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_UnaryNegation*
  nameWithType.vb: Matrix3D.-(Matrix3D)
  fullName.vb: SearchAThing.Sci.Matrix3D.-(SearchAThing.Sci.Matrix3D)
  name.vb: -(Matrix3D)
- uid: SearchAThing.Sci.Matrix3D.op_Multiply(System.Double,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Multiply(System.Double,SearchAThing.Sci.Matrix3D)
  id: op_Multiply(System.Double,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator *(double, Matrix3D)
  nameWithType: Matrix3D.operator *(double, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.operator *(double, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Matrix3D.cs
    startLine: 242
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scalar multiply
  example: []
  syntax:
    content: public static Matrix3D operator *(double s, Matrix3D m)
    parameters:
    - id: s
      type: System.Double
    - id: m
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator *(s As Double, m As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Multiply*
  nameWithType.vb: Matrix3D.*(Double, Matrix3D)
  fullName.vb: SearchAThing.Sci.Matrix3D.*(Double, SearchAThing.Sci.Matrix3D)
  name.vb: '*(Double, Matrix3D)'
- uid: SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,System.Double)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,System.Double)
  id: op_Multiply(SearchAThing.Sci.Matrix3D,System.Double)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator *(Matrix3D, double)
  nameWithType: Matrix3D.operator *(Matrix3D, double)
  fullName: SearchAThing.Sci.Matrix3D.operator *(SearchAThing.Sci.Matrix3D, double)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Matrix3D.cs
    startLine: 260
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scalar multiply
  example: []
  syntax:
    content: public static Matrix3D operator *(Matrix3D m, double s)
    parameters:
    - id: m
      type: SearchAThing.Sci.Matrix3D
    - id: s
      type: System.Double
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator *(m As Matrix3D, s As Double) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Multiply*
  nameWithType.vb: Matrix3D.*(Matrix3D, Double)
  fullName.vb: SearchAThing.Sci.Matrix3D.*(SearchAThing.Sci.Matrix3D, Double)
  name.vb: '*(Matrix3D, Double)'
- uid: SearchAThing.Sci.Matrix3D.op_Division(System.Double,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Division(System.Double,SearchAThing.Sci.Matrix3D)
  id: op_Division(System.Double,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator /(double, Matrix3D)
  nameWithType: Matrix3D.operator /(double, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.operator /(double, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Division
    path: src/sci/Matrix3D.cs
    startLine: 278
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scalar div
  example: []
  syntax:
    content: public static Matrix3D operator /(double s, Matrix3D m)
    parameters:
    - id: s
      type: System.Double
    - id: m
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator /(s As Double, m As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Division*
  nameWithType.vb: Matrix3D./(Double, Matrix3D)
  fullName.vb: SearchAThing.Sci.Matrix3D./(Double, SearchAThing.Sci.Matrix3D)
  name.vb: /(Double, Matrix3D)
- uid: SearchAThing.Sci.Matrix3D.op_Division(SearchAThing.Sci.Matrix3D,System.Double)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Division(SearchAThing.Sci.Matrix3D,System.Double)
  id: op_Division(SearchAThing.Sci.Matrix3D,System.Double)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator /(Matrix3D, double)
  nameWithType: Matrix3D.operator /(Matrix3D, double)
  fullName: SearchAThing.Sci.Matrix3D.operator /(SearchAThing.Sci.Matrix3D, double)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Division
    path: src/sci/Matrix3D.cs
    startLine: 296
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: scalar div
  example: []
  syntax:
    content: public static Matrix3D operator /(Matrix3D m, double s)
    parameters:
    - id: m
      type: SearchAThing.Sci.Matrix3D
    - id: s
      type: System.Double
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator /(m As Matrix3D, s As Double) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Division*
  nameWithType.vb: Matrix3D./(Matrix3D, Double)
  fullName.vb: SearchAThing.Sci.Matrix3D./(SearchAThing.Sci.Matrix3D, Double)
  name.vb: /(Matrix3D, Double)
- uid: SearchAThing.Sci.Matrix3D.Item(System.Int32,System.Int32)
  commentId: P:SearchAThing.Sci.Matrix3D.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: this[int, int]
  nameWithType: Matrix3D.this[int, int]
  fullName: SearchAThing.Sci.Matrix3D.this[int, int]
  type: Property
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: this[]
    path: src/sci/Matrix3D.cs
    startLine: 314
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: indexed matrix component [row,col]
  example: []
  syntax:
    content: public double this[int r, int c] { get; }
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public ReadOnly Default Property this[](r As Integer, c As Integer) As Double
  overload: SearchAThing.Sci.Matrix3D.Item*
  nameWithType.vb: Matrix3D.this[](Integer, Integer)
  fullName.vb: SearchAThing.Sci.Matrix3D.this[](Integer, Integer)
  name.vb: this[](Integer, Integer)
- uid: SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Vector3D)
  id: op_Multiply(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator *(Matrix3D, Vector3D)
  nameWithType: Matrix3D.operator *(Matrix3D, Vector3D)
  fullName: SearchAThing.Sci.Matrix3D.operator *(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Matrix3D.cs
    startLine: 320
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    matrix * vector as column -&gt; vector

    3x3 x 3x1 -&gt; 3x1
  example: []
  syntax:
    content: public static Vector3D operator *(Matrix3D m, Vector3D v)
    parameters:
    - id: m
      type: SearchAThing.Sci.Matrix3D
    - id: v
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator *(m As Matrix3D, v As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Matrix3D.op_Multiply*
  nameWithType.vb: Matrix3D.*(Matrix3D, Vector3D)
  fullName.vb: SearchAThing.Sci.Matrix3D.*(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Vector3D)
  name.vb: '*(Matrix3D, Vector3D)'
- uid: SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Matrix3D)
  id: op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: operator *(Vector3D, Matrix3D)
  nameWithType: Matrix3D.operator *(Vector3D, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.operator *(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    remote:
      path: src/sci/Matrix3D.cs
      branch: master
      repo: git@github.com:devel0/netcore-sci.git
    id: op_Multiply
    path: src/sci/Matrix3D.cs
    startLine: 341
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: >-
    vector as row * matrix -&gt; vector

    1x3 * 3x3 -&gt; 1x3
  example: []
  syntax:
    content: public static Vector3D operator *(Vector3D v, Matrix3D m)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: m
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator *(v As Vector3D, m As Matrix3D) As Vector3D
  overload: SearchAThing.Sci.Matrix3D.op_Multiply*
  nameWithType.vb: Matrix3D.*(Vector3D, Matrix3D)
  fullName.vb: SearchAThing.Sci.Matrix3D.*(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Matrix3D)
  name.vb: '*(Vector3D, Matrix3D)'
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  href: SearchAThing.html
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
  spec.csharp:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
  spec.vb:
  - uid: SearchAThing
    name: SearchAThing
    href: SearchAThing.html
  - name: .
  - uid: SearchAThing.Sci
    name: Sci
    href: SearchAThing.Sci.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SearchAThing.Sci.Matrix3D.#ctor*
  commentId: Overload:SearchAThing.Sci.Matrix3D.#ctor
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D__ctor
  name: Matrix3D
  nameWithType: Matrix3D.Matrix3D
  fullName: SearchAThing.Sci.Matrix3D.Matrix3D
  nameWithType.vb: Matrix3D.New
  fullName.vb: SearchAThing.Sci.Matrix3D.New
  name.vb: New
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: SearchAThing.Sci.Matrix3D.CopyVectorAsRow*
  commentId: Overload:SearchAThing.Sci.Matrix3D.CopyVectorAsRow
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_CopyVectorAsRow_SearchAThing_Sci_Vector3D_System_Int32_
  name: CopyVectorAsRow
  nameWithType: Matrix3D.CopyVectorAsRow
  fullName: SearchAThing.Sci.Matrix3D.CopyVectorAsRow
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Vector3D.html
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SearchAThing.Sci.Matrix3D
  commentId: T:SearchAThing.Sci.Matrix3D
  parent: SearchAThing.Sci
  href: SearchAThing.Sci.Matrix3D.html
  name: Matrix3D
  nameWithType: Matrix3D
  fullName: SearchAThing.Sci.Matrix3D
- uid: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn*
  commentId: Overload:SearchAThing.Sci.Matrix3D.CopyVectorAsColumn
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_CopyVectorAsColumn_SearchAThing_Sci_Vector3D_System_Int32_
  name: CopyVectorAsColumn
  nameWithType: Matrix3D.CopyVectorAsColumn
  fullName: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn
- uid: SearchAThing.Sci.Matrix3D.FromVectorsAsRows*
  commentId: Overload:SearchAThing.Sci.Matrix3D.FromVectorsAsRows
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_FromVectorsAsRows_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: FromVectorsAsRows
  nameWithType: Matrix3D.FromVectorsAsRows
  fullName: SearchAThing.Sci.Matrix3D.FromVectorsAsRows
- uid: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns*
  commentId: Overload:SearchAThing.Sci.Matrix3D.FromVectorsAsColumns
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_FromVectorsAsColumns_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_SearchAThing_Sci_Vector3D_
  name: FromVectorsAsColumns
  nameWithType: Matrix3D.FromVectorsAsColumns
  fullName: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns
- uid: SearchAThing.Sci.Matrix3D.EqualsTol*
  commentId: Overload:SearchAThing.Sci.Matrix3D.EqualsTol
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_EqualsTol_System_Double_SearchAThing_Sci_Matrix3D_
  name: EqualsTol
  nameWithType: Matrix3D.EqualsTol
  fullName: SearchAThing.Sci.Matrix3D.EqualsTol
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SearchAThing.Sci.Matrix3D.Transpose*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Transpose
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_Transpose
  name: Transpose
  nameWithType: Matrix3D.Transpose
  fullName: SearchAThing.Sci.Matrix3D.Transpose
- uid: SearchAThing.Sci.Matrix3D.Determinant*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Determinant
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_Determinant
  name: Determinant
  nameWithType: Matrix3D.Determinant
  fullName: SearchAThing.Sci.Matrix3D.Determinant
- uid: SearchAThing.Sci.Matrix3D.Minor*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Minor
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_Minor
  name: Minor
  nameWithType: Matrix3D.Minor
  fullName: SearchAThing.Sci.Matrix3D.Minor
- uid: SearchAThing.Sci.Matrix3D.Cofactor*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Cofactor
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_Cofactor
  name: Cofactor
  nameWithType: Matrix3D.Cofactor
  fullName: SearchAThing.Sci.Matrix3D.Cofactor
- uid: SearchAThing.Sci.Matrix3D.Adjoint*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Adjoint
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_Adjoint
  name: Adjoint
  nameWithType: Matrix3D.Adjoint
  fullName: SearchAThing.Sci.Matrix3D.Adjoint
- uid: SearchAThing.Sci.Matrix3D.Inverse*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Inverse
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_Inverse
  name: Inverse
  nameWithType: Matrix3D.Inverse
  fullName: SearchAThing.Sci.Matrix3D.Inverse
- uid: SearchAThing.Sci.Matrix3D.Solve*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Solve
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_Solve_System_Double_System_Double_System_Double_
  name: Solve
  nameWithType: Matrix3D.Solve
  fullName: SearchAThing.Sci.Matrix3D.Solve
- uid: SearchAThing.Sci.Matrix3D.op_Addition*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_Addition
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_Addition_SearchAThing_Sci_Matrix3D_SearchAThing_Sci_Matrix3D_
  name: operator +
  nameWithType: Matrix3D.operator +
  fullName: SearchAThing.Sci.Matrix3D.operator +
  nameWithType.vb: Matrix3D.+
  fullName.vb: SearchAThing.Sci.Matrix3D.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Matrix3D.op_Addition*
    name: +
    href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_Addition_SearchAThing_Sci_Matrix3D_SearchAThing_Sci_Matrix3D_
- uid: SearchAThing.Sci.Matrix3D.op_Subtraction*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_Subtraction
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_Subtraction_SearchAThing_Sci_Matrix3D_SearchAThing_Sci_Matrix3D_
  name: operator -
  nameWithType: Matrix3D.operator -
  fullName: SearchAThing.Sci.Matrix3D.operator -
  nameWithType.vb: Matrix3D.-
  fullName.vb: SearchAThing.Sci.Matrix3D.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Matrix3D.op_Subtraction*
    name: '-'
    href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_Subtraction_SearchAThing_Sci_Matrix3D_SearchAThing_Sci_Matrix3D_
- uid: SearchAThing.Sci.Matrix3D.op_UnaryNegation*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_UnaryNegation
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_UnaryNegation_SearchAThing_Sci_Matrix3D_
  name: operator -
  nameWithType: Matrix3D.operator -
  fullName: SearchAThing.Sci.Matrix3D.operator -
  nameWithType.vb: Matrix3D.-
  fullName.vb: SearchAThing.Sci.Matrix3D.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Matrix3D.op_UnaryNegation*
    name: '-'
    href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_UnaryNegation_SearchAThing_Sci_Matrix3D_
- uid: SearchAThing.Sci.Matrix3D.op_Multiply*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_Multiply
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_Multiply_System_Double_SearchAThing_Sci_Matrix3D_
  name: operator *
  nameWithType: Matrix3D.operator *
  fullName: SearchAThing.Sci.Matrix3D.operator *
  nameWithType.vb: Matrix3D.*
  fullName.vb: SearchAThing.Sci.Matrix3D.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Matrix3D.op_Multiply*
    name: '*'
    href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_Multiply_System_Double_SearchAThing_Sci_Matrix3D_
- uid: SearchAThing.Sci.Matrix3D.op_Division*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_Division
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_Division_System_Double_SearchAThing_Sci_Matrix3D_
  name: operator /
  nameWithType: Matrix3D.operator /
  fullName: SearchAThing.Sci.Matrix3D.operator /
  nameWithType.vb: Matrix3D./
  fullName.vb: SearchAThing.Sci.Matrix3D./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: SearchAThing.Sci.Matrix3D.op_Division*
    name: /
    href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_op_Division_System_Double_SearchAThing_Sci_Matrix3D_
- uid: SearchAThing.Sci.Matrix3D.Item*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Item
  href: SearchAThing.Sci.Matrix3D.html#SearchAThing_Sci_Matrix3D_Item_System_Int32_System_Int32_
  name: this
  nameWithType: Matrix3D.this
  fullName: SearchAThing.Sci.Matrix3D.this
  nameWithType.vb: Matrix3D.this[]
  fullName.vb: SearchAThing.Sci.Matrix3D.this[]
  name.vb: this[]
