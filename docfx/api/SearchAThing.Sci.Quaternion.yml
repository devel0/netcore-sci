### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Quaternion
  commentId: T:SearchAThing.Sci.Quaternion
  id: Quaternion
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Quaternion.#ctor(SearchAThing.Sci.Vector3D,System.Double)
  - SearchAThing.Sci.Quaternion.#ctor(System.Double,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Quaternion.Conjugate
  - SearchAThing.Sci.Quaternion.Identity
  - SearchAThing.Sci.Quaternion.op_Multiply(SearchAThing.Sci.Quaternion,SearchAThing.Sci.Quaternion)
  - SearchAThing.Sci.Quaternion.v
  langs:
  - csharp
  - vb
  name: Quaternion
  nameWithType: Quaternion
  fullName: SearchAThing.Sci.Quaternion
  type: Class
  source:
    id: Quaternion
    path: Z:\netcore-sci\netcore-sci\Quaternion.cs
    startLine: 15
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nQuaternion implementation using doubles for purpose of Vector3D.RotateAboutAxis and Vector3D.RotateAs\nreferences:\n- http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/index.htm\n- https://www.3dgep.com/understanding-quaternions/\n- http://www.ncsa.illinois.edu/People/kindr/emtc/quaternions/\n"
  remarks: "\n[unit test](/test/Transform3D/Transform3DTest_0001.cs)\n"
  example: []
  syntax:
    content: 'public class Quaternion : object'
    content.vb: >-
      Public Class Quaternion
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SearchAThing.Sci.Quaternion.v
  commentId: P:SearchAThing.Sci.Quaternion.v
  id: v
  parent: SearchAThing.Sci.Quaternion
  langs:
  - csharp
  - vb
  name: v
  nameWithType: Quaternion.v
  fullName: SearchAThing.Sci.Quaternion.v
  type: Property
  source:
    id: v
    path: Z:\netcore-sci\netcore-sci\Quaternion.cs
    startLine: 18
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Vector3D v { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property v As Vector3D
  overload: SearchAThing.Sci.Quaternion.v*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SearchAThing.Sci.Quaternion.#ctor(System.Double,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Quaternion.#ctor(System.Double,SearchAThing.Sci.Vector3D)
  id: '#ctor(System.Double,SearchAThing.Sci.Vector3D)'
  parent: SearchAThing.Sci.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(Double, Vector3D)
  nameWithType: Quaternion.Quaternion(Double, Vector3D)
  fullName: SearchAThing.Sci.Quaternion.Quaternion(System.Double, SearchAThing.Sci.Vector3D)
  type: Constructor
  source:
    id: .ctor
    path: Z:\netcore-sci\netcore-sci\Quaternion.cs
    startLine: 25
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\ndirect construct quaternion q=[s, v]\n"
  example: []
  syntax:
    content: public Quaternion(double s, Vector3D v)
    parameters:
    - id: s
      type: System.Double
    - id: v
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Sub New(s As Double, v As Vector3D)
  overload: SearchAThing.Sci.Quaternion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Quaternion.#ctor(SearchAThing.Sci.Vector3D,System.Double)
  commentId: M:SearchAThing.Sci.Quaternion.#ctor(SearchAThing.Sci.Vector3D,System.Double)
  id: '#ctor(SearchAThing.Sci.Vector3D,System.Double)'
  parent: SearchAThing.Sci.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(Vector3D, Double)
  nameWithType: Quaternion.Quaternion(Vector3D, Double)
  fullName: SearchAThing.Sci.Quaternion.Quaternion(SearchAThing.Sci.Vector3D, System.Double)
  type: Constructor
  source:
    id: .ctor
    path: Z:\netcore-sci\netcore-sci\Quaternion.cs
    startLine: 35
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nbuild quaternion from axis and angle.\naxis will be subjected to normalization.\n"
  example: []
  syntax:
    content: public Quaternion(Vector3D axis, double alphaRad)
    parameters:
    - id: axis
      type: SearchAThing.Sci.Vector3D
    - id: alphaRad
      type: System.Double
    content.vb: Public Sub New(axis As Vector3D, alphaRad As Double)
  overload: SearchAThing.Sci.Quaternion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Quaternion.Identity
  commentId: P:SearchAThing.Sci.Quaternion.Identity
  id: Identity
  parent: SearchAThing.Sci.Quaternion
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Quaternion.Identity
  fullName: SearchAThing.Sci.Quaternion.Identity
  type: Property
  source:
    id: Identity
    path: Z:\netcore-sci\netcore-sci\Quaternion.cs
    startLine: 46
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nIdentity qi = [1, nullvector]\n"
  example: []
  syntax:
    content: public static Quaternion Identity { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Quaternion
    content.vb: Public Shared ReadOnly Property Identity As Quaternion
  overload: SearchAThing.Sci.Quaternion.Identity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SearchAThing.Sci.Quaternion.Conjugate
  commentId: M:SearchAThing.Sci.Quaternion.Conjugate
  id: Conjugate
  parent: SearchAThing.Sci.Quaternion
  langs:
  - csharp
  - vb
  name: Conjugate()
  nameWithType: Quaternion.Conjugate()
  fullName: SearchAThing.Sci.Quaternion.Conjugate()
  type: Method
  source:
    id: Conjugate
    path: Z:\netcore-sci\netcore-sci\Quaternion.cs
    startLine: 52
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nConjugate\nq* = [s, -v]        \n"
  example: []
  syntax:
    content: public Quaternion Conjugate()
    return:
      type: SearchAThing.Sci.Quaternion
    content.vb: Public Function Conjugate As Quaternion
  overload: SearchAThing.Sci.Quaternion.Conjugate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Quaternion.op_Multiply(SearchAThing.Sci.Quaternion,SearchAThing.Sci.Quaternion)
  commentId: M:SearchAThing.Sci.Quaternion.op_Multiply(SearchAThing.Sci.Quaternion,SearchAThing.Sci.Quaternion)
  id: op_Multiply(SearchAThing.Sci.Quaternion,SearchAThing.Sci.Quaternion)
  parent: SearchAThing.Sci.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(Quaternion, Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)
  fullName: SearchAThing.Sci.Quaternion.Multiply(SearchAThing.Sci.Quaternion, SearchAThing.Sci.Quaternion)
  type: Operator
  source:
    id: op_Multiply
    path: Z:\netcore-sci\netcore-sci\Quaternion.cs
    startLine: 58
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nMultiply\n[sa, va] * [sb, vb] = [sa * sb - va * vb, va x vb + sa * vb + sb * va]\n"
  example: []
  syntax:
    content: public static Quaternion operator *(Quaternion qa, Quaternion qb)
    parameters:
    - id: qa
      type: SearchAThing.Sci.Quaternion
    - id: qb
      type: SearchAThing.Sci.Quaternion
    return:
      type: SearchAThing.Sci.Quaternion
    content.vb: Public Shared Operator *(qa As Quaternion, qb As Quaternion) As Quaternion
  overload: SearchAThing.Sci.Quaternion.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SearchAThing.Sci.Quaternion.v*
  commentId: Overload:SearchAThing.Sci.Quaternion.v
  name: v
  nameWithType: Quaternion.v
  fullName: SearchAThing.Sci.Quaternion.v
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.Quaternion.#ctor*
  commentId: Overload:SearchAThing.Sci.Quaternion.#ctor
  name: Quaternion
  nameWithType: Quaternion.Quaternion
  fullName: SearchAThing.Sci.Quaternion.Quaternion
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SearchAThing.Sci.Quaternion.Identity*
  commentId: Overload:SearchAThing.Sci.Quaternion.Identity
  name: Identity
  nameWithType: Quaternion.Identity
  fullName: SearchAThing.Sci.Quaternion.Identity
- uid: SearchAThing.Sci.Quaternion
  commentId: T:SearchAThing.Sci.Quaternion
  parent: SearchAThing.Sci
  name: Quaternion
  nameWithType: Quaternion
  fullName: SearchAThing.Sci.Quaternion
- uid: SearchAThing.Sci.Quaternion.Conjugate*
  commentId: Overload:SearchAThing.Sci.Quaternion.Conjugate
  name: Conjugate
  nameWithType: Quaternion.Conjugate
  fullName: SearchAThing.Sci.Quaternion.Conjugate
- uid: SearchAThing.Sci.Quaternion.op_Multiply*
  commentId: Overload:SearchAThing.Sci.Quaternion.op_Multiply
  name: Multiply
  nameWithType: Quaternion.Multiply
  fullName: SearchAThing.Sci.Quaternion.Multiply
