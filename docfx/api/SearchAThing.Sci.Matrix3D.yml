### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.Matrix3D
  commentId: T:SearchAThing.Sci.Matrix3D
  id: Matrix3D
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.Matrix3D.#ctor
  - SearchAThing.Sci.Matrix3D.#ctor(System.Double[])
  - SearchAThing.Sci.Matrix3D.Adjoint
  - SearchAThing.Sci.Matrix3D.Cofactor
  - SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D,System.Int32)
  - SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D,System.Int32)
  - SearchAThing.Sci.Matrix3D.Determinant
  - SearchAThing.Sci.Matrix3D.EqualsTol(System.Double,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.FromVectorsAsColumns(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Matrix3D.FromVectorsAsRows(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Matrix3D.Inverse
  - SearchAThing.Sci.Matrix3D.Item(System.Int32,System.Int32)
  - SearchAThing.Sci.Matrix3D.Minor
  - SearchAThing.Sci.Matrix3D.op_Addition(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_Division(SearchAThing.Sci.Matrix3D,System.Double)
  - SearchAThing.Sci.Matrix3D.op_Division(System.Double,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,System.Double)
  - SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_Multiply(System.Double,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_Subtraction(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.op_UnaryNegation(SearchAThing.Sci.Matrix3D)
  - SearchAThing.Sci.Matrix3D.Solve(SearchAThing.Sci.Vector3D)
  - SearchAThing.Sci.Matrix3D.Solve(System.Double,System.Double,System.Double)
  - SearchAThing.Sci.Matrix3D.Transpose
  langs:
  - csharp
  - vb
  name: Matrix3D
  nameWithType: Matrix3D
  fullName: SearchAThing.Sci.Matrix3D
  type: Class
  source:
    id: Matrix3D
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 5
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: 'public class Matrix3D : object'
    content.vb: >-
      Public Class Matrix3D
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SearchAThing.Sci.Matrix3D.#ctor
  commentId: M:SearchAThing.Sci.Matrix3D.#ctor
  id: '#ctor'
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Matrix3D()
  nameWithType: Matrix3D.Matrix3D()
  fullName: SearchAThing.Sci.Matrix3D.Matrix3D()
  type: Constructor
  source:
    id: .ctor
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 13
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nempty matrix\n"
  example: []
  syntax:
    content: public Matrix3D()
    content.vb: Public Sub New
  overload: SearchAThing.Sci.Matrix3D.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.#ctor(System.Double[])
  commentId: M:SearchAThing.Sci.Matrix3D.#ctor(System.Double[])
  id: '#ctor(System.Double[])'
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Matrix3D(Double[])
  nameWithType: Matrix3D.Matrix3D(Double[])
  fullName: SearchAThing.Sci.Matrix3D.Matrix3D(System.Double[])
  type: Constructor
  source:
    id: .ctor
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 21
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nInit matrix using terms m00 m01 m02 - m10 m11 m12 - m20 m21 m22\n"
  example: []
  syntax:
    content: public Matrix3D(double[] terms)
    parameters:
    - id: terms
      type: System.Double[]
    content.vb: Public Sub New(terms As Double())
  overload: SearchAThing.Sci.Matrix3D.#ctor*
  nameWithType.vb: Matrix3D.Matrix3D(Double())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SearchAThing.Sci.Matrix3D.Matrix3D(System.Double())
  name.vb: Matrix3D(Double())
- uid: SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D,System.Int32)
  commentId: M:SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D,System.Int32)
  id: CopyVectorAsRow(SearchAThing.Sci.Vector3D,System.Int32)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: CopyVectorAsRow(Vector3D, Int32)
  nameWithType: Matrix3D.CopyVectorAsRow(Vector3D, Int32)
  fullName: SearchAThing.Sci.Matrix3D.CopyVectorAsRow(SearchAThing.Sci.Vector3D, System.Int32)
  type: Method
  source:
    id: CopyVectorAsRow
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 34
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Matrix3D CopyVectorAsRow(Vector3D v, int rowIdx)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: rowIdx
      type: System.Int32
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function CopyVectorAsRow(v As Vector3D, rowIdx As Integer) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.CopyVectorAsRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D,System.Int32)
  commentId: M:SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D,System.Int32)
  id: CopyVectorAsColumn(SearchAThing.Sci.Vector3D,System.Int32)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: CopyVectorAsColumn(Vector3D, Int32)
  nameWithType: Matrix3D.CopyVectorAsColumn(Vector3D, Int32)
  fullName: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn(SearchAThing.Sci.Vector3D, System.Int32)
  type: Method
  source:
    id: CopyVectorAsColumn
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 43
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Matrix3D CopyVectorAsColumn(Vector3D v, int colIdx)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: colIdx
      type: System.Int32
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function CopyVectorAsColumn(v As Vector3D, colIdx As Integer) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.FromVectorsAsRows(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Matrix3D.FromVectorsAsRows(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: FromVectorsAsRows(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: FromVectorsAsRows(Vector3D, Vector3D, Vector3D)
  nameWithType: Matrix3D.FromVectorsAsRows(Vector3D, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Matrix3D.FromVectorsAsRows(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    id: FromVectorsAsRows
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 52
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static Matrix3D FromVectorsAsRows(Vector3D v1, Vector3D v2, Vector3D v3)
    parameters:
    - id: v1
      type: SearchAThing.Sci.Vector3D
    - id: v2
      type: SearchAThing.Sci.Vector3D
    - id: v3
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Function FromVectorsAsRows(v1 As Vector3D, v2 As Vector3D, v3 As Vector3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.FromVectorsAsRows*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Matrix3D.FromVectorsAsColumns(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  id: FromVectorsAsColumns(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: FromVectorsAsColumns(Vector3D, Vector3D, Vector3D)
  nameWithType: Matrix3D.FromVectorsAsColumns(Vector3D, Vector3D, Vector3D)
  fullName: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D, SearchAThing.Sci.Vector3D)
  type: Method
  source:
    id: FromVectorsAsColumns
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 63
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public static Matrix3D FromVectorsAsColumns(Vector3D v1, Vector3D v2, Vector3D v3)
    parameters:
    - id: v1
      type: SearchAThing.Sci.Vector3D
    - id: v2
      type: SearchAThing.Sci.Vector3D
    - id: v3
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Function FromVectorsAsColumns(v1 As Vector3D, v2 As Vector3D, v3 As Vector3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.EqualsTol(System.Double,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.EqualsTol(System.Double,SearchAThing.Sci.Matrix3D)
  id: EqualsTol(System.Double,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: EqualsTol(Double, Matrix3D)
  nameWithType: Matrix3D.EqualsTol(Double, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.EqualsTol(System.Double, SearchAThing.Sci.Matrix3D)
  type: Method
  source:
    id: EqualsTol
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 74
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public bool EqualsTol(double tol, Matrix3D other)
    parameters:
    - id: tol
      type: System.Double
    - id: other
      type: SearchAThing.Sci.Matrix3D
    return:
      type: System.Boolean
    content.vb: Public Function EqualsTol(tol As Double, other As Matrix3D) As Boolean
  overload: SearchAThing.Sci.Matrix3D.EqualsTol*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.Transpose
  commentId: M:SearchAThing.Sci.Matrix3D.Transpose
  id: Transpose
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Transpose()
  nameWithType: Matrix3D.Transpose()
  fullName: SearchAThing.Sci.Matrix3D.Transpose()
  type: Method
  source:
    id: Transpose
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 89
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nswap row, cols\n"
  example: []
  syntax:
    content: public Matrix3D Transpose()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Transpose As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Transpose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.Determinant
  commentId: M:SearchAThing.Sci.Matrix3D.Determinant
  id: Determinant
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Determinant()
  nameWithType: Matrix3D.Determinant()
  fullName: SearchAThing.Sci.Matrix3D.Determinant()
  type: Method
  source:
    id: Determinant
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 107
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nMatrix determinant\nhttp://mathcentral.uregina.ca/QQ/database/QQ.09.06/h/suud1.html\n"
  example: []
  syntax:
    content: public double Determinant()
    return:
      type: System.Double
    content.vb: Public Function Determinant As Double
  overload: SearchAThing.Sci.Matrix3D.Determinant*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.Minor
  commentId: M:SearchAThing.Sci.Matrix3D.Minor
  id: Minor
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Minor()
  nameWithType: Matrix3D.Minor()
  fullName: SearchAThing.Sci.Matrix3D.Minor()
  type: Method
  source:
    id: Minor
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 119
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nMatrix of minors\nhttp://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html\n"
  example: []
  syntax:
    content: public Matrix3D Minor()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Minor As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Minor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.Cofactor
  commentId: M:SearchAThing.Sci.Matrix3D.Cofactor
  id: Cofactor
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Cofactor()
  nameWithType: Matrix3D.Cofactor()
  fullName: SearchAThing.Sci.Matrix3D.Cofactor()
  type: Method
  source:
    id: Cofactor
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 142
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nMatrix of cofactors\nhttp://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html\n"
  example: []
  syntax:
    content: public Matrix3D Cofactor()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Cofactor As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Cofactor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.Adjoint
  commentId: M:SearchAThing.Sci.Matrix3D.Adjoint
  id: Adjoint
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Adjoint()
  nameWithType: Matrix3D.Adjoint()
  fullName: SearchAThing.Sci.Matrix3D.Adjoint()
  type: Method
  source:
    id: Adjoint
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 161
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nAdjoint matrix\nhttp://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html\n"
  example: []
  syntax:
    content: public Matrix3D Adjoint()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Adjoint As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Adjoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.Inverse
  commentId: M:SearchAThing.Sci.Matrix3D.Inverse
  id: Inverse
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Inverse()
  nameWithType: Matrix3D.Inverse()
  fullName: SearchAThing.Sci.Matrix3D.Inverse()
  type: Method
  source:
    id: Inverse
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 170
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nInverse matrix\nhttp://www.mathsisfun.com/algebra/matrix-inverse-minors-cofactors-adjugate.html\n"
  example: []
  syntax:
    content: public Matrix3D Inverse()
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Function Inverse As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.Inverse*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.Solve(System.Double,System.Double,System.Double)
  commentId: M:SearchAThing.Sci.Matrix3D.Solve(System.Double,System.Double,System.Double)
  id: Solve(System.Double,System.Double,System.Double)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Solve(Double, Double, Double)
  nameWithType: Matrix3D.Solve(Double, Double, Double)
  fullName: SearchAThing.Sci.Matrix3D.Solve(System.Double, System.Double, System.Double)
  type: Method
  source:
    id: Solve
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 179
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nSolve linear system of eq represented by this matrix\ndefined (a,b,c) known terms.        \n"
  example: []
  syntax:
    content: public Vector3D Solve(double a, double b, double c)
    parameters:
    - id: a
      type: System.Double
    - id: b
      type: System.Double
    - id: c
      type: System.Double
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Solve(a As Double, b As Double, c As Double) As Vector3D
  overload: SearchAThing.Sci.Matrix3D.Solve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.Solve(SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Matrix3D.Solve(SearchAThing.Sci.Vector3D)
  id: Solve(SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Solve(Vector3D)
  nameWithType: Matrix3D.Solve(Vector3D)
  fullName: SearchAThing.Sci.Matrix3D.Solve(SearchAThing.Sci.Vector3D)
  type: Method
  source:
    id: Solve
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 188
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nSolve linear system of eq represented by this matrix\ndefined n known term.\n"
  example: []
  syntax:
    content: public Vector3D Solve(Vector3D n)
    parameters:
    - id: n
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Function Solve(n As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Matrix3D.Solve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SearchAThing.Sci.Matrix3D.op_Addition(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Addition(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  id: op_Addition(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Addition(Matrix3D, Matrix3D)
  nameWithType: Matrix3D.Addition(Matrix3D, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.Addition(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    id: op_Addition
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 199
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nsum\n"
  example: []
  syntax:
    content: public static Matrix3D operator +(Matrix3D a, Matrix3D b)
    parameters:
    - id: a
      type: SearchAThing.Sci.Matrix3D
    - id: b
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator +(a As Matrix3D, b As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.op_Subtraction(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Subtraction(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  id: op_Subtraction(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Subtraction(Matrix3D, Matrix3D)
  nameWithType: Matrix3D.Subtraction(Matrix3D, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.Subtraction(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    id: op_Subtraction
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 217
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nsub\n"
  example: []
  syntax:
    content: public static Matrix3D operator -(Matrix3D a, Matrix3D b)
    parameters:
    - id: a
      type: SearchAThing.Sci.Matrix3D
    - id: b
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator -(a As Matrix3D, b As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.op_UnaryNegation(SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_UnaryNegation(SearchAThing.Sci.Matrix3D)
  id: op_UnaryNegation(SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: UnaryNegation(Matrix3D)
  nameWithType: Matrix3D.UnaryNegation(Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.UnaryNegation(SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    id: op_UnaryNegation
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 235
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nneg\n"
  example: []
  syntax:
    content: public static Matrix3D operator -(Matrix3D m)
    parameters:
    - id: m
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator -(m As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.op_Multiply(System.Double,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Multiply(System.Double,SearchAThing.Sci.Matrix3D)
  id: op_Multiply(System.Double,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Multiply(Double, Matrix3D)
  nameWithType: Matrix3D.Multiply(Double, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.Multiply(System.Double, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    id: op_Multiply
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 253
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nscalar multiply\n"
  example: []
  syntax:
    content: public static Matrix3D operator *(double s, Matrix3D m)
    parameters:
    - id: s
      type: System.Double
    - id: m
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator *(s As Double, m As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,System.Double)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,System.Double)
  id: op_Multiply(SearchAThing.Sci.Matrix3D,System.Double)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Multiply(Matrix3D, Double)
  nameWithType: Matrix3D.Multiply(Matrix3D, Double)
  fullName: SearchAThing.Sci.Matrix3D.Multiply(SearchAThing.Sci.Matrix3D, System.Double)
  type: Operator
  source:
    id: op_Multiply
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 271
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nscalar multiply\n"
  example: []
  syntax:
    content: public static Matrix3D operator *(Matrix3D m, double s)
    parameters:
    - id: m
      type: SearchAThing.Sci.Matrix3D
    - id: s
      type: System.Double
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator *(m As Matrix3D, s As Double) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.op_Division(System.Double,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Division(System.Double,SearchAThing.Sci.Matrix3D)
  id: op_Division(System.Double,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Division(Double, Matrix3D)
  nameWithType: Matrix3D.Division(Double, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.Division(System.Double, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    id: op_Division
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 289
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nscalar div\n"
  example: []
  syntax:
    content: public static Matrix3D operator /(double s, Matrix3D m)
    parameters:
    - id: s
      type: System.Double
    - id: m
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator /(s As Double, m As Matrix3D) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.op_Division(SearchAThing.Sci.Matrix3D,System.Double)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Division(SearchAThing.Sci.Matrix3D,System.Double)
  id: op_Division(SearchAThing.Sci.Matrix3D,System.Double)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Division(Matrix3D, Double)
  nameWithType: Matrix3D.Division(Matrix3D, Double)
  fullName: SearchAThing.Sci.Matrix3D.Division(SearchAThing.Sci.Matrix3D, System.Double)
  type: Operator
  source:
    id: op_Division
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 307
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nscalar div\n"
  example: []
  syntax:
    content: public static Matrix3D operator /(Matrix3D m, double s)
    parameters:
    - id: m
      type: SearchAThing.Sci.Matrix3D
    - id: s
      type: System.Double
    return:
      type: SearchAThing.Sci.Matrix3D
    content.vb: Public Shared Operator /(m As Matrix3D, s As Double) As Matrix3D
  overload: SearchAThing.Sci.Matrix3D.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.Item(System.Int32,System.Int32)
  commentId: P:SearchAThing.Sci.Matrix3D.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: Matrix3D.Item[Int32, Int32]
  fullName: SearchAThing.Sci.Matrix3D.Item[System.Int32, System.Int32]
  type: Property
  source:
    id: this[]
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 325
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nindexed matrix component [row,col]\n"
  example: []
  syntax:
    content: public double this[int r, int c] { get; }
    parameters:
    - id: r
      type: System.Int32
    - id: c
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Item(r As Integer, c As Integer) As Double
  overload: SearchAThing.Sci.Matrix3D.Item*
  nameWithType.vb: Matrix3D.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SearchAThing.Sci.Matrix3D.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
- uid: SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Vector3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Vector3D)
  id: op_Multiply(SearchAThing.Sci.Matrix3D,SearchAThing.Sci.Vector3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Multiply(Matrix3D, Vector3D)
  nameWithType: Matrix3D.Multiply(Matrix3D, Vector3D)
  fullName: SearchAThing.Sci.Matrix3D.Multiply(SearchAThing.Sci.Matrix3D, SearchAThing.Sci.Vector3D)
  type: Operator
  source:
    id: op_Multiply
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 337
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nmatrix * vector as column -> vector\n3x3 x 3x1 -> 3x1\n"
  example: []
  syntax:
    content: public static Vector3D operator *(Matrix3D m, Vector3D v)
    parameters:
    - id: m
      type: SearchAThing.Sci.Matrix3D
    - id: v
      type: SearchAThing.Sci.Vector3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator *(m As Matrix3D, v As Vector3D) As Vector3D
  overload: SearchAThing.Sci.Matrix3D.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Matrix3D)
  commentId: M:SearchAThing.Sci.Matrix3D.op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Matrix3D)
  id: op_Multiply(SearchAThing.Sci.Vector3D,SearchAThing.Sci.Matrix3D)
  parent: SearchAThing.Sci.Matrix3D
  langs:
  - csharp
  - vb
  name: Multiply(Vector3D, Matrix3D)
  nameWithType: Matrix3D.Multiply(Vector3D, Matrix3D)
  fullName: SearchAThing.Sci.Matrix3D.Multiply(SearchAThing.Sci.Vector3D, SearchAThing.Sci.Matrix3D)
  type: Operator
  source:
    id: op_Multiply
    path: Z:\netcore-sci\netcore-sci\Matrix3D.cs
    startLine: 358
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  summary: "\nvector as row * matrix -> vector\n1x3 * 3x3 -> 1x3\n"
  example: []
  syntax:
    content: public static Vector3D operator *(Vector3D v, Matrix3D m)
    parameters:
    - id: v
      type: SearchAThing.Sci.Vector3D
    - id: m
      type: SearchAThing.Sci.Matrix3D
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public Shared Operator *(v As Vector3D, m As Matrix3D) As Vector3D
  overload: SearchAThing.Sci.Matrix3D.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SearchAThing.Sci.Matrix3D.#ctor*
  commentId: Overload:SearchAThing.Sci.Matrix3D.#ctor
  name: Matrix3D
  nameWithType: Matrix3D.Matrix3D
  fullName: SearchAThing.Sci.Matrix3D.Matrix3D
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SearchAThing.Sci.Matrix3D.CopyVectorAsRow*
  commentId: Overload:SearchAThing.Sci.Matrix3D.CopyVectorAsRow
  name: CopyVectorAsRow
  nameWithType: Matrix3D.CopyVectorAsRow
  fullName: SearchAThing.Sci.Matrix3D.CopyVectorAsRow
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SearchAThing.Sci.Matrix3D
  commentId: T:SearchAThing.Sci.Matrix3D
  parent: SearchAThing.Sci
  name: Matrix3D
  nameWithType: Matrix3D
  fullName: SearchAThing.Sci.Matrix3D
- uid: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn*
  commentId: Overload:SearchAThing.Sci.Matrix3D.CopyVectorAsColumn
  name: CopyVectorAsColumn
  nameWithType: Matrix3D.CopyVectorAsColumn
  fullName: SearchAThing.Sci.Matrix3D.CopyVectorAsColumn
- uid: SearchAThing.Sci.Matrix3D.FromVectorsAsRows*
  commentId: Overload:SearchAThing.Sci.Matrix3D.FromVectorsAsRows
  name: FromVectorsAsRows
  nameWithType: Matrix3D.FromVectorsAsRows
  fullName: SearchAThing.Sci.Matrix3D.FromVectorsAsRows
- uid: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns*
  commentId: Overload:SearchAThing.Sci.Matrix3D.FromVectorsAsColumns
  name: FromVectorsAsColumns
  nameWithType: Matrix3D.FromVectorsAsColumns
  fullName: SearchAThing.Sci.Matrix3D.FromVectorsAsColumns
- uid: SearchAThing.Sci.Matrix3D.EqualsTol*
  commentId: Overload:SearchAThing.Sci.Matrix3D.EqualsTol
  name: EqualsTol
  nameWithType: Matrix3D.EqualsTol
  fullName: SearchAThing.Sci.Matrix3D.EqualsTol
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SearchAThing.Sci.Matrix3D.Transpose*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Transpose
  name: Transpose
  nameWithType: Matrix3D.Transpose
  fullName: SearchAThing.Sci.Matrix3D.Transpose
- uid: SearchAThing.Sci.Matrix3D.Determinant*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Determinant
  name: Determinant
  nameWithType: Matrix3D.Determinant
  fullName: SearchAThing.Sci.Matrix3D.Determinant
- uid: SearchAThing.Sci.Matrix3D.Minor*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Minor
  name: Minor
  nameWithType: Matrix3D.Minor
  fullName: SearchAThing.Sci.Matrix3D.Minor
- uid: SearchAThing.Sci.Matrix3D.Cofactor*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Cofactor
  name: Cofactor
  nameWithType: Matrix3D.Cofactor
  fullName: SearchAThing.Sci.Matrix3D.Cofactor
- uid: SearchAThing.Sci.Matrix3D.Adjoint*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Adjoint
  name: Adjoint
  nameWithType: Matrix3D.Adjoint
  fullName: SearchAThing.Sci.Matrix3D.Adjoint
- uid: SearchAThing.Sci.Matrix3D.Inverse*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Inverse
  name: Inverse
  nameWithType: Matrix3D.Inverse
  fullName: SearchAThing.Sci.Matrix3D.Inverse
- uid: SearchAThing.Sci.Matrix3D.Solve*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Solve
  name: Solve
  nameWithType: Matrix3D.Solve
  fullName: SearchAThing.Sci.Matrix3D.Solve
- uid: SearchAThing.Sci.Matrix3D.op_Addition*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_Addition
  name: Addition
  nameWithType: Matrix3D.Addition
  fullName: SearchAThing.Sci.Matrix3D.Addition
- uid: SearchAThing.Sci.Matrix3D.op_Subtraction*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_Subtraction
  name: Subtraction
  nameWithType: Matrix3D.Subtraction
  fullName: SearchAThing.Sci.Matrix3D.Subtraction
- uid: SearchAThing.Sci.Matrix3D.op_UnaryNegation*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Matrix3D.UnaryNegation
  fullName: SearchAThing.Sci.Matrix3D.UnaryNegation
- uid: SearchAThing.Sci.Matrix3D.op_Multiply*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_Multiply
  name: Multiply
  nameWithType: Matrix3D.Multiply
  fullName: SearchAThing.Sci.Matrix3D.Multiply
- uid: SearchAThing.Sci.Matrix3D.op_Division*
  commentId: Overload:SearchAThing.Sci.Matrix3D.op_Division
  name: Division
  nameWithType: Matrix3D.Division
  fullName: SearchAThing.Sci.Matrix3D.Division
- uid: SearchAThing.Sci.Matrix3D.Item*
  commentId: Overload:SearchAThing.Sci.Matrix3D.Item
  name: Item
  nameWithType: Matrix3D.Item
  fullName: SearchAThing.Sci.Matrix3D.Item
