### YamlMime:ManagedReference
items:
- uid: SearchAThing.Sci.DiscreteSpaceItem`1
  commentId: T:SearchAThing.Sci.DiscreteSpaceItem`1
  id: DiscreteSpaceItem`1
  parent: SearchAThing.Sci
  children:
  - SearchAThing.Sci.DiscreteSpaceItem`1.#ctor(`0,Func{`0,IEnumerable{SearchAThing.Sci.Vector3D}})
  - SearchAThing.Sci.DiscreteSpaceItem`1.#ctor(`0,Func{`0,SearchAThing.Sci.Vector3D})
  - SearchAThing.Sci.DiscreteSpaceItem`1.Item
  - SearchAThing.Sci.DiscreteSpaceItem`1.Mean
  langs:
  - csharp
  - vb
  name: DiscreteSpaceItem<T>
  nameWithType: DiscreteSpaceItem<T>
  fullName: SearchAThing.Sci.DiscreteSpaceItem<T>
  type: Class
  source:
    id: DiscreteSpaceItem
    path: Z:\netcore-sci\netcore-sci\DiscreteSpace.cs
    startLine: 9
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: 'public class DiscreteSpaceItem<T> : object'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class DiscreteSpaceItem(Of T)
          Inherits Object
  inheritance:
  - System.Object
  nameWithType.vb: DiscreteSpaceItem(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: SearchAThing.Sci.DiscreteSpaceItem(Of T)
  name.vb: DiscreteSpaceItem(Of T)
- uid: SearchAThing.Sci.DiscreteSpaceItem`1.Mean
  commentId: P:SearchAThing.Sci.DiscreteSpaceItem`1.Mean
  id: Mean
  parent: SearchAThing.Sci.DiscreteSpaceItem`1
  langs:
  - csharp
  - vb
  name: Mean
  nameWithType: DiscreteSpaceItem<T>.Mean
  fullName: SearchAThing.Sci.DiscreteSpaceItem<T>.Mean
  type: Property
  source:
    id: Mean
    path: Z:\netcore-sci\netcore-sci\DiscreteSpace.cs
    startLine: 12
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public Vector3D Mean { get; }
    parameters: []
    return:
      type: SearchAThing.Sci.Vector3D
    content.vb: Public ReadOnly Property Mean As Vector3D
  overload: SearchAThing.Sci.DiscreteSpaceItem`1.Mean*
  nameWithType.vb: DiscreteSpaceItem(Of T).Mean
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SearchAThing.Sci.DiscreteSpaceItem(Of T).Mean
- uid: SearchAThing.Sci.DiscreteSpaceItem`1.Item
  commentId: P:SearchAThing.Sci.DiscreteSpaceItem`1.Item
  id: Item
  parent: SearchAThing.Sci.DiscreteSpaceItem`1
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: DiscreteSpaceItem<T>.Item
  fullName: SearchAThing.Sci.DiscreteSpaceItem<T>.Item
  type: Property
  source:
    id: Item
    path: Z:\netcore-sci\netcore-sci\DiscreteSpace.cs
    startLine: 14
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public T Item { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Item As T
  overload: SearchAThing.Sci.DiscreteSpaceItem`1.Item*
  nameWithType.vb: DiscreteSpaceItem(Of T).Item
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SearchAThing.Sci.DiscreteSpaceItem(Of T).Item
- uid: SearchAThing.Sci.DiscreteSpaceItem`1.#ctor(`0,Func{`0,SearchAThing.Sci.Vector3D})
  commentId: M:SearchAThing.Sci.DiscreteSpaceItem`1.#ctor(`0,Func{`0,SearchAThing.Sci.Vector3D})
  id: '#ctor(`0,Func{`0,SearchAThing.Sci.Vector3D})'
  parent: SearchAThing.Sci.DiscreteSpaceItem`1
  langs:
  - csharp
  - vb
  name: DiscreteSpaceItem(T, Func<T, Vector3D>)
  nameWithType: DiscreteSpaceItem<T>.DiscreteSpaceItem(T, Func<T, Vector3D>)
  fullName: SearchAThing.Sci.DiscreteSpaceItem<T>.DiscreteSpaceItem(T, Func<T, SearchAThing.Sci.Vector3D>)
  type: Constructor
  source:
    id: .ctor
    path: Z:\netcore-sci\netcore-sci\DiscreteSpace.cs
    startLine: 21
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public DiscreteSpaceItem(T _Item, Func<T, Vector3D> entPoint)
    parameters:
    - id: _Item
      type: '{T}'
    - id: entPoint
      type: Func{{T},SearchAThing.Sci.Vector3D}
    content.vb: Public Sub New(_Item As T, entPoint As Func(Of T, Vector3D))
  overload: SearchAThing.Sci.DiscreteSpaceItem`1.#ctor*
  nameWithType.vb: DiscreteSpaceItem(Of T).DiscreteSpaceItem(T, Func(Of T, Vector3D))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SearchAThing.Sci.DiscreteSpaceItem(Of T).DiscreteSpaceItem(T, Func(Of T, SearchAThing.Sci.Vector3D))
  name.vb: DiscreteSpaceItem(T, Func(Of T, Vector3D))
- uid: SearchAThing.Sci.DiscreteSpaceItem`1.#ctor(`0,Func{`0,IEnumerable{SearchAThing.Sci.Vector3D}})
  commentId: M:SearchAThing.Sci.DiscreteSpaceItem`1.#ctor(`0,Func{`0,IEnumerable{SearchAThing.Sci.Vector3D}})
  id: '#ctor(`0,Func{`0,IEnumerable{SearchAThing.Sci.Vector3D}})'
  parent: SearchAThing.Sci.DiscreteSpaceItem`1
  langs:
  - csharp
  - vb
  name: DiscreteSpaceItem(T, Func<T, IEnumerable<Vector3D>>)
  nameWithType: DiscreteSpaceItem<T>.DiscreteSpaceItem(T, Func<T, IEnumerable<Vector3D>>)
  fullName: SearchAThing.Sci.DiscreteSpaceItem<T>.DiscreteSpaceItem(T, Func<T, IEnumerable<SearchAThing.Sci.Vector3D>>)
  type: Constructor
  source:
    id: .ctor
    path: Z:\netcore-sci\netcore-sci\DiscreteSpace.cs
    startLine: 27
  assemblies:
  - netcore-sci
  namespace: SearchAThing.Sci
  syntax:
    content: public DiscreteSpaceItem(T _Item, Func<T, IEnumerable<Vector3D>> entPoints)
    parameters:
    - id: _Item
      type: '{T}'
    - id: entPoints
      type: Func{{T},IEnumerable{SearchAThing.Sci.Vector3D}}
    content.vb: Public Sub New(_Item As T, entPoints As Func(Of T, IEnumerable(Of Vector3D)))
  overload: SearchAThing.Sci.DiscreteSpaceItem`1.#ctor*
  nameWithType.vb: DiscreteSpaceItem(Of T).DiscreteSpaceItem(T, Func(Of T, IEnumerable(Of Vector3D)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SearchAThing.Sci.DiscreteSpaceItem(Of T).DiscreteSpaceItem(T, Func(Of T, IEnumerable(Of SearchAThing.Sci.Vector3D)))
  name.vb: DiscreteSpaceItem(T, Func(Of T, IEnumerable(Of Vector3D)))
references:
- uid: SearchAThing.Sci
  commentId: N:SearchAThing.Sci
  name: SearchAThing.Sci
  nameWithType: SearchAThing.Sci
  fullName: SearchAThing.Sci
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SearchAThing.Sci.DiscreteSpaceItem`1.Mean*
  commentId: Overload:SearchAThing.Sci.DiscreteSpaceItem`1.Mean
  name: Mean
  nameWithType: DiscreteSpaceItem<T>.Mean
  fullName: SearchAThing.Sci.DiscreteSpaceItem<T>.Mean
  nameWithType.vb: DiscreteSpaceItem(Of T).Mean
  fullName.vb: SearchAThing.Sci.DiscreteSpaceItem(Of T).Mean
- uid: SearchAThing.Sci.Vector3D
  commentId: T:SearchAThing.Sci.Vector3D
  parent: SearchAThing.Sci
  name: Vector3D
  nameWithType: Vector3D
  fullName: SearchAThing.Sci.Vector3D
- uid: SearchAThing.Sci.DiscreteSpaceItem`1.Item*
  commentId: Overload:SearchAThing.Sci.DiscreteSpaceItem`1.Item
  name: Item
  nameWithType: DiscreteSpaceItem<T>.Item
  fullName: SearchAThing.Sci.DiscreteSpaceItem<T>.Item
  nameWithType.vb: DiscreteSpaceItem(Of T).Item
  fullName.vb: SearchAThing.Sci.DiscreteSpaceItem(Of T).Item
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SearchAThing.Sci.DiscreteSpaceItem`1.#ctor*
  commentId: Overload:SearchAThing.Sci.DiscreteSpaceItem`1.#ctor
  name: DiscreteSpaceItem
  nameWithType: DiscreteSpaceItem<T>.DiscreteSpaceItem
  fullName: SearchAThing.Sci.DiscreteSpaceItem<T>.DiscreteSpaceItem
  nameWithType.vb: DiscreteSpaceItem(Of T).DiscreteSpaceItem
  fullName.vb: SearchAThing.Sci.DiscreteSpaceItem(Of T).DiscreteSpaceItem
- uid: Func{{T},SearchAThing.Sci.Vector3D}
  commentId: '!:Func{``0,SearchAThing.Sci.Vector3D}'
  definition: Func`2
  name: Func<T, Vector3D>
  nameWithType: Func<T, Vector3D>
  fullName: Func<T, SearchAThing.Sci.Vector3D>
  nameWithType.vb: Func(Of T, Vector3D)
  fullName.vb: Func(Of T, SearchAThing.Sci.Vector3D)
  name.vb: Func(Of T, Vector3D)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    nameWithType: Vector3D
    fullName: SearchAThing.Sci.Vector3D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    nameWithType: Vector3D
    fullName: SearchAThing.Sci.Vector3D
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Func{{T},IEnumerable{SearchAThing.Sci.Vector3D}}
  commentId: '!:Func{`0,IEnumerable{SearchAThing.Sci.Vector3D}}'
  definition: Func`2
  name: Func<T, IEnumerable<Vector3D>>
  nameWithType: Func<T, IEnumerable<Vector3D>>
  fullName: Func<T, IEnumerable<SearchAThing.Sci.Vector3D>>
  nameWithType.vb: Func(Of T, IEnumerable(Of Vector3D))
  fullName.vb: Func(Of T, IEnumerable(Of SearchAThing.Sci.Vector3D))
  name.vb: Func(Of T, IEnumerable(Of Vector3D))
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    nameWithType: Vector3D
    fullName: SearchAThing.Sci.Vector3D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SearchAThing.Sci.Vector3D
    name: Vector3D
    nameWithType: Vector3D
    fullName: SearchAThing.Sci.Vector3D
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
